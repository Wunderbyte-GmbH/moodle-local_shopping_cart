{"version":3,"file":"address.min.js","sources":["../src/address.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {showNotification} from 'local_shopping_cart/notifications';\nimport ModalForm from 'core_form/modalform';\n\nimport {get_string as getString} from 'core/str';\nimport Templates from 'core/templates';\n\nconst SELECTORS = {\n    ADDRESSRENDERCONTAINER: '#addressestemplatespace',\n    NEWADDRESSBUTTON: '.shopping-cart-new-address',\n};\n\nconst DELETESELECTEDADDRESS = '.shopping-cart-delete-selected-address';\n\nexport const init = () => {\n    const buttons = document.querySelectorAll(SELECTORS.NEWADDRESSBUTTON);\n    if (buttons) {\n        buttons.forEach(newAddressButton => {\n            newAddressButton.addEventListener('click', e => {\n                e.preventDefault();\n                newAddressModal(newAddressButton);\n            });\n        });\n    }\n    setDeletionEventListeners();\n};\n\n/**\n * Show Modal.\n */\nexport function setDeletionEventListeners() {\n    const deleteAddressButtons = document.querySelectorAll(DELETESELECTEDADDRESS);\n    if (deleteAddressButtons) {\n        deleteAddressButtons.forEach(deleteAddressButton => {\n            deleteAddressButton.addEventListener('click', e => {\n                handleAddressDeletion(e, deleteAddressButton);\n            });\n        });\n    }\n}\n\n/**\n * Show Modal.\n * @param {Event} event\n * @param {HTMLElement} deleteAddressButton\n */\nexport function handleAddressDeletion(event, deleteAddressButton) {\n    event.preventDefault();\n    const addressKey = deleteAddressButton.dataset.addresskey;\n    const selectedradio = document.querySelector(\n        `input[name=\"selectedaddress_${addressKey}\"]:checked`\n    );\n\n    if (selectedradio) {\n        const addressId = selectedradio.value;\n        confirmAndDeleteAddress(addressId, deleteAddressButton);\n    } else {\n        getString('addresses:delete:noaddressselected', 'local_shopping_cart').then(str => {\n            showNotification(str, 'warning');\n            return;\n        }).catch(\n            // eslint-disable-next-line no-console\n            console.error\n        );\n    }\n}\n\n/**\n * Show a confirmation modal and trigger the address deletion process.\n * @param {string} addressId\n * @param {string} button\n */\nfunction confirmAndDeleteAddress(addressId, button) {\n\n    const modalForm = new ModalForm({\n        formClass: \"local_shopping_cart\\\\form\\\\delete_user_address\",\n        args: {addressid: addressId},\n        modalConfig: {\n            title: getString('addresses:delete:selected', 'local_shopping_cart'),\n        },\n        returnFocus: button,\n        saveButtonText: getString('addresses:delete:submit', 'local_shopping_cart')\n    });\n\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        deselectAddressCheckbox(button.dataset.addresskey);\n        const response = e.detail;\n        deleteAddress(response);\n        redrawRenderedAddresses(response.templatedata);\n    });\n\n    modalForm.show();\n    return;\n}\n\n/**\n * @param {String} addressType\n */\nfunction deselectAddressCheckbox(addressType) {\n    const selectedRadio = document.querySelector(`input[name=\"selectedaddress_${addressType}\"]:checked`);\n    if (selectedRadio) {\n        selectedRadio.checked = false;\n        const event = new Event('change', {bubbles: true});\n        selectedRadio.dispatchEvent(event);\n    }\n}\n\n/**\n * Trigger the address deletion via a web service.\n * @param {string} response\n */\nfunction deleteAddress(response) {\n    if (response == 1) {\n\n        getString('addresses:delete:success', 'local_shopping_cart').then(successMessage => {\n            showNotification(successMessage, 'success');\n            return;\n        }).catch(\n            // eslint-disable-next-line no-console\n            console.error\n        );\n    } else {\n        getString('addresses:delete:error', 'local_shopping_cart').then(successMessage => {\n            showNotification(successMessage, 'error');\n            return;\n        }).catch(\n            // eslint-disable-next-line no-console\n            console.error\n        );\n    }\n}\n\n/**\n * Show Modal.\n * @param {htmlElement} button\n */\nexport function newAddressModal(button) {\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_new_address\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {},\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('addresses:newaddress', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: button,\n        saveButtonText: getString('addresses:newaddress:submit', 'local_shopping_cart')\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        const response = e.detail;\n        getString('addresses:newaddress:saved', 'local_shopping_cart').then(str => {\n            showNotification(str, 'info');\n            return null;\n        }).catch((e) => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        redrawRenderedAddresses(response.templatedata);\n    });\n\n    modalForm.show();\n}\n\n/**\n * Re-Renders the address list with the newly returned data (most possible containing new saved addresses)\n * @param {Array} data data from addresses::get_template_render_data needed for rendering the address.mustache template\n */\nfunction redrawRenderedAddresses(data) {\n    Templates.renderForPromise('local_shopping_cart/address', data).then(({html, js}) => {\n        Templates.replaceNodeContents(document.querySelector(SELECTORS.ADDRESSRENDERCONTAINER), html, js);\n        const event = new CustomEvent('local_shopping_cart/addressesRedrawn', {});\n        document.dispatchEvent(event);\n        return null;\n    }).catch((e) => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n"],"names":["_interopRequireDefault","e","__esModule","default","_modalform","_templates","SELECTORS","ADDRESSRENDERCONTAINER","NEWADDRESSBUTTON","DELETESELECTEDADDRESS","setDeletionEventListeners","deleteAddressButtons","document","querySelectorAll","forEach","deleteAddressButton","addEventListener","handleAddressDeletion","event","preventDefault","addressKey","dataset","addresskey","selectedradio","querySelector","addressId","button","modalForm","ModalForm","formClass","args","addressid","modalConfig","title","getString","returnFocus","saveButtonText","events","FORM_SUBMITTED","addressType","selectedRadio","checked","Event","bubbles","dispatchEvent","deselectAddressCheckbox","response","detail","then","successMessage","showNotification","catch","console","error","deleteAddress","redrawRenderedAddresses","templatedata","show","confirmAndDeleteAddress","value","str","newAddressModal","log","data","Templates","renderForPromise","_ref","html","js","replaceNodeContents","CustomEvent","_exports","init","buttons","newAddressButton"],"mappings":"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"}