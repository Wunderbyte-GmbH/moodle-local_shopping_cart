{"version":3,"file":"cashout.min.js","sources":["../src/cashout.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {showNotification} from 'local_shopping_cart/notifications';\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\n\nconst SELECTORS = {\n    CASHOUTBUTTON: 'div.shopping-cart-cashout-button',\n    CASHTRANSFERBUTTON: 'div.shopping-cart-cashtransfer-button',\n};\n\n// Little hack to get strings at top-level although getString is asynchronous.\nlet cashoutsuccess = 'success';\nlet cashtransfersuccess = 'success';\n(async() => {\n    cashoutsuccess = await getString('cashoutsuccess', 'local_shopping_cart');\n    cashtransfersuccess = await getString('cashtransfersuccess', 'local_shopping_cart');\n})();\n\nexport const init = () => {\n    // eslint-disable-next-line no-console\n    console.log('run init');\n\n    // Cashout functionality.\n    const cashoutbutton = document.querySelector(SELECTORS.CASHOUTBUTTON);\n    if (cashoutbutton) {\n        cashoutbutton.addEventListener('click', e => {\n\n            // eslint-disable-next-line no-console\n            console.log(e.target);\n\n            cashoutModal(cashoutbutton);\n        });\n    }\n\n    // Cash transfer functionality.\n    const cashtransferbutton = document.querySelector(SELECTORS.CASHTRANSFERBUTTON);\n    if (cashtransferbutton) {\n        cashtransferbutton.addEventListener('click', e => {\n\n            // eslint-disable-next-line no-console\n            console.log(e.target);\n\n            cashtransferModal(cashtransferbutton);\n        });\n    }\n\n};\n\n/**\n * Show cashout modal.\n * @param {htmlElement} button\n */\nexport function cashoutModal(button) {\n\n    // eslint-disable-next-line no-console\n    console.log('cashoutModal');\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_cashout\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {},\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('cashout', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: button\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        const response = e.detail;\n        // eslint-disable-next-line no-console\n        console.log('cashoutModal response: ', response);\n\n        showNotification(cashoutsuccess, 'info');\n    });\n\n    // Show the form.\n    modalForm.show();\n\n}\n\n/**\n * Show cash transfer modal.\n * @param {htmlElement} button\n */\nexport function cashtransferModal(button) {\n\n    // eslint-disable-next-line no-console\n    console.log('cashtransferModal');\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_cashtransfer\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {},\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('cashtransfer', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: button\n    });\n\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        const response = e.detail;\n        // eslint-disable-next-line no-console\n        console.log('cashtransferModal response: ', response);\n        showNotification(cashtransfersuccess, 'info');\n    });\n\n    // Show the form.\n    modalForm.show();\n\n}\n"],"names":["SELECTORS","cashoutsuccess","cashtransfersuccess","cashoutModal","button","console","log","modalForm","ModalForm","formClass","args","modalConfig","title","returnFocus","addEventListener","events","FORM_SUBMITTED","e","response","detail","show","cashtransferModal","cashoutbutton","document","querySelector","target","cashtransferbutton"],"mappings":";;;;;sOAyBMA,wBACa,mCADbA,6BAEkB,4CAIpBC,eAAiB,UACjBC,oBAAsB,qBAEtBD,qBAAuB,mBAAU,iBAAkB,uBACnDC,0BAA4B,mBAAU,sBAAuB,oCAqCjDC,aAAaC,QAGzBC,QAAQC,IAAI,sBAENC,UAAY,IAAIC,mBAAU,CAG5BC,UAAW,2CAEXC,KAAM,GAENC,YAAa,CAACC,OAAO,mBAAU,UAAW,wBAE1CC,YAAaT,SAIjBG,UAAUO,iBAAiBP,UAAUQ,OAAOC,gBAAiBC,UACnDC,SAAWD,EAAEE,OAEnBd,QAAQC,IAAI,0BAA2BY,8CAEtBjB,eAAgB,WAIrCM,UAAUa,gBAQEC,kBAAkBjB,QAG9BC,QAAQC,IAAI,2BAENC,UAAY,IAAIC,mBAAU,CAG5BC,UAAW,gDAEXC,KAAM,GAENC,YAAa,CAACC,OAAO,mBAAU,eAAgB,wBAE/CC,YAAaT,SAKjBG,UAAUO,iBAAiBP,UAAUQ,OAAOC,gBAAiBC,UACnDC,SAAWD,EAAEE,OAEnBd,QAAQC,IAAI,+BAAgCY,8CAC3BhB,oBAAqB,WAI1CK,UAAUa,qBAhGM,KAEhBf,QAAQC,IAAI,kBAGNgB,cAAgBC,SAASC,cAAcxB,yBACzCsB,eACAA,cAAcR,iBAAiB,SAASG,IAGpCZ,QAAQC,IAAIW,EAAEQ,QAEdtB,aAAamB,wBAKfI,mBAAqBH,SAASC,cAAcxB,8BAC9C0B,oBACAA,mBAAmBZ,iBAAiB,SAASG,IAGzCZ,QAAQC,IAAIW,EAAEQ,QAEdJ,kBAAkBK"}