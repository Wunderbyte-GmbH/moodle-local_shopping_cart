{"version":3,"file":"cashier.min.js","sources":["../src/cashier.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Url from 'core/url';\nimport Notification from 'core/notification';\nimport ModalForm from 'core_form/modalform';\n\nimport {updateTotalPrice} from 'local_shopping_cart/cart';\n\nimport {\n    get_string as getString\n        }\n        from 'core/str';\n\nexport const init = (users, userid = 0) => {\n    // eslint-disable-next-line no-console\n    console.log('run init', userid);\n\n    document.getElementById('checkout-tab').classList.remove('success');\n\n    const buybuttons = document.querySelectorAll('.buy-btn');\n        // eslint-disable-next-line no-console\n        if (buybuttons) {\n            buybuttons.forEach(buybutton => {\n                buybutton.addEventListener('click', (e) => confirmPayment(userid, e.target.dataset.paymenttype));\n            });\n        }\n\n    const checkoutbutton = document.querySelector('#checkout-btn');\n    // eslint-disable-next-line no-console\n    console.log(checkoutbutton);\n    if (checkoutbutton) {\n        checkoutbutton.addEventListener('click', function() {\n\n            document.getElementById('checkout-tab').classList.add('success');\n            // eslint-disable-next-line no-console\n            console.log('click');\n        });\n    }\n\n    autocomplete(document.getElementById(\"searchuser\"), users);\n};\n\nexport const confirmPayment = (userid, paymenttype) => {\n    Ajax.call([{\n        methodname: \"local_shopping_cart_confirm_cash_payment\",\n        args: {\n            'userid': userid,\n            'paymenttype': paymenttype\n        },\n        done: function(data) {\n            if (data.status == 1) {\n                // eslint-disable-next-line no-console\n                console.log('payment confirmed', data);\n\n                // The function can be called via cashier, or because a user pays via credits.\n                // If that's the case, we are not on the cashier site.\n\n                const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n                // If we are not on cashier, we can just redirect.\n                if (oncashier < 1) {\n\n                    const identifier = data.identifier;\n\n                    const newurl = Url.fileUrl(\"/local/shopping_cart/checkout.php?success=1&identifier=\" + identifier, \"\");\n\n                    location.href = newurl;\n\n                } else {\n\n                    // This is the cachier view.\n\n                    // Set link to right receipt.\n                    addPrintIdentifier(data.identifier, userid);\n\n                    document.getElementById('success-tab').classList.add('success');\n\n                    if (data.credit) {\n                        const credittotal = document.querySelector('span.credit_total');\n                        credittotal.innerText = data.credit;\n                    }\n\n                    // We might display the item more often than once.\n                    let items = document.querySelectorAll('#shopping_cart-cashiers-cart ul.shopping-cart-items li.clearfix');\n\n                    items.forEach(item => {\n                        // eslint-disable-next-line no-console\n                        console.log(item);\n                        if (item) {\n                            item.remove();\n                        }\n                    });\n                    let totalprices = document.querySelectorAll('#shopping_cart-cashiers-cart .initialtotal');\n\n                    totalprices.forEach(item => {\n                        // eslint-disable-next-line no-console\n                        console.log(item);\n                        if (item) {\n                            item.innerText = 0;\n                        }\n                    });\n\n                    displayPaymentMessage('paymentsuccessful');\n                }\n\n            } else {\n\n                // eslint-disable-next-line no-console\n                console.log('payment denied');\n                displayPaymentMessage('paymentdenied', false);\n                document.getElementById('success-tab').classList.add('error');\n            }\n        },\n        fail: function(ex) {\n\n            displayPaymentMessage('paymentdenied', false);\n\n            // eslint-disable-next-line no-console\n            console.log(ex);\n        },\n    }]);\n};\n\nexport const validateCart = ($userid) => {\n    // eslint-disable-next-line no-alert\n    alert($userid);\n};\n\n/**\n * Adds parameters to the printbutton.\n * @param {int} identifier\n * @param {int} userid\n */\nexport const addPrintIdentifier = (identifier, userid) => {\n   let printbtn = document.getElementById('printbtn');\n   let href = printbtn.getAttribute('href');\n   printbtn.setAttribute('href', href + identifier + '&userid=' + userid);\n};\n\n/**\n * The autocomplete function takes two arguments.\n * The text field element and an array of possible autocompleted values.\n * @param {string} inp\n * @param {array} arr\n */\n export const autocomplete = (inp, arr) => {\n    var currentFocus;\n    const useridfield = document.querySelector('#useridfield');\n    inp.addEventListener(\"input\", function() {\n        var a, b, i;\n        let val = this.value;\n        closeAllLists();\n        if (!val) {\n            return false;\n        }\n        currentFocus = -1;\n        a = document.createElement(\"DIV\");\n        a.setAttribute(\"id\", this.id + \"autocomplete-list\");\n        a.setAttribute(\"class\", \"autocomplete-items\");\n        this.parentNode.appendChild(a);\n        for (i = 0; i < arr.length; i++) {\n            if (arr[i].toUpperCase().indexOf(val.toUpperCase()) > -1) {\n\n                /* Make the matching letters bold: */\n                let index = arr[i].toUpperCase().indexOf(val.toUpperCase());\n\n                /* Create a DIV element for each matching element: */\n                b = document.createElement(\"DIV\");\n\n                const namearray = arr[i].split(' ');\n                const firstname = namearray[0].toLowerCase();\n                const lastname = namearray[1].toLowerCase();\n\n                b.dataset.firstname = firstname;\n                b.dataset.lastname = lastname;\n                b.id = 'li_' + firstname + '_' + lastname;\n\n                b.innerHTML = arr[i].substr(0, index);\n                b.innerHTML += \"<strong>\"\n                        + arr[i].substr(arr[i].toUpperCase().indexOf(val.toUpperCase()), val.length) + \"</strong>\";\n                b.innerHTML += arr[i].substr(index + val.length);\n                /* Insert a input field that will hold the current array item's value: */\n                b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\n                b.addEventListener(\"click\", function() {\n                    inp.value = this.getElementsByTagName(\"input\")[0].value;\n                    useridfield.value = this.getElementsByTagName(\"input\")[0].value.split('uid:')[1];\n                    closeAllLists();\n                });\n                a.appendChild(b);\n            }\n        }\n        return null;\n    });\n\n    inp.addEventListener(\"keydown\", function(e) {\n        var x = document.getElementById(this.id + \"autocomplete-list\");\n        if (x) {\n            x = x.getElementsByTagName(\"div\");\n        }\n        if (e.keyCode == 40) {\n          currentFocus++;\n          addActive(x);\n        } else if (e.keyCode == 38) {\n          currentFocus--;\n          addActive(x);\n        } else if (e.keyCode == 13) {\n          e.preventDefault();\n          if (currentFocus > -1) {\n            if (x) {\n                x[currentFocus].click();\n            }\n          }\n        }\n    });\n\n    /**\n     * Add active.\n     * @param {*} x\n     */\n    function addActive(x) {\n        if (!x) {\n            return;\n        }\n        removeActive(x);\n        if (currentFocus >= x.length) {\n            currentFocus = 0;\n        }\n        if (currentFocus < 0) {\n            currentFocus = (x.length - 1);\n        }\n        x[currentFocus].classList.add(\"autocomplete-active\");\n    }\n\n    /**\n     * Remove active.\n     * @param {*} x\n     */\n    function removeActive(x) {\n        for (var i = 0; i < x.length; i++) {\n            x[i].classList.remove(\"autocomplete-active\");\n        }\n    }\n\n    /**\n     * Close all list elements.\n     * @param {*} elmnt\n     */\n    function closeAllLists(elmnt) {\n        var x = document.getElementsByClassName(\"autocomplete-items\");\n        for (var i = 0; i < x.length; i++) {\n            if (elmnt != x[i] && elmnt != inp) {\n            x[i].parentNode.removeChild(x[i]);\n            }\n        }\n    }\n    document.addEventListener(\"click\", function(e) {\n        closeAllLists(e.target);\n    });\n  };\n\n\n/**\n * Delete Event.\n * @param {HTMLElement} button\n * @param {int} userid\n */\n export function addDiscountEvent(button, userid = 0) {\n    // eslint-disable-next-line no-console\n    console.log('add to button', button);\n    if (userid != 0) {\n        button.dataset.userid = userid;\n    }\n    if (button.dataset.initialized) {\n        return;\n    }\n    button.dataset.initialized = true;\n    button.addEventListener('click', discountModal);\n}\n\n/**\n *\n */\nfunction discountModal() {\n\n    // We two parents up, we find the right element with the necessary information.\n    const element = this.closest('li');\n\n    // eslint-disable-next-line no-console\n    console.log('closest', element);\n\n    const price = element.dataset.price;\n    const itemid = element.dataset.id;\n    const userid = element.dataset.userid;\n    const componentname = element.dataset.component;\n\n    // eslint-disable-next-line no-console\n    console.log('discountModal', price, itemid, userid, componentname);\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_add_discount_to_item\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {'price': price,\n               'itemid': itemid,\n               'userid': userid,\n               'componentname': componentname},\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('applydiscount', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: element\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        const response = e.detail;\n        // eslint-disable-next-line no-console\n        console.log('confirmCancelAndSetCreditModal response: ', response);\n\n        updateTotalPrice(userid);\n    });\n\n    // Show the form.\n    modalForm.show();\n\n}\n\n/**\n * This function first displays the result at the right place.\n * It further uses the notification class to make result even more visible.\n * @param {string} message\n * @param {bool} success\n */\nfunction displayPaymentMessage(message, success = true) {\n    let displaymessage = document.querySelector('.payment_message_result');\n    if (displaymessage) {\n        getString(message, 'local_shopping_cart').then(localizedmessage => {\n\n            displaymessage.innerText = localizedmessage;\n\n            if (success) {\n                Notification.addNotification({\n                    message: localizedmessage,\n                    type: \"info\"\n                });\n            } else {\n                Notification.addNotification({\n                    message: localizedmessage,\n                    type: \"error\"\n                });\n            }\n            return;\n        }).catch(e => {\n\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n    }\n}"],"names":["button","userid","console","log","dataset","initialized","addEventListener","discountModal","users","document","getElementById","classList","remove","buybuttons","querySelectorAll","forEach","buybutton","e","confirmPayment","target","paymenttype","checkoutbutton","querySelector","add","autocomplete","call","methodname","args","done","data","status","window","location","href","indexOf","identifier","newurl","Url","fileUrl","addPrintIdentifier","credit","innerText","item","displayPaymentMessage","fail","ex","$userid","alert","printbtn","getAttribute","setAttribute","inp","arr","currentFocus","useridfield","addActive","x","i","length","removeActive","closeAllLists","elmnt","getElementsByClassName","parentNode","removeChild","a","b","val","this","value","createElement","id","appendChild","toUpperCase","index","namearray","split","firstname","toLowerCase","lastname","innerHTML","substr","getElementsByTagName","keyCode","preventDefault","click","element","closest","price","itemid","componentname","component","modalForm","ModalForm","formClass","modalConfig","title","returnFocus","events","FORM_SUBMITTED","response","detail","show","message","success","displaymessage","then","localizedmessage","addNotification","type","catch"],"mappings":"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"}