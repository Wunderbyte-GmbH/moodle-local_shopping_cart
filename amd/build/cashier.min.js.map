{"version":3,"file":"cashier.min.js","sources":["../src/cashier.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/* eslint-disable no-console */\n\n/*\n * The Cashier module.\n *\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Url from 'core/url';\nimport {showNotification} from 'local_shopping_cart/notifications';\nimport ModalForm from 'core_form/modalform';\nimport ModalFactory from 'core/modal_factory';\nimport {reinit} from 'local_shopping_cart/cart';\nimport {deleteAllItems} from 'local_shopping_cart/cart';\nimport {get_string as getString} from 'core/str';\nimport DynamicForm from 'core_form/dynamicform';\nimport {reloadHistory} from './shistory';\n\nconst SELECTORS = {\n    USERSELECTORFORM: '[data-id=\"sc-selectuserformcontainer\"]',\n};\n/**\n * Init function.\n * @param {*} userid the user id, 0 means logged-in USER\n */\nexport const init = (userid = 0) => {\n\n    console.log('run init', userid);\n\n    document.getElementById('checkout-tab').classList.remove('success');\n\n    const buybuttons = document.querySelectorAll('.buy-btn');\n    const manualrebookbtn = document.querySelector('#cashiermanualrebook-btn');\n    const cartcancelbtn = document.querySelector('#shoppingcart-cancel-btn');\n\n    if (buybuttons) {\n        buybuttons.forEach(buybutton => {\n            buybutton.addEventListener('click', (e) => confirmPayment(userid, e.target.dataset.paymenttype, ''));\n        });\n    }\n\n    if (manualrebookbtn) {\n        manualrebookbtn.addEventListener('click', (e) => rebookOrderidModal(userid, e.target.dataset.paymenttype));\n    }\n\n    if (cartcancelbtn) {\n        cartcancelbtn.addEventListener('click', () => {\n            deleteAllItems(userid);\n            const newurl = Url.relativeUrl(\"/local/shopping_cart/cashier.php\", [], false);\n            location.href = newurl;\n        });\n    }\n\n    const checkoutbutton = document.querySelector('#checkout-btn');\n\n    console.log(checkoutbutton);\n    if (checkoutbutton) {\n        checkoutbutton.addEventListener('click', function() {\n\n            document.getElementById('checkout-tab').classList.add('success');\n        });\n    }\n\n    initUserSelectorForm();\n};\n\nexport const confirmPayment = (userid, paymenttype, annotation = '') => {\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_confirm_cash_payment\",\n        args: {\n            'userid': userid,\n            'paymenttype': paymenttype,\n            'annotation': annotation,\n        },\n        done: function(data) {\n            if (data.status === 1) {\n\n                console.log('payment confirmed', data);\n                reloadHistory(userid);\n\n                // The function can be called via cashier, or because a user pays via credits.\n                // If that's the case, we are not on the cashier site.\n\n                const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n                // If we are not on cashier, we can just redirect.\n                if (oncashier < 1) {\n\n                    const identifier = data.identifier;\n\n                    let params = {\n                        success: 1,\n                        identifier: identifier,\n                    };\n\n                    const newurl = Url.relativeUrl(\"/local/shopping_cart/checkout.php\", params, false);\n\n                    location.href = newurl;\n\n                } else {\n                    // Set link to right receipt.\n                    addPrintIdentifier(data.identifier, userid);\n\n                    const successtab = document.getElementById('success-tab');\n                    if (successtab) {\n                        successtab.classList.add('success');\n                        displayPaymentMessage('paymentsuccessful');\n                    }\n\n                }\n\n            } else {\n                console.log('payment denied');\n                console.log(data);\n                displayErrorModal(data);\n                displayPaymentMessage('paymentdenied', false);\n\n                const successtab = document.getElementById('success-tab');\n                if (successtab) {\n                    successtab.classList.add('error');\n                }\n            }\n        },\n        fail: function(ex) {\n\n            displayPaymentMessage('paymentdenied', false);\n\n            console.log(ex);\n        },\n    }]);\n};\n\nexport const validateCart = ($userid) => {\n    // eslint-disable-next-line no-alert\n    alert($userid);\n};\n\n/**\n * Adds parameters to the printbutton.\n * @param {int} identifier\n * @param {int} userid\n */\nexport const addPrintIdentifier = (identifier, userid) => {\n   let printbtn = document.getElementById('printbtn');\n   let href = printbtn.getAttribute('href');\n   printbtn.setAttribute('href', href + identifier + '&userid=' + userid);\n};\n\n/**\n *\n * @param {*} event\n */\nexport function discountModal(event) {\n\n    // We two parents up, we find the right element with the necessary information.\n    const element = event.target.closest('.shopping-cart-item');\n\n    /* Console.log('closest', element); */\n\n    const price = element.dataset.price;\n    const itemid = element.dataset.itemid;\n    const userid = element.dataset.userid;\n    const componentname = element.dataset.component;\n    const area = element.dataset.area;\n\n    /* Console.log('discountModal', price, itemid, userid, componentname, 'area ' + area); */\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_add_discount_to_item\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {'price': price,\n               'itemid': itemid,\n               'userid': userid,\n               'componentname': componentname,\n               'area': area},\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('applydiscount', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: element\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => {\n\n        /* Const response = e.detail;\n        console.log('confirmCancelAndSetCreditModal response: ', response); */\n\n        reinit(-1);\n    });\n\n    // Show the form.\n    modalForm.show();\n\n}\n\n/**\n * This function first displays the result at the right place.\n * It further uses the notification class to make result even more visible.\n * @param {string} message\n * @param {bool} success\n */\nfunction displayPaymentMessage(message, success = true) {\n    let displaymessage = document.querySelector('.payment_message_result');\n    if (displaymessage) {\n        getString(message, 'local_shopping_cart').then(localizedmessage => {\n\n            displaymessage.innerText = localizedmessage;\n\n            if (success) {\n                showNotification(localizedmessage, \"info\");\n            } else {\n                showNotification(localizedmessage, \"error\");\n            }\n            return;\n        }).catch(e => {\n            showNotification(`Error: ${e}`, \"error\");\n        });\n    }\n}\n\n/**\n * If the error returned contains a message, display it in a modal.\n * @param {object} data\n */\nfunction displayErrorModal(data) {\n\n    if (typeof data.error !== \"string\") {\n        return;\n    }\n\n    let modaltitle = getString('checkouterrormodaltitle', 'local_shopping_cart');\n    ModalFactory.create({\n        type: ModalFactory.types.ALERT,\n        title: modaltitle,\n        body: data.error,\n        removeOnClose: true,\n    }).then(modal => {\n        modal.show();\n        return modal;\n    }).catch(e => {\n        console.log(e);\n    });\n\n}\n\n/**\n * Modal to enter OrderID for manual rebookings.\n * @param {int} userid\n * @param {int} identifier\n */\nexport function rebookOrderidModal(userid, identifier) {\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_cashier_manual_rebook\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {\n            'userid': userid,\n            'identifier': identifier,\n        },\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('annotation_rebook_desc', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        // returnFocus: button\n    });\n\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        const response = e.detail;\n\n        /* Console.log('rebookOrderidModal response: ', response); */\n\n        // We just add the paidby code to the annotation.\n        confirmPayment(userid, 7, `${response.annotation} ${response.paidby}`);\n    });\n\n    // Show the form.\n    modalForm.show();\n\n}\n\n/**\n * Init the user selector form.\n *\n */\nfunction initUserSelectorForm() {\n\n    const element = document.querySelector(SELECTORS.USERSELECTORFORM);\n\n    // Initialize the form.\n    const dynamicForm = new DynamicForm(\n        element,\n        'local_shopping_cart\\\\form\\\\dynamic_select_users'\n    );\n\n    console.log(dynamicForm);\n    // When form is submitted - remove it from DOM:\n    dynamicForm.addEventListener(dynamicForm.events.FORM_SUBMITTED, e => {\n        const response = e.detail;\n        console.log(response);\n\n        if (response.redirecturl) {\n            location.href = response.redirecturl;\n        } else {\n            showNotification('no user found', \"error\");\n            dynamicForm.load();\n        }\n    });\n\n    dynamicForm.load();\n}\n\n/**\n *\n * @param {*} event\n */\nexport function modifyTimeModal(event) {\n\n    // We two parents up, we find the right element with the necessary information.\n    const element = event.target.closest('.shopping-cart-item');\n\n    const itemid = element.dataset.itemid;\n    const userid = element.dataset.userid;\n    const componentname = element.dataset.component;\n    const area = element.dataset.area;\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_modify_time_of_deletion_task\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {'itemid': itemid,\n               'userid': userid,\n               'componentname': componentname,\n               'area': area},\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('modifytimeofdeletiontask', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: element\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, e => {\n\n        const response = e.detail;\n        console.log(response);\n        const deletionDate = new Date(response.taskdeletiontimestamp * 1000);\n        const formattedDate = deletionDate.toLocaleString(response.currentlang, {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit',\n        });\n        getString('modifytimeofdeletiontaskconfirmation', 'local_shopping_cart', formattedDate).then(localizedmessage => {\n\n            showNotification(localizedmessage, \"success\");\n            return;\n        });\n    });\n\n    // Show the form.\n    modalForm.show();\n\n}\n"],"names":["_interopRequireDefault","e","__esModule","default","event","element","target","closest","price","dataset","itemid","userid","componentname","component","area","modalForm","ModalForm","formClass","args","modalConfig","title","getString","returnFocus","addEventListener","events","FORM_SUBMITTED","reinit","show","response","detail","console","log","formattedDate","Date","taskdeletiontimestamp","toLocaleString","currentlang","year","month","day","hour","minute","get_string","then","localizedmessage","showNotification","_ajax","_url","_modalform","_modal_factory","_dynamicform","SELECTORS","_exports","init","arguments","length","undefined","document","getElementById","classList","remove","buybuttons","querySelectorAll","manualrebookbtn","querySelector","cartcancelbtn","forEach","buybutton","confirmPayment","paymenttype","rebookOrderidModal","deleteAllItems","newurl","Url","relativeUrl","location","href","checkoutbutton","add","dynamicForm","DynamicForm","redirecturl","load","initUserSelectorForm","annotation","Ajax","call","methodname","done","data","status","reloadHistory","window","indexOf","params","success","identifier","addPrintIdentifier","successtab","displayPaymentMessage","error","modaltitle","ModalFactory","create","type","types","ALERT","body","removeOnClose","modal","catch","displayErrorModal","fail","ex","validateCart","$userid","alert","printbtn","getAttribute","setAttribute","message","displaymessage","innerText","paidby"],"mappings":"4UAiCgD,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;+IA0IzC,SAAuBG,OAG1B,MAAMC,QAAUD,MAAME,OAAOC,QAAQ,uBAI/BC,MAAQH,QAAQI,QAAQD,MACxBE,OAASL,QAAQI,QAAQC,OACzBC,OAASN,QAAQI,QAAQE,OACzBC,cAAgBP,QAAQI,QAAQI,UAChCC,KAAOT,QAAQI,QAAQK,KAIvBC,UAAY,IAAIC,WAAAA,QAAU,CAG5BC,UAAW,wDAEXC,KAAM,CAACV,MAASA,MACTE,OAAUA,OACVC,OAAUA,OACVC,cAAiBA,cACjBE,KAAQA,MAEfK,YAAa,CAACC,OAAO,EAAAC,KAAAA,YAAU,gBAAiB,wBAEhDC,YAAajB,UAIjBU,UAAUQ,iBAAiBR,UAAUS,OAAOC,gBAAgB,MAKxD,EAAAC,MAAMA,SAAE,EAAE,IAIdX,UAAUY,MAEd,gDA6HO,SAAyBvB,OAG5B,MAAMC,QAAUD,MAAME,OAAOC,QAAQ,uBAE/BG,OAASL,QAAQI,QAAQC,OACzBC,OAASN,QAAQI,QAAQE,OACzBC,cAAgBP,QAAQI,QAAQI,UAChCC,KAAOT,QAAQI,QAAQK,KAEvBC,UAAY,IAAIC,WAAAA,QAAU,CAG5BC,UAAW,gEAEXC,KAAM,CAACR,OAAUA,OACVC,OAAUA,OACVC,cAAiBA,cACjBE,KAAQA,MAEfK,YAAa,CAACC,OAAO,EAAAC,KAAAA,YAAU,2BAA4B,wBAE3DC,YAAajB,UAIjBU,UAAUQ,iBAAiBR,UAAUS,OAAOC,gBAAgBxB,IAExD,MAAM2B,SAAW3B,EAAE4B,OACnBC,QAAQC,IAAIH,UACZ,MACMI,cADe,IAAIC,KAAsC,IAAjCL,SAASM,uBACJC,eAAeP,SAASQ,YAAa,CACpEC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,aAEZ,EAAApB,KAASqB,YAAC,uCAAwC,sBAAuBV,eAAeW,MAAKC,oBAEzF,EAAAC,eAAgBA,kBAACD,iBAAkB,UACnC,GACF,IAIN7B,UAAUY,MAEd,8EA1WAmB,MAAA9C,uBAAA8C,OACAC,KAAA/C,uBAAA+C,MAEAC,WAAAhD,uBAAAgD,YACAC,eAAAjD,uBAAAiD,gBAIAC,aAAAlD,uBAAAkD,cAGA,MAAMC,2BACgB,yCA6CpBC,SAAAC,KAvCkB,WAAgB,IAAf1C,OAAM2C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAE1BxB,QAAQC,IAAI,WAAYpB,QAExB8C,SAASC,eAAe,gBAAgBC,UAAUC,OAAO,WAEzD,MAAMC,WAAaJ,SAASK,iBAAiB,YACvCC,gBAAkBN,SAASO,cAAc,4BACzCC,cAAgBR,SAASO,cAAc,4BAEzCH,YACAA,WAAWK,SAAQC,YACfA,UAAU5C,iBAAiB,SAAUtB,GAAMmE,eAAezD,OAAQV,EAAEK,OAAOG,QAAQ4D,YAAa,KAAI,IAIxGN,iBACAA,gBAAgBxC,iBAAiB,SAAUtB,GAAMqE,mBAAmB3D,OAAQV,EAAEK,OAAOG,QAAQ4D,eAG7FJ,eACAA,cAAc1C,iBAAiB,SAAS,MACpC,EAAAgD,MAAAA,gBAAe5D,QACf,MAAM6D,OAASC,KAAAA,QAAIC,YAAY,mCAAoC,IAAI,GACvEC,SAASC,KAAOJ,MAAM,IAI9B,MAAMK,eAAiBpB,SAASO,cAAc,iBAE9ClC,QAAQC,IAAI8C,gBACRA,gBACAA,eAAetD,iBAAiB,SAAS,WAErCkC,SAASC,eAAe,gBAAgBC,UAAUmB,IAAI,UAC1D,IAsOR,WAEI,MAAMzE,QAAUoD,SAASO,cAAcb,4BAGjC4B,YAAc,IAAIC,aAAAA,QACpB3E,QACA,mDAGJyB,QAAQC,IAAIgD,aAEZA,YAAYxD,iBAAiBwD,YAAYvD,OAAOC,gBAAgBxB,IAC5D,MAAM2B,SAAW3B,EAAE4B,OACnBC,QAAQC,IAAIH,UAERA,SAASqD,YACTN,SAASC,KAAOhD,SAASqD,cAEzB,EAAApC,eAAgBA,kBAAC,gBAAiB,SAClCkC,YAAYG,OAChB,IAGJH,YAAYG,MAChB,CA5PIC,IAGG,MAAMf,eAAiB,SAACzD,OAAQ0D,aAAiC,IAApBe,WAAU9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAE7D+B,MAAIlF,QAACmF,KAAK,CAAC,CACPC,WAAY,2CACZrE,KAAM,CACFP,OAAUA,OACV0D,YAAeA,YACfe,WAAcA,YAElBI,KAAM,SAASC,MACX,GAAoB,IAAhBA,KAAKC,OAAc,CAEnB5D,QAAQC,IAAI,oBAAqB0D,OACjC,EAAAE,UAAAA,eAAchF,QAQd,GAHkBiF,OAAOjB,SAASC,KAAKiB,QAAQ,eAG/B,EAAG,CAIf,IAAIC,OAAS,CACTC,QAAS,EACTC,WAJeP,KAAKO,YAOxB,MAAMxB,OAASC,KAAAA,QAAIC,YAAY,oCAAqCoB,QAAQ,GAE5EnB,SAASC,KAAOJ,MAEpB,KAAO,CAEHyB,mBAAmBR,KAAKO,WAAYrF,QAEpC,MAAMuF,WAAazC,SAASC,eAAe,eACvCwC,aACAA,WAAWvC,UAAUmB,IAAI,WACzBqB,sBAAsB,qBAG9B,CAEJ,KAAO,CACHrE,QAAQC,IAAI,kBACZD,QAAQC,IAAI0D,MAiH5B,SAA2BA,MAEvB,GAA0B,iBAAfA,KAAKW,MACZ,OAGJ,IAAIC,YAAa,EAAAhF,KAAAA,YAAU,0BAA2B,uBACtDiF,eAAYnG,QAACoG,OAAO,CAChBC,KAAMF,eAAAA,QAAaG,MAAMC,MACzBtF,MAAOiF,WACPM,KAAMlB,KAAKW,MACXQ,eAAe,IAChBjE,MAAKkE,QACJA,MAAMlF,OACCkF,SACRC,OAAM7G,IACL6B,QAAQC,IAAI9B,EAAE,GAGtB,CAnIgB8G,CAAkBtB,MAClBU,sBAAsB,iBAAiB,GAEvC,MAAMD,WAAazC,SAASC,eAAe,eACvCwC,YACAA,WAAWvC,UAAUmB,IAAI,QAEjC,CACH,EACDkC,KAAM,SAASC,IAEXd,sBAAsB,iBAAiB,GAEvCrE,QAAQC,IAAIkF,GAChB,MAEN7D,SAAAgB,eAAAA,eAKAhB,SAAA8D,aAH2BC,UAEzBC,MAAMD,QAAQ,EAQX,MAAMlB,mBAAqBA,CAACD,WAAYrF,UAC5C,IAAI0G,SAAW5D,SAASC,eAAe,YACnCkB,KAAOyC,SAASC,aAAa,QACjCD,SAASE,aAAa,OAAQ3C,KAAOoB,WAAa,WAAarF,OAAO,EA0DzE,SAASwF,sBAAsBqB,SAAyB,IAAhBzB,UAAOzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACvCmE,eAAiBhE,SAASO,cAAc,2BACxCyD,iBACA,EAAApG,KAAAA,YAAUmG,QAAS,uBAAuB7E,MAAKC,mBAE3C6E,eAAeC,UAAY9E,iBAEvBmD,SACA,EAAAlD,eAAgBA,kBAACD,iBAAkB,SAEnC,EAAAC,eAAgBA,kBAACD,iBAAkB,QAEvC,IACDkE,OAAM7G,KACL,EAAA4C,iCAAiB,UAAU5C,IAAK,QAAQ,GAGpD,CAgCO,SAASqE,mBAAmB3D,OAAQqF,YAEvC,MAAMjF,UAAY,IAAIC,WAAAA,QAAU,CAG5BC,UAAW,yDAEXC,KAAM,CACFP,OAAUA,OACVqF,WAAcA,YAGlB7E,YAAa,CAACC,OAAO,EAAAC,KAAAA,YAAU,yBAA0B,0BAO7DN,UAAUQ,iBAAiBR,UAAUS,OAAOC,gBAAiBxB,IACzD,MAAM2B,SAAW3B,EAAE4B,OAKnBuC,eAAezD,OAAQ,EAAG,GAAGiB,SAASwD,cAAcxD,SAAS+F,SAAS,IAI1E5G,UAAUY,MAEd,CAzIEyB,SAAA6C,mBAAAA,kBA8ND"}