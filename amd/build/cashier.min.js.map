{"version":3,"file":"cashier.min.js","sources":["../src/cashier.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/* eslint-disable no-console */\n\n/*\n * The Cashier module.\n *\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Url from 'core/url';\nimport {showNotification} from 'local_shopping_cart/notifications';\nimport ModalForm from 'core_form/modalform';\nimport ModalFactory from 'core/modal_factory';\nimport {reinit} from 'local_shopping_cart/cart';\nimport {deleteAllItems} from 'local_shopping_cart/cart';\nimport {get_string as getString} from 'core/str';\nimport DynamicForm from 'core_form/dynamicform';\nimport {reloadHistory} from './shistory';\n\nconst SELECTORS = {\n    USERSELECTORFORM: '[data-id=\"sc-selectuserformcontainer\"]',\n};\n/**\n * Init function.\n * @param {*} userid the user id, 0 means logged-in USER\n */\nexport const init = (userid = 0) => {\n\n    console.log('run init', userid);\n\n    document.getElementById('checkout-tab').classList.remove('success');\n\n    const buybuttons = document.querySelectorAll('.buy-btn');\n    const manualrebookbtn = document.querySelector('#cashiermanualrebook-btn');\n    const cartcancelbtn = document.querySelector('#shoppingcart-cancel-btn');\n\n    if (buybuttons) {\n        buybuttons.forEach(buybutton => {\n            buybutton.addEventListener('click', (e) => confirmPayment(userid, e.target.dataset.paymenttype, ''));\n        });\n    }\n\n    if (manualrebookbtn) {\n        manualrebookbtn.addEventListener('click', (e) => rebookOrderidModal(userid, e.target.dataset.paymenttype));\n    }\n\n    if (cartcancelbtn) {\n        cartcancelbtn.addEventListener('click', () => {\n            deleteAllItems(userid);\n            const newurl = Url.relativeUrl(\"/local/shopping_cart/cashier.php\", [], false);\n            location.href = newurl;\n        });\n    }\n\n    const checkoutbutton = document.querySelector('#checkout-btn');\n\n    console.log(checkoutbutton);\n    if (checkoutbutton) {\n        checkoutbutton.addEventListener('click', function() {\n\n            document.getElementById('checkout-tab').classList.add('success');\n        });\n    }\n\n    initUserSelectorForm();\n};\n\nexport const confirmPayment = (userid, paymenttype, annotation = '') => {\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_confirm_cash_payment\",\n        args: {\n            'userid': userid,\n            'paymenttype': paymenttype,\n            'annotation': annotation,\n        },\n        done: function(data) {\n            if (data.status === 1) {\n\n                console.log('payment confirmed', data);\n                reloadHistory(userid);\n\n                // The function can be called via cashier, or because a user pays via credits.\n                // If that's the case, we are not on the cashier site.\n\n                const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n                // If we are not on cashier, we can just redirect.\n                if (oncashier < 1) {\n\n                    const identifier = data.identifier;\n\n                    let params = {\n                        success: 1,\n                        identifier: identifier,\n                    };\n\n                    const newurl = Url.relativeUrl(\"/local/shopping_cart/checkout.php\", params, false);\n\n                    location.href = newurl;\n\n                } else {\n                    // Set link to right receipt.\n                    addPrintIdentifier(data.identifier, userid);\n\n                    const successtab = document.getElementById('success-tab');\n                    if (successtab) {\n                        successtab.classList.add('success');\n                        displayPaymentMessage('paymentsuccessful');\n                    }\n\n                }\n\n            } else {\n                console.log('payment denied');\n                console.log(data);\n                displayErrorModal(data);\n                displayPaymentMessage('paymentdenied', false);\n\n                const successtab = document.getElementById('success-tab');\n                if (successtab) {\n                    successtab.classList.add('error');\n                }\n            }\n        },\n        fail: function(ex) {\n\n            displayPaymentMessage('paymentdenied', false);\n\n            console.log(ex);\n        },\n    }]);\n};\n\nexport const validateCart = ($userid) => {\n    // eslint-disable-next-line no-alert\n    alert($userid);\n};\n\n/**\n * Adds parameters to the printbutton.\n * @param {int} identifier\n * @param {int} userid\n */\nexport const addPrintIdentifier = (identifier, userid) => {\n   let printbtn = document.getElementById('printbtn');\n   let href = printbtn.getAttribute('href');\n   printbtn.setAttribute('href', href + identifier + '&userid=' + userid);\n};\n\n/**\n *\n * @param {*} event\n */\nexport function discountModal(event) {\n\n    // We two parents up, we find the right element with the necessary information.\n    const element = event.target.closest('.shopping-cart-item');\n\n    /* Console.log('closest', element); */\n\n    const price = element.dataset.price;\n    const itemid = element.dataset.itemid;\n    const userid = element.dataset.userid;\n    const componentname = element.dataset.component;\n    const area = element.dataset.area;\n\n    /* Console.log('discountModal', price, itemid, userid, componentname, 'area ' + area); */\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_add_discount_to_item\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {'price': price,\n               'itemid': itemid,\n               'userid': userid,\n               'componentname': componentname,\n               'area': area},\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('applydiscount', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: element\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => {\n\n        /* Const response = e.detail;\n        console.log('confirmCancelAndSetCreditModal response: ', response); */\n\n        reinit(-1);\n    });\n\n    // Show the form.\n    modalForm.show();\n\n}\n\n/**\n * This function first displays the result at the right place.\n * It further uses the notification class to make result even more visible.\n * @param {string} message\n * @param {bool} success\n */\nfunction displayPaymentMessage(message, success = true) {\n    let displaymessage = document.querySelector('.payment_message_result');\n    if (displaymessage) {\n        getString(message, 'local_shopping_cart').then(localizedmessage => {\n\n            displaymessage.innerText = localizedmessage;\n\n            if (success) {\n                showNotification(localizedmessage, \"info\");\n            } else {\n                showNotification(localizedmessage, \"error\");\n            }\n            return;\n        }).catch(e => {\n            showNotification(`Error: ${e}`, \"error\");\n        });\n    }\n}\n\n/**\n * If the error returned contains a message, display it in a modal.\n * @param {object} data\n */\nfunction displayErrorModal(data) {\n\n    if (typeof data.error !== \"string\") {\n        return;\n    }\n\n    let modaltitle = getString('checkouterrormodaltitle', 'local_shopping_cart');\n    ModalFactory.create({\n        type: ModalFactory.types.ALERT,\n        title: modaltitle,\n        body: data.error,\n        removeOnClose: true,\n    }).then(modal => {\n        modal.show();\n        return modal;\n    }).catch(e => {\n        console.log(e);\n    });\n\n}\n\n/**\n * Modal to enter OrderID for manual rebookings.\n * @param {int} userid\n * @param {int} identifier\n */\nexport function rebookOrderidModal(userid, identifier) {\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_cashier_manual_rebook\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {\n            'userid': userid,\n            'identifier': identifier,\n        },\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('annotation_rebook_desc', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        // returnFocus: button\n    });\n\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        const response = e.detail;\n\n        /* Console.log('rebookOrderidModal response: ', response); */\n\n        // We just add the paidby code to the annotation.\n        confirmPayment(userid, 7, `${response.annotation} ${response.paidby}`);\n    });\n\n    // Show the form.\n    modalForm.show();\n\n}\n\n/**\n * Init the user selector form.\n *\n */\nfunction initUserSelectorForm() {\n\n    const element = document.querySelector(SELECTORS.USERSELECTORFORM);\n\n    // Initialize the form.\n    const dynamicForm = new DynamicForm(\n        element,\n        'local_shopping_cart\\\\form\\\\dynamic_select_users'\n    );\n\n    console.log(dynamicForm);\n    // When form is submitted - remove it from DOM:\n    dynamicForm.addEventListener(dynamicForm.events.FORM_SUBMITTED, e => {\n        const response = e.detail;\n        console.log(response);\n\n        if (response.redirecturl) {\n            location.href = response.redirecturl;\n        } else {\n            showNotification('no user found', \"error\");\n            dynamicForm.load();\n        }\n    });\n\n    dynamicForm.load();\n}\n"],"names":["_interopRequireDefault","e","__esModule","default","event","element","target","closest","price","dataset","itemid","userid","componentname","component","area","modalForm","ModalForm","formClass","args","modalConfig","title","getString","returnFocus","addEventListener","events","FORM_SUBMITTED","reinit","show","_ajax","_url","_modalform","_modal_factory","_dynamicform","SELECTORS","_exports","init","arguments","length","undefined","console","log","document","getElementById","classList","remove","buybuttons","querySelectorAll","manualrebookbtn","querySelector","cartcancelbtn","forEach","buybutton","confirmPayment","paymenttype","rebookOrderidModal","deleteAllItems","newurl","Url","relativeUrl","location","href","checkoutbutton","add","dynamicForm","DynamicForm","response","detail","redirecturl","showNotification","load","initUserSelectorForm","annotation","Ajax","call","methodname","done","data","status","reloadHistory","window","indexOf","params","success","identifier","addPrintIdentifier","successtab","displayPaymentMessage","error","modaltitle","ModalFactory","create","type","types","ALERT","body","removeOnClose","then","modal","catch","displayErrorModal","fail","ex","validateCart","$userid","alert","printbtn","getAttribute","setAttribute","message","displaymessage","localizedmessage","innerText","paidby"],"mappings":"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"}