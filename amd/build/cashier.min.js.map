{"version":3,"file":"cashier.min.js","sources":["../src/cashier.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/* eslint-disable no-console */\n\n/*\n * The Cashier module.\n *\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Url from 'core/url';\nimport {showNotification} from 'local_shopping_cart/notifications';\nimport ModalForm from 'core_form/modalform';\nimport {reinit} from 'local_shopping_cart/cart';\nimport {deleteAllItems} from 'local_shopping_cart/cart';\nimport {get_string as getString} from 'core/str';\nimport DynamicForm from 'core_form/dynamicform';\n\nconst SELECTORS = {\n    USERSELECTORFORM: '[data-id=\"sc-selectuserformcontainer\"]',\n};\n/**\n * Init function.\n * @param {*} userid the user id, 0 means logged-in USER\n */\nexport const init = (userid = 0) => {\n\n    console.log('run init', userid);\n\n    document.getElementById('checkout-tab').classList.remove('success');\n\n    const buybuttons = document.querySelectorAll('.buy-btn');\n    const manualrebookbtn = document.querySelector('#cashiermanualrebook-btn');\n    const cartcancelbtn = document.querySelector('#shoppingcart-cancel-btn');\n\n    if (buybuttons) {\n        buybuttons.forEach(buybutton => {\n            buybutton.addEventListener('click', (e) => confirmPayment(userid, e.target.dataset.paymenttype, ''));\n        });\n    }\n\n    if (manualrebookbtn) {\n        manualrebookbtn.addEventListener('click', (e) => rebookOrderidModal(userid, e.target.dataset.paymenttype));\n    }\n\n    if (cartcancelbtn) {\n        cartcancelbtn.addEventListener('click', () => {\n            deleteAllItems(userid);\n            const newurl = Url.relativeUrl(\"/local/shopping_cart/cashier.php\", [], false);\n            location.href = newurl;\n        });\n    }\n\n    const checkoutbutton = document.querySelector('#checkout-btn');\n\n    console.log(checkoutbutton);\n    if (checkoutbutton) {\n        checkoutbutton.addEventListener('click', function() {\n\n            document.getElementById('checkout-tab').classList.add('success');\n\n            console.log('click');\n        });\n    }\n\n    initUserSelectorForm();\n};\n\nexport const confirmPayment = (userid, paymenttype, annotation = '') => {\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_confirm_cash_payment\",\n        args: {\n            'userid': userid,\n            'paymenttype': paymenttype,\n            'annotation': annotation,\n        },\n        done: function(data) {\n            if (data.status === 1) {\n\n                console.log('payment confirmed', data);\n\n                // The function can be called via cashier, or because a user pays via credits.\n                // If that's the case, we are not on the cashier site.\n\n                const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n                // If we are not on cashier, we can just redirect.\n                if (oncashier < 1) {\n\n                    const identifier = data.identifier;\n\n                    let params = {\n                        success: 1,\n                        identifier: identifier,\n                    };\n\n                    const newurl = Url.relativeUrl(\"/local/shopping_cart/checkout.php\", params, false);\n\n                    location.href = newurl;\n\n                } else {\n\n                    // Set link to right receipt.\n                    addPrintIdentifier(data.identifier, userid);\n\n                    const successtab = document.getElementById('success-tab');\n                    if (successtab) {\n                        successtab.classList.add('success');\n                        displayPaymentMessage('paymentsuccessful');\n                    }\n                }\n\n            } else {\n                console.log('payment denied');\n                displayPaymentMessage('paymentdenied', false);\n\n                const successtab = document.getElementById('success-tab');\n                if (successtab) {\n                    successtab.classList.classList.add('error');\n                }\n            }\n        },\n        fail: function(ex) {\n\n            displayPaymentMessage('paymentdenied', false);\n\n            console.log(ex);\n        },\n    }]);\n};\n\nexport const validateCart = ($userid) => {\n    // eslint-disable-next-line no-alert\n    alert($userid);\n};\n\n/**\n * Adds parameters to the printbutton.\n * @param {int} identifier\n * @param {int} userid\n */\nexport const addPrintIdentifier = (identifier, userid) => {\n   let printbtn = document.getElementById('printbtn');\n   let href = printbtn.getAttribute('href');\n   printbtn.setAttribute('href', href + identifier + '&userid=' + userid);\n};\n\n/**\n *\n * @param {*} event\n */\nexport function discountModal(event) {\n\n    // We two parents up, we find the right element with the necessary information.\n    const element = event.target.closest('.shopping-cart-item');\n\n    /* Console.log('closest', element); */\n\n    const price = element.dataset.price;\n    const itemid = element.dataset.itemid;\n    const userid = element.dataset.userid;\n    const componentname = element.dataset.component;\n    const area = element.dataset.area;\n\n    /* Console.log('discountModal', price, itemid, userid, componentname, 'area ' + area); */\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_add_discount_to_item\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {'price': price,\n               'itemid': itemid,\n               'userid': userid,\n               'componentname': componentname,\n               'area': area},\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('applydiscount', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: element\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => {\n\n        /* Const response = e.detail;\n        console.log('confirmCancelAndSetCreditModal response: ', response); */\n\n        reinit(-1);\n    });\n\n    // Show the form.\n    modalForm.show();\n\n}\n\n/**\n * This function first displays the result at the right place.\n * It further uses the notification class to make result even more visible.\n * @param {string} message\n * @param {bool} success\n */\nfunction displayPaymentMessage(message, success = true) {\n    let displaymessage = document.querySelector('.payment_message_result');\n    if (displaymessage) {\n        getString(message, 'local_shopping_cart').then(localizedmessage => {\n\n            displaymessage.innerText = localizedmessage;\n\n            if (success) {\n                showNotification(localizedmessage, \"info\");\n            } else {\n                showNotification(localizedmessage, \"error\");\n            }\n            return;\n        }).catch(e => {\n            showNotification(`Error: ${e}`, \"error\");\n        });\n    }\n}\n\n/**\n * Modal to enter OrderID for manual rebookings.\n * @param {int} userid\n * @param {int} identifier\n */\nexport function rebookOrderidModal(userid, identifier) {\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_cashier_manual_rebook\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {\n            'userid': userid,\n            'identifier': identifier,\n        },\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('annotation_rebook_desc', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        // returnFocus: button\n    });\n\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        const response = e.detail;\n\n        /* Console.log('rebookOrderidModal response: ', response); */\n\n        // We just add the paidby code to the annotation.\n        confirmPayment(userid, 7, `${response.annotation} ${response.paidby}`);\n    });\n\n    // Show the form.\n    modalForm.show();\n\n}\n\n/**\n * Init the user selector form.\n *\n */\nfunction initUserSelectorForm() {\n\n    const element = document.querySelector(SELECTORS.USERSELECTORFORM);\n\n    // Initialize the form.\n    const dynamicForm = new DynamicForm(\n        element,\n        'local_shopping_cart\\\\form\\\\dynamic_select_users'\n    );\n\n    console.log(dynamicForm);\n    // When form is submitted - remove it from DOM:\n    dynamicForm.addEventListener(dynamicForm.events.FORM_SUBMITTED, e => {\n        const response = e.detail;\n        console.log(response);\n\n        if (response.redirecturl) {\n            location.href = response.redirecturl;\n        } else {\n            showNotification('no user found', \"error\");\n            dynamicForm.load();\n        }\n    });\n\n    dynamicForm.load();\n}\n"],"names":["event","element","target","closest","price","dataset","itemid","userid","componentname","component","area","modalForm","ModalForm","formClass","args","modalConfig","title","returnFocus","addEventListener","events","FORM_SUBMITTED","show","SELECTORS","console","log","document","getElementById","classList","remove","buybuttons","querySelectorAll","manualrebookbtn","querySelector","cartcancelbtn","forEach","buybutton","e","confirmPayment","paymenttype","rebookOrderidModal","newurl","Url","relativeUrl","location","href","checkoutbutton","add","initUserSelectorForm","annotation","call","methodname","done","data","status","window","indexOf","params","success","identifier","addPrintIdentifier","successtab","displayPaymentMessage","fail","ex","$userid","alert","printbtn","getAttribute","setAttribute","message","displaymessage","then","localizedmessage","innerText","catch","response","detail","paidby","dynamicForm","DynamicForm","redirecturl","load"],"mappings":";;;;;;;wJAwK8BA,aAGpBC,QAAUD,MAAME,OAAOC,QAAQ,uBAI/BC,MAAQH,QAAQI,QAAQD,MACxBE,OAASL,QAAQI,QAAQC,OACzBC,OAASN,QAAQI,QAAQE,OACzBC,cAAgBP,QAAQI,QAAQI,UAChCC,KAAOT,QAAQI,QAAQK,KAIvBC,UAAY,IAAIC,mBAAU,CAG5BC,UAAW,wDAEXC,KAAM,OAAUV,aACCE,cACAC,qBACOC,mBACTE,MAEfK,YAAa,CAACC,OAAO,mBAAU,gBAAiB,wBAEhDC,YAAahB,UAIjBU,UAAUO,iBAAiBP,UAAUQ,OAAOC,gBAAgB,uBAKhD,MAIZT,UAAUU,qRA/KRC,2BACgB,uDAMF,eAACf,8DAAS,EAE1BgB,QAAQC,IAAI,WAAYjB,QAExBkB,SAASC,eAAe,gBAAgBC,UAAUC,OAAO,iBAEnDC,WAAaJ,SAASK,iBAAiB,YACvCC,gBAAkBN,SAASO,cAAc,4BACzCC,cAAgBR,SAASO,cAAc,4BAEzCH,YACAA,WAAWK,SAAQC,YACfA,UAAUjB,iBAAiB,SAAUkB,GAAMC,eAAe9B,OAAQ6B,EAAElC,OAAOG,QAAQiC,YAAa,SAIpGP,iBACAA,gBAAgBb,iBAAiB,SAAUkB,GAAMG,mBAAmBhC,OAAQ6B,EAAElC,OAAOG,QAAQiC,eAG7FL,eACAA,cAAcf,iBAAiB,SAAS,8BACrBX,cACTiC,OAASC,aAAIC,YAAY,mCAAoC,IAAI,GACvEC,SAASC,KAAOJ,gBAIlBK,eAAiBpB,SAASO,cAAc,iBAE9CT,QAAQC,IAAIqB,gBACRA,gBACAA,eAAe3B,iBAAiB,SAAS,WAErCO,SAASC,eAAe,gBAAgBC,UAAUmB,IAAI,WAEtDvB,QAAQC,IAAI,YAIpBuB,8BAGSV,eAAiB,SAAC9B,OAAQ+B,iBAAaU,kEAAa,iBAExDC,KAAK,CAAC,CACPC,WAAY,2CACZpC,KAAM,QACQP,mBACK+B,uBACDU,YAElBG,KAAM,SAASC,SACS,IAAhBA,KAAKC,OAAc,CAEnB9B,QAAQC,IAAI,oBAAqB4B,SAKfE,OAAOX,SAASC,KAAKW,QAAQ,eAG/B,EAAG,KAIXC,OAAS,CACTC,QAAS,EACTC,WAJeN,KAAKM,kBAOlBlB,OAASC,aAAIC,YAAY,oCAAqCc,QAAQ,GAE5Eb,SAASC,KAAOJ,WAEb,CAGHmB,mBAAmBP,KAAKM,WAAYnD,cAE9BqD,WAAanC,SAASC,eAAe,eACvCkC,aACAA,WAAWjC,UAAUmB,IAAI,WACzBe,sBAAsB,2BAI3B,CACHtC,QAAQC,IAAI,kBACZqC,sBAAsB,iBAAiB,SAEjCD,WAAanC,SAASC,eAAe,eACvCkC,YACAA,WAAWjC,UAAUA,UAAUmB,IAAI,WAI/CgB,KAAM,SAASC,IAEXF,sBAAsB,iBAAiB,GAEvCtC,QAAQC,IAAIuC,sEAKKC,UAEzBC,MAAMD,gBAQGL,mBAAqB,CAACD,WAAYnD,cACxC2D,SAAWzC,SAASC,eAAe,YACnCkB,KAAOsB,SAASC,aAAa,QACjCD,SAASE,aAAa,OAAQxB,KAAOc,WAAa,WAAanD,kBA0DzDsD,sBAAsBQ,aAASZ,mEAChCa,eAAiB7C,SAASO,cAAc,2BACxCsC,oCACUD,QAAS,uBAAuBE,MAAKC,mBAE3CF,eAAeG,UAAYD,iBAEvBf,4CACiBe,iBAAkB,4CAElBA,iBAAkB,YAGxCE,OAAMtC,yDACsBA,GAAK,qBAU5BG,mBAAmBhC,OAAQmD,kBAEjC/C,UAAY,IAAIC,mBAAU,CAG5BC,UAAW,yDAEXC,KAAM,QACQP,kBACImD,YAGlB3C,YAAa,CAACC,OAAO,mBAAU,yBAA0B,0BAO7DL,UAAUO,iBAAiBP,UAAUQ,OAAOC,gBAAiBgB,UACnDuC,SAAWvC,EAAEwC,OAKnBvC,eAAe9B,OAAQ,YAAMoE,SAAS3B,uBAAc2B,SAASE,YAIjElE,UAAUU,gBAQL0B,6BAEC9C,QAAUwB,SAASO,cAAcV,4BAGjCwD,YAAc,IAAIC,qBACpB9E,QACA,mDAGJsB,QAAQC,IAAIsD,aAEZA,YAAY5D,iBAAiB4D,YAAY3D,OAAOC,gBAAgBgB,UACtDuC,SAAWvC,EAAEwC,OACnBrD,QAAQC,IAAImD,UAERA,SAASK,YACTrC,SAASC,KAAO+B,SAASK,iDAER,gBAAiB,SAClCF,YAAYG,WAIpBH,YAAYG"}