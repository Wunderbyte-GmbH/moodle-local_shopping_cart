{"version":3,"file":"cashier.min.js","sources":["../src/cashier.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/* eslint-disable no-console */\r\n\r\n/*\r\n * @package    local_shopping_cart\r\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Ajax from 'core/ajax';\r\nimport Url from 'core/url';\r\nimport {showNotification} from 'local_shopping_cart/notifications';\r\nimport ModalForm from 'core_form/modalform';\r\nimport {reinit} from 'local_shopping_cart/cart';\r\nimport {get_string as getString} from 'core/str';\r\n\r\nexport const init = (userid = 0) => {\r\n\r\n    console.log('run init', userid);\r\n\r\n    document.getElementById('checkout-tab').classList.remove('success');\r\n\r\n    const buybuttons = document.querySelectorAll('.buy-btn');\r\n\r\n    const manualrebookbtn = document.querySelector('#cashiermanualrebook-btn');\r\n\r\n    if (buybuttons) {\r\n        buybuttons.forEach(buybutton => {\r\n            buybutton.addEventListener('click', (e) => confirmPayment(userid, e.target.dataset.paymenttype, ''));\r\n        });\r\n    }\r\n\r\n    if (manualrebookbtn) {\r\n        manualrebookbtn.addEventListener('click', (e) => rebookOrderidModal(userid, e.target.dataset.paymenttype));\r\n    }\r\n\r\n    const checkoutbutton = document.querySelector('#checkout-btn');\r\n\r\n    console.log(checkoutbutton);\r\n    if (checkoutbutton) {\r\n        checkoutbutton.addEventListener('click', function() {\r\n\r\n            document.getElementById('checkout-tab').classList.add('success');\r\n\r\n            console.log('click');\r\n        });\r\n    }\r\n};\r\n\r\nexport const confirmPayment = (userid, paymenttype, annotation = '') => {\r\n\r\n    Ajax.call([{\r\n        methodname: \"local_shopping_cart_confirm_cash_payment\",\r\n        args: {\r\n            'userid': userid,\r\n            'paymenttype': paymenttype,\r\n            'annotation': annotation\r\n        },\r\n        done: function(data) {\r\n            if (data.status === 1) {\r\n\r\n                console.log('payment confirmed', data);\r\n\r\n                // The function can be called via cashier, or because a user pays via credits.\r\n                // If that's the case, we are not on the cashier site.\r\n\r\n                const oncashier = window.location.href.indexOf(\"cashier.php\");\r\n\r\n                // If we are not on cashier, we can just redirect.\r\n                if (oncashier < 1) {\r\n\r\n                    const identifier = data.identifier;\r\n\r\n                    let params = {\r\n                        success: 1,\r\n                        identifier: identifier,\r\n                    };\r\n\r\n                    const newurl = Url.relativeUrl(\"/local/shopping_cart/checkout.php\", params, false);\r\n\r\n                    location.href = newurl;\r\n\r\n                } else {\r\n\r\n                    // Set link to right receipt.\r\n                    addPrintIdentifier(data.identifier, userid);\r\n\r\n                    document.getElementById('success-tab').classList.add('success');\r\n\r\n                    displayPaymentMessage('paymentsuccessful');\r\n                }\r\n\r\n            } else {\r\n                console.log('payment denied');\r\n                displayPaymentMessage('paymentdenied', false);\r\n                document.getElementById('success-tab').classList.add('error');\r\n            }\r\n        },\r\n        fail: function(ex) {\r\n\r\n            displayPaymentMessage('paymentdenied', false);\r\n\r\n            console.log(ex);\r\n        },\r\n    }]);\r\n};\r\n\r\nexport const validateCart = ($userid) => {\r\n    // eslint-disable-next-line no-alert\r\n    alert($userid);\r\n};\r\n\r\n/**\r\n * Adds parameters to the printbutton.\r\n * @param {int} identifier\r\n * @param {int} userid\r\n */\r\nexport const addPrintIdentifier = (identifier, userid) => {\r\n   let printbtn = document.getElementById('printbtn');\r\n   let href = printbtn.getAttribute('href');\r\n   printbtn.setAttribute('href', href + identifier + '&userid=' + userid);\r\n};\r\n\r\n/**\r\n *\r\n * @param {*} event\r\n */\r\nexport function discountModal(event) {\r\n\r\n    // We two parents up, we find the right element with the necessary information.\r\n    const element = event.target.closest('li');\r\n\r\n    // eslint-disable-next-line no-console\r\n    console.log('closest', element);\r\n\r\n    const price = element.dataset.price;\r\n    const itemid = element.dataset.itemid;\r\n    const userid = element.dataset.userid;\r\n    const componentname = element.dataset.component;\r\n    const area = element.dataset.area;\r\n\r\n    // eslint-disable-next-line no-console\r\n    console.log('discountModal', price, itemid, userid, componentname, 'area ' + area);\r\n\r\n    const modalForm = new ModalForm({\r\n\r\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\r\n        formClass: \"local_shopping_cart\\\\form\\\\modal_add_discount_to_item\",\r\n        // Add as many arguments as you need, they will be passed to the form:\r\n        args: {'price': price,\r\n               'itemid': itemid,\r\n               'userid': userid,\r\n               'componentname': componentname,\r\n               'area': area},\r\n        // Pass any configuration settings to the modal dialogue, for example, the title:\r\n        modalConfig: {title: getString('applydiscount', 'local_shopping_cart')},\r\n        // DOM element that should get the focus after the modal dialogue is closed:\r\n        returnFocus: element\r\n    });\r\n    // Listen to events if you want to execute something on form submit.\r\n    // Event detail will contain everything the process() function returned:\r\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\r\n        const response = e.detail;\r\n        // eslint-disable-next-line no-console\r\n        console.log('confirmCancelAndSetCreditModal response: ', response);\r\n\r\n        reinit(-1);\r\n    });\r\n\r\n    // Show the form.\r\n    modalForm.show();\r\n\r\n}\r\n\r\n/**\r\n * This function first displays the result at the right place.\r\n * It further uses the notification class to make result even more visible.\r\n * @param {string} message\r\n * @param {bool} success\r\n */\r\nfunction displayPaymentMessage(message, success = true) {\r\n    let displaymessage = document.querySelector('.payment_message_result');\r\n    if (displaymessage) {\r\n        getString(message, 'local_shopping_cart').then(localizedmessage => {\r\n\r\n            displaymessage.innerText = localizedmessage;\r\n\r\n            if (success) {\r\n                showNotification(localizedmessage, \"info\");\r\n            } else {\r\n                showNotification(localizedmessage, \"error\");\r\n            }\r\n            return;\r\n        }).catch(e => {\r\n\r\n            // eslint-disable-next-line no-console\r\n            console.log(e);\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Modal to enter OrderID for manual rebookings.\r\n * @param {int} userid\r\n * @param {int} identifier\r\n */\r\nexport function rebookOrderidModal(userid, identifier) {\r\n\r\n    const modalForm = new ModalForm({\r\n\r\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\r\n        formClass: \"local_shopping_cart\\\\form\\\\modal_cashier_manual_rebook\",\r\n        // Add as many arguments as you need, they will be passed to the form:\r\n        args: {\r\n            'userid': userid,\r\n            'identifier': identifier,\r\n        },\r\n        // Pass any configuration settings to the modal dialogue, for example, the title:\r\n        modalConfig: {title: getString('annotation_rebook_desc', 'local_shopping_cart')},\r\n        // DOM element that should get the focus after the modal dialogue is closed:\r\n        // returnFocus: button\r\n    });\r\n\r\n    // Listen to events if you want to execute something on form submit.\r\n    // Event detail will contain everything the process() function returned:\r\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\r\n        const response = e.detail;\r\n        // eslint-disable-next-line no-console\r\n        console.log('rebookOrderidModal response: ', response);\r\n\r\n        confirmPayment(userid, 7, response.annotation);\r\n    });\r\n\r\n    // Show the form.\r\n    modalForm.show();\r\n\r\n}\r\n"],"names":["event","element","target","closest","console","log","price","dataset","itemid","userid","componentname","component","area","modalForm","ModalForm","formClass","args","modalConfig","title","returnFocus","addEventListener","events","FORM_SUBMITTED","e","response","detail","show","document","getElementById","classList","remove","buybuttons","querySelectorAll","manualrebookbtn","querySelector","forEach","buybutton","confirmPayment","paymenttype","rebookOrderidModal","checkoutbutton","add","annotation","call","methodname","done","data","status","window","location","href","indexOf","params","success","identifier","newurl","Url","relativeUrl","addPrintIdentifier","displayPaymentMessage","fail","ex","$userid","alert","printbtn","getAttribute","setAttribute","message","displaymessage","then","localizedmessage","innerText","catch"],"mappings":"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"}