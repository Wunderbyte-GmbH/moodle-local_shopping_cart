{"version":3,"file":"cart.min.js","sources":["../src/cart.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/*\r\n * @package    local_shopping_cart\r\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Ajax from 'core/ajax';\r\nimport Templates from 'core/templates';\r\n\r\nimport ModalFactory from 'core/modal_factory';\r\nimport ModalEvents from 'core/modal_events';\r\n\r\nimport {confirmPayment} from 'local_shopping_cart/cashier';\r\nimport {discountModal} from 'local_shopping_cart/cashier';\r\nimport {showNotification} from 'local_shopping_cart/notifications';\r\n\r\nimport {\r\n    get_strings as getStrings,\r\n    get_string as getString\r\n        }\r\n        from 'core/str';\r\n\r\nexport var interval = null;\r\nexport var visbilityevent = false;\r\n\r\n// This file inits the cart on every page, on checkout and cashier.\r\n// The cart is always loaed entirely and replaced via css.\r\n// The cashiers cart are identified in the DOM via userid -1 (CASHIERUSER).\r\n// The translation to real userids is done in the PHP only.\r\n\r\nconst CASHIERUSER = -1;\r\n\r\nconst SELECTORS = {\r\n    SHOPPING_CART_ITEM: '[data-item=\"shopping_cart_item\"]',\r\n    NAVBARCONTAINER: '#nav-shopping_cart-popover-container .shopping-cart-items-container',\r\n    TRASHCLASS: 'fa-trash-o',\r\n    DISCOUNTCLASS: 'fa-eur',\r\n    BADGECOUNT: '#nav-shopping_cart-popover-container div.count-container',\r\n    COUNTDOWN: '#nav-shopping_cart-popover-container span.expirationdate',\r\n    CASHIERSCART: 'div.shopping-cart-cashier-items-container',\r\n    CHECKOUTCART: 'div.shopping-cart-checkout-items-container',\r\n    PRICELABELCHECKBOX: '.sc_price_label input.usecredit-checkbox',\r\n    PRICELABELAREA: '.sc_price_label',\r\n    CHECKOUTBUTTON: '#nav-shopping_cart-popover-container #shopping-cart-checkout-button',\r\n    PAYMENTREGIONBUTTON: 'div.shopping_cart_payment_region button',\r\n    ACCEPTTERMS: '#accepttermsnandconditions',\r\n};\r\n/**\r\n *\r\n * @param {*} expirationdate\r\n */\r\n\r\n export const init = (expirationdate) => {\r\n\r\n    initTimer(expirationdate);\r\n\r\n    // We might have more than one container.\r\n    let containers = [];\r\n    containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\r\n        + \",\" + SELECTORS.CASHIERSCART\r\n        + \",\" + SELECTORS.CHECKOUTCART);\r\n\r\n    containers.forEach(container => {\r\n\r\n        container.addEventListener('click', event => {\r\n\r\n            // Decide the target of the click.\r\n            const element = event.target;\r\n\r\n            if (element.classList.contains(SELECTORS.TRASHCLASS)) {\r\n\r\n                const userid = element.dataset.userid ? element.dataset.userid : 0;\r\n                const component = element.dataset.component;\r\n                const area = element.dataset.area;\r\n                const itemid = element.dataset.itemid;\r\n\r\n                deleteItem(itemid, component, area, userid);\r\n            } else if (element.classList.contains(SELECTORS.DISCOUNTCLASS)) {\r\n\r\n                discountModal(event);\r\n            }\r\n        });\r\n    });\r\n\r\n    // Re-init cart on page reload or navigation to another page - required for 2-digit price precision visibility.\r\n    document.addEventListener(\"readystatechange\", () => {\r\n        if (document.readyState !== 'loading') {\r\n            reinit();\r\n        }\r\n    });\r\n\r\n    if (visbilityevent == false) {\r\n        document.addEventListener(\"visibilitychange\", function() {\r\n            visbilityevent = true;\r\n            if (document.visibilityState === 'visible') {\r\n                reinit();\r\n            }\r\n        });\r\n    }\r\n\r\n    // Initially, we need to add the zeroPriceListener once.\r\n    const paymentbutton = document.querySelector(SELECTORS.PAYMENTREGIONBUTTON);\r\n    if (paymentbutton) {\r\n        const data = {\r\n            price: paymentbutton.dataset.price,\r\n            currency: paymentbutton.dataset.currency,\r\n        };\r\n        addZeroPriceListener(data);\r\n    }\r\n\r\n    const accepttermsbutton = document.querySelector(SELECTORS.ACCEPTTERMS);\r\n    if (accepttermsbutton && paymentbutton) {\r\n        addAcceptTermsListener(accepttermsbutton, paymentbutton);\r\n    }\r\n};\r\n\r\nexport const buttoninit = (itemid, component, area) => {\r\n\r\n    // If we don't have an itemid, we need to look for all the buttons.\r\n    if (!itemid || !component || !area) {\r\n        const selector = '[data-objecttable=\"local_shopping_cart\"';\r\n        const allbuttons = document.querySelectorAll(\r\n            selector);\r\n\r\n        allbuttons.forEach(button => {\r\n            const itemid = button.dataset.itemid;\r\n            const area = button.dataset.area;\r\n            const component = button.dataset.component;\r\n            buttoninit(itemid, component, area);\r\n        });\r\n        return;\r\n    }\r\n\r\n    // Return all buttons with the add to cart functionality.\r\n    const buttons =\r\n    document.querySelectorAll(\r\n        'div'\r\n        + '[data-itemid=\"' + itemid + '\"]'\r\n        + '[data-component=\"' + component + '\"]'\r\n        + '[data-area=\"' + area + '\"]'\r\n        + '[data-objecttable=\"local_shopping_cart\"');\r\n\r\n    buttons.forEach(addtocartbutton => {\r\n\r\n        // We need to check all the buttons.\r\n        toggleActiveButtonState(addtocartbutton);\r\n\r\n        // We only ever initialize the button once.\r\n        if (!addtocartbutton || addtocartbutton.dataset.initialized === 'true') {\r\n            return;\r\n        }\r\n        addtocartbutton.dataset.initialized = 'true';\r\n\r\n        // If the button has the nojs flag, we don't add the listener at all.\r\n\r\n        if (addtocartbutton.dataset.nojs) {\r\n            return;\r\n        }\r\n\r\n        // Add click eventlistern to oneself.\r\n        addtocartbutton.addEventListener('click', event => {\r\n\r\n            if (addtocartbutton.dataset.blocked == 'true') {\r\n                return;\r\n            }\r\n\r\n            // If we find the disabled class, the click event is aborted.\r\n            if (addtocartbutton.classList.contains('disabled')) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                // DeleteItem(itemid, component, area);\r\n            } else {\r\n                // Event.preventDefault();\r\n                // Event.stopPropagation();\r\n                addItem(itemid, component, area);\r\n            }\r\n        });\r\n    });\r\n\r\n    return;\r\n};\r\n\r\n/**\r\n * Function to reload the cart. We can pass on the certain component if we need to make sure that not only the cart is reloaded.\r\n * This is the case when adding or deleting a certain item and a special button has to be reset.\r\n * @param {*} userid\r\n */\r\nexport const reinit = (userid = 0) => {\r\n\r\n    userid = transformUserIdForCashier(userid);\r\n\r\n    Ajax.call([{\r\n        methodname: \"local_shopping_cart_get_shopping_cart_items\",\r\n        args: {\r\n            userid\r\n        },\r\n        done: function(data) {\r\n\r\n            // If we are on the cashier page, we add the possibility to add a discount to the cart items.\r\n            const oncashier = window.location.href.indexOf(\"cashier.php\");\r\n\r\n            if (oncashier > 0) {\r\n                data.iscashier = true;\r\n            } else {\r\n                data.iscashier = false;\r\n            }\r\n\r\n            let containers = [];\r\n\r\n            if (userid != 0 && data.iscashier) {\r\n                containers = document.querySelectorAll(SELECTORS.CASHIERSCART);\r\n            } else {\r\n                containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\r\n                    + \",\" + SELECTORS.CHECKOUTCART);\r\n            }\r\n\r\n            let promises = [];\r\n\r\n            // Before rendering, we convert all prices to strings with 2 fixed decimals.\r\n            convertPricesToNumberFormat(data);\r\n\r\n            // We render for promise for all the containers.\r\n            promises.push(Templates.renderForPromise('local_shopping_cart/shopping_cart_items', data).then(({html, js}) => {\r\n                containers.forEach(container => {\r\n                // We know we will always find the Navbar, so we can do this right away.\r\n                    Templates.replaceNodeContents(container, html, js);\r\n                });\r\n                return true;\r\n            }).catch((e) => {\r\n                // eslint-disable-next-line no-console\r\n                console.log(e);\r\n            }));\r\n\r\n            Promise.all(promises).then(() => {\r\n\r\n                // If we are on the cashier page, we add the possibility to add a discount to the cart items.\r\n                if (!(userid != 0 && data.iscashier)) {\r\n                    clearInterval(interval);\r\n                    initTimer(data.expirationdate);\r\n\r\n                    updateBadge(data.count);\r\n                }\r\n\r\n                toggleActiveButtonState();\r\n\r\n                updateTotalPrice(userid);\r\n\r\n                return;\r\n            }).catch(e => {\r\n                // eslint-disable-next-line no-console\r\n                console.log(e);\r\n            });\r\n\r\n        },\r\n        fail: ex => {\r\n            // eslint-disable-next-line no-console\r\n            console.log(\"ex:\" + ex);\r\n        },\r\n    }]);\r\n};\r\n\r\n/**\r\n * This function is only called when the timer invalidates the cart.\r\n * This always works for the USER-user, so no userid is transmitted.\r\n * The USER-user is chosen with the userid 0, we just reinit everything afert sending.\r\n */\r\nexport const deleteAllItems = () => {\r\n    Ajax.call([{\r\n        methodname: \"local_shopping_cart_delete_all_items_from_cart\",\r\n        args: {\r\n        },\r\n        done: function() {\r\n            reinit(0);\r\n        },\r\n        fail: function(ex) {\r\n            // eslint-disable-next-line no-console\r\n            console.log(ex);\r\n        },\r\n    }]);\r\n};\r\n\r\nexport const deleteItem = (itemid, component, area, userid) => {\r\n\r\n    userid = transformUserIdForCashier(userid);\r\n\r\n    Ajax.call([{\r\n        methodname: \"local_shopping_cart_delete_item\",\r\n        args: {\r\n            'itemid': itemid,\r\n            'component': component,\r\n            'area': area,\r\n            'userid': userid\r\n        },\r\n        done: function(data) {\r\n\r\n            getString('item_deleted', 'local_shopping_cart', data.itemname).then(message => {\r\n                showNotification(message, 'success');\r\n                return;\r\n            }).catch(e => {\r\n                // eslint-disable-next-line no-console\r\n                console.log(e);\r\n            });\r\n\r\n            reinit(userid);\r\n        },\r\n        fail: function() {\r\n\r\n            reinit(userid);\r\n        },\r\n    }]);\r\n};\r\n\r\nexport const addItem = (itemid, component, area) => {\r\n\r\n    let userid = transformUserIdForCashier();\r\n\r\n    if (!Number.isInteger(userid)) {\r\n        userid = parseInt(userid);\r\n    }\r\n\r\n    Ajax.call([{\r\n        methodname: \"local_shopping_cart_add_item\",\r\n        args: {\r\n            'area': area,\r\n            'component': component,\r\n            'itemid': itemid,\r\n            'userid': userid\r\n        },\r\n        done: function(data) {\r\n\r\n            data.component = component;\r\n            data.area = area;\r\n            data.itemid = itemid;\r\n            data.userid = userid; // For the mustache template, we need to obey structure.\r\n\r\n            if (data.success != 1) {\r\n\r\n                getString('cartisfull', 'local_shopping_cart').then(message => {\r\n                    showNotification(message, 'danger');\r\n                    return;\r\n                }).catch(e => {\r\n                    // eslint-disable-next-line no-console\r\n                    console.log(e);\r\n                });\r\n\r\n                return;\r\n            } else if (data.success == 1) {\r\n                getString('addedtocart', 'local_shopping_cart', data.itemname).then(message => {\r\n                    showNotification(message, 'success');\r\n                    return;\r\n                }).catch(e => {\r\n                    // eslint-disable-next-line no-console\r\n                    console.log(e);\r\n                });\r\n\r\n                reinit(userid);\r\n            }\r\n\r\n        },\r\n        fail: function(ex) {\r\n            // eslint-disable-next-line no-console\r\n            console.log('error', ex);\r\n        }\r\n    }], true);\r\n};\r\n\r\n/**\r\n *\r\n * @param {*} userid\r\n * @param {*} usecredit\r\n */\r\nexport const updateTotalPrice = (userid = 0, usecredit = true) => {\r\n\r\n    // On cashier, update price must always be for cashier user.\r\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\r\n\r\n    if (oncashier > 0) {\r\n        userid = CASHIERUSER;\r\n    }\r\n\r\n    if (!Number.isInteger(userid)) {\r\n        userid = parseInt(userid);\r\n    }\r\n\r\n    // We must make sure the checkbox is only once visible on the site.\r\n    // const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\r\n    usecredit = usecredit ? 1 : 0;\r\n\r\n    Ajax.call([{\r\n        methodname: \"local_shopping_cart_get_price\",\r\n        args: {\r\n            userid,\r\n            usecredit\r\n        },\r\n        done: function(data) {\r\n\r\n            // We take the usecredit value we receive from the server.\r\n            if (data.usecredit == 1) {\r\n                data.usecreditvalue = 'checked';\r\n            } else {\r\n                data.usecreditvalue = '';\r\n            }\r\n\r\n            data.checkboxid = Math.random().toString(36).slice(2, 5);\r\n\r\n            data.userid = userid;\r\n\r\n            const labelareas = document.querySelectorAll(SELECTORS.PRICELABELAREA);\r\n\r\n            // Before rendering, we convert all prices to strings with 2 fixed decimals.\r\n            convertPricesToNumberFormat(data);\r\n\r\n            Templates.renderForPromise('local_shopping_cart/price_label', data).then(({html, js}) => {\r\n\r\n                labelareas.forEach(labelarea => {\r\n                    Templates.replaceNodeContents(labelarea, html, js);\r\n\r\n                    addZeroPriceListener(data);\r\n                });\r\n\r\n                return true;\r\n            }).catch((e => {\r\n                // eslint-disable-next-line no-console\r\n                console.log(e);\r\n            }));\r\n\r\n            const checkoutButton = document.querySelector(SELECTORS.CHECKOUTBUTTON);\r\n            if (data.count == 0) {\r\n                checkoutButton.classList.add(\"disabled\");\r\n            } else {\r\n                checkoutButton.classList.remove(\"disabled\");\r\n            }\r\n\r\n        },\r\n        fail: function(ex) {\r\n            // eslint-disable-next-line no-console\r\n            console.log('error', ex);\r\n        }\r\n    }], true);\r\n};\r\n\r\n/**\r\n * Looks for the payment buttun, updates cost and adds the listener.\r\n * @param {*} data\r\n */\r\nfunction addZeroPriceListener(data) {\r\n\r\n    let paymentbutton = document.querySelector(\".shopping_cart_payment_region button\");\r\n\r\n    if (paymentbutton) {\r\n\r\n        if (paymentbutton.classList.contains('disabled')) {\r\n            return;\r\n        }\r\n\r\n        const price = data.price;\r\n        const currency = data.currency;\r\n\r\n        paymentbutton.dataset.cost = price + \" \" + currency;\r\n\r\n        if (price == 0) {\r\n\r\n            paymentbutton.addEventListener('click', dealWithZeroPrice);\r\n        } else {\r\n\r\n            paymentbutton.removeEventListener('click', dealWithZeroPrice);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} event\r\n */\r\nfunction dealWithZeroPrice(event) {\r\n\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n\r\n    confirmZeroPriceCheckoutModal(event.target);\r\n}\r\n\r\n/**\r\n * Start the timer.\r\n *\r\n * @param {integer} duration\r\n * @param {integer} display\r\n */\r\nfunction startTimer(duration, display) {\r\n\r\n    var timer = duration,\r\n                minutes,\r\n                seconds;\r\n    interval = setInterval(function() {\r\n\r\n        minutes = parseInt(timer / 60, 10);\r\n        seconds = parseInt(timer % 60, 10);\r\n\r\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n        display.textContent = minutes + \":\" + seconds;\r\n\r\n        if (--timer < 0) {\r\n            deleteAllItems();\r\n\r\n            clearInterval(interval);\r\n        }\r\n    }, 1000);\r\n}\r\n\r\n\r\n/**\r\n * Initialize Timer.\r\n *\r\n * @param {integer} expirationdate\r\n *\r\n */\r\nfunction initTimer(expirationdate = null) {\r\n\r\n    const countdownelement = document.querySelector(SELECTORS.COUNTDOWN);\r\n\r\n    if (!countdownelement) {\r\n        return;\r\n    }\r\n\r\n    if (interval) {\r\n        clearInterval(interval);\r\n    }\r\n    let delta = 0;\r\n    let now = Date.now('UTC');\r\n    now = (new Date()).getTime() / 1000;\r\n    if (expirationdate) {\r\n        delta = (expirationdate - now);\r\n    }\r\n    if (delta <= 0) {\r\n        delta = 0;\r\n        countdownelement.classList.add(\"hidden\");\r\n    } else if (delta > 0) {\r\n        countdownelement.classList.remove(\"hidden\");\r\n        startTimer(delta, countdownelement);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} element\r\n */\r\nfunction confirmZeroPriceCheckoutModal(element) {\r\n\r\n    getStrings([\r\n        {key: 'confirmzeropricecheckouttitle', component: 'local_shopping_cart'},\r\n        {key: 'confirmzeropricecheckoutbody', component: 'local_shopping_cart'},\r\n        {key: 'confirmzeropricecheckout', component: 'local_shopping_cart'}\r\n    ]\r\n    ).then(strings => {\r\n\r\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\r\n\r\n            modal.setTitle(strings[0]);\r\n                modal.setBody(strings[1]);\r\n                modal.setSaveButtonText(strings[2]);\r\n                modal.getRoot().on(ModalEvents.save, function() {\r\n\r\n                    const userid = element.dataset.userid;\r\n\r\n                    if (userid) {\r\n                        // The second parameter designs the payment method.\r\n                        // In the cart, the constant PAYMENT_METHOD_CREDITS translates to 2.\r\n                        confirmPayment(userid, 2);\r\n                    }\r\n                });\r\n\r\n                modal.show();\r\n                return modal;\r\n        }).catch(e => {\r\n            // eslint-disable-next-line no-console\r\n            console.log(e);\r\n        });\r\n        return true;\r\n    }).catch(e => {\r\n        // eslint-disable-next-line no-console\r\n        console.log(e);\r\n    });\r\n}\r\n\r\n/**\r\n * Function to update the page in the nav bar.\r\n * @param {*} count\r\n */\r\nfunction updateBadge(count) {\r\n\r\n    const badge = document.querySelector(SELECTORS.BADGECOUNT);\r\n\r\n    if (count > 0) {\r\n        badge.innerHTML = count;\r\n        badge.classList.remove('hidden');\r\n    } else {\r\n        badge.innerHTML = count;\r\n        badge.classList.add('hidden');\r\n    }\r\n}\r\n\r\n/**\r\n * Function to toggle the active state.\r\n * @param {*} button\r\n */\r\nfunction toggleActiveButtonState(button = null) {\r\n\r\n    let selector = '';\r\n    let component = null;\r\n    let area = null;\r\n    let itemid = null;\r\n\r\n    // If we have a button, we only look for this particular itemid.\r\n    if (button) {\r\n\r\n        // We'll find the right variables in the DOM.\r\n        itemid = button.dataset.itemid;\r\n        component = button.dataset.component;\r\n        area = button.dataset.area;\r\n\r\n        selector =\r\n            'div'\r\n            + '[data-itemid=\"' + itemid + '\"]'\r\n            + '[data-component=\"' + component + '\"]'\r\n            + '[data-area=\"' + area + '\"]'\r\n            + '[data-objecttable=\"local_shopping_cart\"';\r\n    } else {\r\n        // As we might have more than one of these buttons, we always need to look for all of them in the document.\r\n        // We will update for all the buttons we find.\r\n        selector =\r\n        'div'\r\n        + '[data-objecttable=\"local_shopping_cart\"';\r\n    }\r\n\r\n    const buttons = document.querySelectorAll(selector);\r\n\r\n    // Make sure item is not yet in shopping cart. If so, add disabled class.\r\n    let shoppingcart = document.querySelector(SELECTORS.CASHIERSCART);\r\n\r\n    if (!shoppingcart) {\r\n        shoppingcart = document.querySelector(SELECTORS.NAVBARCONTAINER);\r\n    }\r\n\r\n    buttons.forEach(addtocartbutton => {\r\n\r\n        component = addtocartbutton.dataset.component;\r\n        area = addtocartbutton.dataset.area;\r\n        itemid = addtocartbutton.dataset.itemid;\r\n\r\n        const cartitem = shoppingcart.querySelector('[id^=\"item-' + component + '-' + area + '-' + itemid + '\"]');\r\n\r\n        if (cartitem) {\r\n\r\n            addtocartbutton.classList.add('disabled');\r\n        } else {\r\n\r\n            addtocartbutton.classList.remove('disabled');\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Function to init Price Label and add Listener.\r\n * @param {*} userid\r\n */\r\nexport function initPriceLabel(userid) {\r\n\r\n    if (userid < 1) {\r\n        userid = 0;\r\n    }\r\n\r\n    const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\r\n\r\n    if (checkbox) {\r\n        checkbox.addEventListener('change', event => {\r\n\r\n            if (event.currentTarget.checked) {\r\n                updateTotalPrice(userid, true);\r\n            } else {\r\n                updateTotalPrice(userid, false);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * We need to know if we are on the cashier page to transform userid if necessary.\r\n * @param {integer} userid\r\n * @returns {integer}\r\n */\r\nfunction transformUserIdForCashier(userid = null) {\r\n\r\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\r\n\r\n    if ((userid == CASHIERUSER || !(userid === 0 || userid === \"0\")) && oncashier > 0) {\r\n        userid = CASHIERUSER;\r\n    } else if (userid === null) {\r\n        userid = 0;\r\n    }\r\n\r\n    if (!Number.isInteger(userid)) {\r\n        userid = parseInt(userid);\r\n    }\r\n\r\n    return userid;\r\n}\r\n\r\n/**\r\n * Helper function to convert prices to number format before rendering.\r\n * @param {Object} data the data containing the price values\r\n */\r\nfunction convertPricesToNumberFormat(data) {\r\n    // Render all prices to 2 fixed decimals.\r\n    if (data.price) {\r\n        data.price = Number(data.price).toFixed(2);\r\n    }\r\n    if (data.initialtotal) {\r\n        data.initialtotal = Number(data.initialtotal).toFixed(2);\r\n    }\r\n    if (data.initialtotal_net) {\r\n        // eslint-disable-next-line camelcase\r\n        data.initialtotal_net = Number(data.initialtotal_net).toFixed(2);\r\n    }\r\n    if (data.discount) {\r\n        data.discount = Number(data.discount).toFixed(2);\r\n    }\r\n    if (data.deductible) {\r\n        data.deductible = Number(data.deductible).toFixed(2);\r\n    }\r\n    if (data.credit) {\r\n        data.credit = Number(data.credit).toFixed(2);\r\n    }\r\n    if (data.remainingcredit) {\r\n        data.remainingcredit = Number(data.remainingcredit).toFixed(2);\r\n    }\r\n    if (data.price_net) {\r\n        // eslint-disable-next-line camelcase\r\n        data.price_net = Number(data.price_net).toFixed(2);\r\n    }\r\n    if (data.price_gross) {\r\n        // eslint-disable-next-line camelcase\r\n        data.price_gross = Number(data.price_gross).toFixed(2);\r\n    }\r\n    if (data.items) {\r\n        for (var i = 0; i < data.items.length; i++) {\r\n            if (data.items[i].price) {\r\n                data.items[i].price = Number(data.items[i].price).toFixed(2);\r\n            }\r\n            if (data.items[i].price_gross) {\r\n                // eslint-disable-next-line camelcase\r\n                data.items[i].price_gross = Number(data.items[i].price_gross).toFixed(2);\r\n            }\r\n            if (data.items[i].price_net) {\r\n                // eslint-disable-next-line camelcase\r\n                data.items[i].price_net = Number(data.items[i].price_net).toFixed(2);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Add Accept terms listener to set the right class to payment region button.\r\n * @param {element} accepttermsbutton\r\n * @param {element} paymentbutton\r\n */\r\nfunction addAcceptTermsListener(accepttermsbutton, paymentbutton) {\r\n\r\n    accepttermsbutton.addEventListener('change', event => {\r\n        if (event.currentTarget.checked) {\r\n            paymentbutton.disabled = false;\r\n        } else {\r\n            paymentbutton.disabled = true;\r\n        }\r\n    });\r\n}"],"names":["userid","checkbox","document","querySelector","SELECTORS","PRICELABELCHECKBOX","addEventListener","event","currentTarget","checked","updateTotalPrice","interval","visbilityevent","SHOPPING_CART_ITEM","NAVBARCONTAINER","TRASHCLASS","DISCOUNTCLASS","BADGECOUNT","COUNTDOWN","CASHIERSCART","CHECKOUTCART","PRICELABELAREA","CHECKOUTBUTTON","PAYMENTREGIONBUTTON","ACCEPTTERMS","expirationdate","initTimer","containers","querySelectorAll","forEach","container","element","target","classList","contains","dataset","component","area","itemid","deleteItem","readyState","reinit","visibilityState","paymentbutton","addZeroPriceListener","price","currency","accepttermsbutton","disabled","addAcceptTermsListener","buttoninit","selector","button","addtocartbutton","toggleActiveButtonState","initialized","nojs","blocked","preventDefault","stopPropagation","addItem","transformUserIdForCashier","call","methodname","args","done","data","oncashier","window","location","href","indexOf","iscashier","promises","convertPricesToNumberFormat","push","Templates","renderForPromise","then","_ref","html","js","replaceNodeContents","catch","e","console","log","Promise","all","clearInterval","count","badge","innerHTML","remove","add","updateBadge","fail","ex","deleteAllItems","itemname","message","Number","isInteger","parseInt","success","usecredit","usecreditvalue","checkboxid","Math","random","toString","slice","labelareas","_ref2","labelarea","checkoutButton","cost","dealWithZeroPrice","removeEventListener","key","strings","create","type","ModalFactory","types","SAVE_CANCEL","modal","setTitle","setBody","setSaveButtonText","getRoot","on","ModalEvents","save","show","countdownelement","delta","now","Date","display","minutes","seconds","timer","getTime","setInterval","textContent","buttons","shoppingcart","toFixed","initialtotal","initialtotal_net","discount","deductible","credit","remainingcredit","price_net","price_gross","items","i","length"],"mappings":"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"}