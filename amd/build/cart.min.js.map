{"version":3,"file":"cart.min.js","sources":["../src/cart.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\n\nimport {confirmPayment} from 'local_shopping_cart/cashier';\nimport {discountModal} from 'local_shopping_cart/cashier';\nimport {showNotification} from 'local_shopping_cart/notifications';\n\nimport DynamicForm from 'core_form/dynamicform';\n\nimport {\n    get_strings as getStrings,\n    get_string as getString\n        }\n        from 'core/str';\nimport {modifyTimeModal} from './cashier';\n\nexport var interval = null;\nexport var visbilityevent = false;\n\n// This file inits the cart on every page, on checkout and cashier.\n// The cart is always loaed entirely and replaced via css.\n// The cashiers cart are identified in the DOM via userid -1 (CASHIERUSER).\n// The translation to real userids is done in the PHP only.\n\nconst CASHIERUSER = -1;\n\nconst SELECTORS = {\n    SHOPPING_CART_ITEM: '[data-item=\"shopping_cart_item\"]',\n    NAVBARCONTAINER: '#nav-shopping_cart-popover-container .shopping-cart-items-container',\n    TRASHCLASS: 'fa-trash-o',\n    DISCOUNTCLASS: 'shoppingcart-discount-icon',\n    MODIFYTIMECLASS: 'shoppingcart-modifytime-icon',\n    BADGECOUNT: '#nav-shopping_cart-popover-container div.count-container',\n    COUNTDOWN: '#nav-shopping_cart-popover-container span.expirationtime',\n    CASHIERSCART: 'div.shopping-cart-cashier-items-container',\n    CHECKOUTCART: 'div.shopping-cart-checkout-items-container',\n    PRICELABELCHECKBOX: '.sc_price_label input.usecredit-checkbox',\n    INSTALLMENTSCHECKBOX: '.sc_price_label input.useinstallments-checkbox',\n    PRICELABELAREA: '.sc_price_label',\n    CHECKOUTBUTTON: '#nav-shopping_cart-popover-container #shopping-cart-checkout-button',\n    PAYMENTREGIONBUTTON: 'div.shopping_cart_payment_region button',\n    ACCEPTTERMS: '#accepttermsandconditions',\n    CHECKVATNRFORM: 'div.form_vatnrchecker',\n};\n/**\n *\n * @param {*} expirationtime\n */\n\n export const init = (expirationtime, nowdate) => {\n\n    initTimer(expirationtime, nowdate);\n\n    // We might have more than one container.\n    let containers = [];\n    containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n        + \",\" + SELECTORS.CASHIERSCART\n        + \",\" + SELECTORS.CHECKOUTCART);\n\n    containers.forEach(container => {\n\n        container.addEventListener('click', event => {\n\n            // Decide the target of the click.\n            const element = event.target;\n\n            if (element.classList.contains(SELECTORS.TRASHCLASS)) {\n\n                const userid = element.dataset.userid ? element.dataset.userid : 0;\n                const component = element.dataset.component;\n                const area = element.dataset.area;\n                const itemid = element.dataset.itemid;\n\n                deleteItem(itemid, component, area, userid);\n            } else if (element.classList.contains(SELECTORS.DISCOUNTCLASS)) {\n                discountModal(event);\n            } else if (element.classList.contains(SELECTORS.MODIFYTIMECLASS)) {\n                modifyTimeModal(event);\n            }\n        });\n    });\n\n    // Re-init cart on page reload or navigation to another page - required for 2-digit price precision visibility.\n    document.addEventListener(\"readystatechange\", () => {\n        if (document.readyState !== 'loading') {\n            reinit();\n        }\n    });\n\n    if (visbilityevent == false) {\n        document.addEventListener(\"visibilitychange\", function() {\n            visbilityevent = true;\n            if (document.visibilityState === 'visible') {\n                reinit();\n            }\n        });\n    }\n\n    // Initially, we need to add the zeroPriceListener once.\n    const paymentbutton = document.querySelector(SELECTORS.PAYMENTREGIONBUTTON);\n    if (paymentbutton) {\n        const data = {\n            price: paymentbutton.dataset.price,\n            currency: paymentbutton.dataset.currency,\n        };\n        addZeroPriceListener(data);\n    }\n\n    const accepttermsbutton = document.querySelector(SELECTORS.ACCEPTTERMS);\n    if (accepttermsbutton && paymentbutton) {\n        addAcceptTermsListener(accepttermsbutton, paymentbutton);\n    }\n\n    initVATNRChecker();\n};\n\nconst initVATNRChecker = () => {\n\n    const vatnrchecker = document.querySelector(SELECTORS.CHECKVATNRFORM);\n\n    if (vatnrchecker) {\n        const vatnrcheckerform = new DynamicForm(\n            vatnrchecker,\n            'local_shopping_cart\\\\form\\\\dynamicvatnrchecker'\n        );\n\n        vatnrcheckerform.addEventListener('change', (e) => {\n\n            // eslint-disable-next-line no-console\n            console.log(e.target.checked, e.target.name);\n\n            if (!e.target.name) {\n                return;\n            }\n\n            if (e.target.name == 'usevatnr'\n                && e.target.checked === false) {\n\n                // eslint-disable-next-line no-console\n                console.log(e.target.value);\n\n                vatnrcheckerform.submitFormAjax();\n            }\n        });\n\n        // After submitting we want to reload the window to update the rule list.\n        vatnrcheckerform.addEventListener(vatnrcheckerform.events.FORM_SUBMITTED, () => {\n\n            vatnrcheckerform.load();\n            // eslint-disable-next-line no-console\n            console.log('form submitted');\n\n            reinit();\n        });\n    }\n\n};\n\nexport const buttoninit = (itemid, component, area, userid) => {\n\n    // If we don't have an itemid, we need to look for all the buttons.\n    if (!itemid || !component || !area || userid === undefined) {\n        const selector = '[data-objecttable=\"local_shopping_cart\"';\n        const allbuttons = document.querySelectorAll(\n            selector);\n        allbuttons.forEach(button => {\n            const itemid = button.dataset.itemid;\n            const area = button.dataset.area;\n            const component = button.dataset.component;\n            let userid = button.dataset.userid?.trim() ? button.dataset.userid : 0;\n            buttoninit(itemid, component, area, userid);\n        });\n        return;\n    }\n\n    // Return all buttons with the add to cart functionality.\n    const buttons =\n    document.querySelectorAll(\n        'div'\n        + '[data-itemid=\"' + itemid + '\"]'\n        + '[data-component=\"' + component + '\"]'\n        + '[data-area=\"' + area + '\"]'\n        + '[data-objecttable=\"local_shopping_cart\"');\n\n    buttons.forEach(addtocartbutton => {\n\n        // We need to check all the buttons.\n        toggleActiveButtonState(addtocartbutton);\n\n        // We only ever initialize the button once.\n        if (!addtocartbutton || addtocartbutton.dataset.initialized === 'true') {\n            return;\n        }\n        addtocartbutton.dataset.initialized = 'true';\n\n        // If the button has the nojs flag, we don't add the listener at all.\n\n        if (addtocartbutton.dataset.nojs) {\n            return;\n        }\n\n        // Add click eventlistern to oneself.\n        addtocartbutton.addEventListener('click', event => {\n\n            if (addtocartbutton.dataset.blocked == 'true') {\n                return;\n            }\n\n            // If we find the disabled class, the click event is aborted.\n            if (addtocartbutton.classList.contains('disabled')) {\n                event.preventDefault();\n                event.stopPropagation();\n                // DeleteItem(itemid, component, area);\n            } else {\n                // Event.preventDefault();\n                // Event.stopPropagation();\n                addItem(itemid, component, area, userid);\n            }\n        });\n    });\n\n    return;\n};\n\n/**\n * Function to reload the cart. We can pass on the certain component if we need to make sure that not only the cart is reloaded.\n * This is the case when adding or deleting a certain item and a special button has to be reset.\n * @param {*} userid\n */\nexport const reinit = (userid = 0) => {\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_shopping_cart_items\",\n        args: {\n            userid\n        },\n        done: function(data) {\n\n            // If we are on the cashier page, we add the possibility to add a discount to the cart items.\n            const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n            if (oncashier > 0) {\n                data.iscashier = true;\n            } else {\n                data.iscashier = false;\n            }\n\n            let containers = [];\n\n            if (userid != 0 && data.iscashier) {\n                containers = document.querySelectorAll(SELECTORS.CASHIERSCART);\n            } else {\n                containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n                    + \",\" + SELECTORS.CHECKOUTCART);\n            }\n\n            let promises = [];\n\n            // Before rendering, we convert all prices to strings with 2 fixed decimals.\n            convertPricesToNumberFormat(data);\n\n            // We render for promise for all the containers.\n            promises.push(Templates.renderForPromise('local_shopping_cart/shopping_cart_items', data).then(({html, js}) => {\n                containers.forEach(container => {\n                // We know we will always find the Navbar, so we can do this right away.\n                    Templates.replaceNodeContents(container, html, js);\n                });\n                return true;\n            }).catch((e) => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            Promise.all(promises).then(() => {\n\n                // If we are on the cashier page, we add the possibility to add a discount to the cart items.\n                if (!(userid != 0 && data.iscashier)) {\n                    clearInterval(interval);\n                    initTimer(data.expirationtime, data.nowdate);\n\n                    updateBadge(data.count);\n                }\n\n                toggleActiveButtonState();\n\n                updateTotalPrice(userid);\n\n                updateItemPrice(data);\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n        },\n        fail: ex => {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};\n\n/**\n * Update item price.\n *\n * @param {mixed} data\n *\n */\nfunction updateItemPrice(data) {\n    data.items.forEach(item => {\n        document.querySelectorAll(\n            '[data-itemid=\"'\n            + item.itemid\n            + '\"][data-component=\"'\n            + item.componentname\n            + '\"][data-area=\"'\n            + item.area\n            + '\"][data-objecttable=\"local_shopping_cart\"]'\n        ).forEach(element => {\n            const pricecontainer = element.closest(\".pricecontainer\");\n            const pricecurrency = pricecontainer.querySelector(\"span.pricecurrency\");\n            pricecurrency.innerHTML = item.price + \" \" + item.currency;\n        });\n    });\n}\n\n/**\n * This function is only called when the timer invalidates the cart.\n * If no userid is provided the logged in USER will be used.\n * The USER-user is chosen with the userid 0, we just reinit everything after sending.\n * @param {*} userid\n */\nexport const deleteAllItems = (userid = 0) => {\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_all_items_from_cart\",\n        args: {\n            'userid': userid\n        },\n        done: function() {\n            reinit(0);\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(ex);\n        },\n    }]);\n};\n\nexport const deleteItem = (itemid, component, area, userid) => {\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_item\",\n        args: {\n            'itemid': itemid,\n            'component': component,\n            'area': area,\n            'userid': userid\n        },\n        done: function(data) {\n\n            getString('item_deleted', 'local_shopping_cart', data.itemname).then(message => {\n                showNotification(message, 'success');\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n            reinit(userid);\n\n            import('local_wunderbyte_table/reload')\n                // eslint-disable-next-line promise/always-return\n                .then(wbt => {\n                    wbt.reloadAllTables();\n                })\n                .catch(err => {\n                    // Handle any errors, including if the module doesn't exist\n                    // eslint-disable-next-line no-console\n                    console.log(err);\n            });\n\n        },\n        fail: function() {\n\n            reinit(userid);\n        },\n    }]);\n};\n\nexport const addItem = (itemid, component, area, userid) => {\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_add_item\",\n        args: {\n            'area': area,\n            'component': component,\n            'itemid': itemid,\n            'userid': userid\n        },\n        done: function(data) {\n            data.component = component;\n            data.area = area;\n            data.itemid = itemid;\n            data.userid = userid; // For the mustache template, we need to obey structure.\n            addItemShowNotification(data);\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n *\n * @param {*} userid\n * @param {*} usecredit\n * @param {*} useinstallments\n */\nexport const updateTotalPrice = (userid = 0, usecredit = true, useinstallments = false) => {\n\n    // On cashier, update price must always be for cashier user.\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    if (oncashier > 0) {\n        userid = CASHIERUSER;\n    }\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    // We must make sure the checkbox is only once visible on the site.\n    const checkboxes = document.querySelectorAll(SELECTORS.PRICELABELCHECKBOX);\n\n    if (checkboxes.length == 1) {\n        checkboxes.forEach(checkbox => {\n            usecredit = checkbox.checked ? 1 : 0;\n        });\n    } else {\n        usecredit = usecredit ? 1 : 0;\n    }\n    useinstallments = useinstallments ? 1 : 0;\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_price\",\n        args: {\n            userid,\n            usecredit,\n            useinstallments\n        },\n        done: function(data) {\n\n            // We take the usecredit value we receive from the server.\n            if (data.usecredit == 1) {\n                data.usecreditvalue = 'checked';\n            } else {\n                data.usecreditvalue = '';\n            }\n\n            data.checkboxid = Math.random().toString(36).slice(2, 5);\n\n            if (data.installments.length > 0) {\n                data.installmentscheckboxid = 'i' + data.checkboxid;\n            }\n\n            data.userid = userid;\n\n            const labelareas = document.querySelectorAll(SELECTORS.PRICELABELAREA);\n\n            // Before rendering, we convert all prices to strings with 2 fixed decimals.\n            convertPricesToNumberFormat(data);\n\n            Templates.renderForPromise('local_shopping_cart/price_label', data).then(({html, js}) => {\n\n                labelareas.forEach(labelarea => {\n\n                    // There are labelareas we don't want to update.\n                    if (!labelarea.dataset.noupdate) {\n                        Templates.replaceNodeContents(labelarea, html, js);\n                        addZeroPriceListener(data);\n                    }\n                });\n\n                return true;\n            }).catch((e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            const checkoutButton = document.querySelector(SELECTORS.CHECKOUTBUTTON);\n            const paymentbutton = document.querySelector(SELECTORS.PAYMENTREGIONBUTTON);\n            if (data.count == 0) {\n                if (checkoutButton) {\n                    checkoutButton.classList.add(\"disabled\");\n                }\n                if (paymentbutton) {\n                    paymentbutton.style.display = \"none\";\n                }\n            } else {\n                if (checkoutButton) {\n                    checkoutButton.classList.remove(\"disabled\");\n                }\n                if (paymentbutton) {\n                    paymentbutton.style.display = \"inline\";\n                }\n            }\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n * Looks for the payment buttun, updates cost and adds the listener.\n * @param {*} data\n */\nexport function addZeroPriceListener(data) {\n\n    let paymentbutton = document.querySelector(SELECTORS.PAYMENTREGIONBUTTON);\n\n    if (paymentbutton) {\n\n        if (paymentbutton.classList.contains('disabled')) {\n            // eslint-disable-next-line no-console\n            console.log('button disabled');\n            return;\n        }\n\n        const price = data.price;\n        const currency = data.currency;\n\n        paymentbutton.dataset.cost = price + \" \" + currency;\n\n        if (price == 0) {\n            paymentbutton.addEventListener('click', dealWithZeroPrice);\n        } else {\n            paymentbutton.removeEventListener('click', dealWithZeroPrice);\n        }\n    }\n}\n\n/**\n * Function to show notifications when items are added.\n * @param {*} data\n */\nexport function addItemShowNotification(data) {\n    const CARTPARAM_ALREADYINCART = 0; // Already in cart.\n    const CARTPARAM_SUCCESS = 1; // Item added to cart successfully.\n    const CARTPARAM_CARTISFULL = 2; // Item added to cart successfully.\n    const CARTPARAM_COSTCENTER = 3; // Item added to cart successfully.\n    const CARTPARAM_FULLYBOOKED = 4; // Item not added because item is already fully booked.\n    const CARTPARAM_ALREADYBOOKED = 5; // Item not added because item was already booked before.\n\n    switch (data.success) {\n        case CARTPARAM_ALREADYINCART:\n            reinit();\n            return;\n        case CARTPARAM_SUCCESS:\n            getString('addedtocart', 'local_shopping_cart', data.itemname).then(message => {\n                showNotification(message, 'success');\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            reinit(data.userid);\n            return;\n        case CARTPARAM_CARTISFULL:\n            getStrings([\n                {key: 'cartisfull', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setBody(strings[0]);\n                    modal.setSaveButtonText(strings[1]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_COSTCENTER:\n            getStrings([\n                {key: 'error:costcentertitle', component: 'local_shopping_cart'},\n                {key: 'error:costcentersdonotmatch', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_FULLYBOOKED:\n            getStrings([\n                {key: 'error:fullybookedtitle', component: 'local_shopping_cart'},\n                {key: 'error:fullybooked', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n\n                    // Reload when OK button is clicked.\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        window.location.reload();\n                    });\n\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_ALREADYBOOKED:\n            getStrings([\n                {key: 'error:alreadybookedtitle', component: 'local_shopping_cart'},\n                {key: 'error:alreadybooked', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n\n                    // Reload when OK button is clicked.\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        window.location.reload();\n                    });\n\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        default:\n            getStrings([\n                {key: 'error:generalcarterror', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setBody(strings[0]);\n                    modal.setSaveButtonText(strings[1]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n    }\n\n}\n\n/**\n *\n * @param {*} event\n */\nasync function dealWithZeroPrice(event) {\n\n    // eslint-disable-next-line no-console\n    console.log('click event');\n\n    event.stopPropagation();\n    event.preventDefault();\n\n    confirmZeroPriceCheckoutModal(event.target);\n}\n\n/**\n * Start the timer.\n *\n * @param {integer} duration\n * @param {integer} display\n */\nfunction startTimer(duration, display) {\n\n    var timer = duration,\n                minutes,\n                seconds;\n    interval = setInterval(function() {\n\n        minutes = parseInt(timer / 60, 10);\n        seconds = parseInt(timer % 60, 10);\n\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n        display.textContent = minutes + \":\" + seconds;\n\n        if (--timer < 0) {\n\n            // We so the expiration time has already kicked in on the server.\n            setTimeout(() => {\n                reinit(0);\n            }, 2000);\n\n            // We don't actually need to make this call.\n            // deleteAllItems();\n\n            clearInterval(interval);\n        }\n    }, 1000);\n}\n\n\n/**\n * Initialize Timer.\n *\n * @param {integer} expirationtime\n * @param {integer} nowdate\n *\n */\nfunction initTimer(expirationtime = null, nowdate = null) {\n\n    const countdownelement = document.querySelector(SELECTORS.COUNTDOWN);\n\n    if (!countdownelement || !nowdate) {\n        return;\n    }\n\n    if (interval) {\n        clearInterval(interval);\n    }\n    let delta = 0;\n    let now = nowdate;\n    if (expirationtime) {\n        delta = (expirationtime - now);\n    }\n    if (delta <= 0) {\n        delta = 0;\n        countdownelement.classList.add(\"hidden\");\n    } else if (delta > 0) {\n        countdownelement.classList.remove(\"hidden\");\n        startTimer(delta, countdownelement);\n    }\n}\n\n/**\n *\n * @param {*} element\n */\nfunction confirmZeroPriceCheckoutModal(element) {\n\n    getStrings([\n        {key: 'confirmzeropricecheckouttitle', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckoutbody', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckout', component: 'local_shopping_cart'}\n    ]\n    ).then(strings => {\n        // eslint-disable-next-line promise/no-nesting\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n                modal.setBody(strings[1]);\n                modal.setSaveButtonText(strings[2]);\n                modal.getRoot().on(ModalEvents.save, function() {\n\n                    const userid = element.dataset.userid;\n\n                    if (userid) {\n                        // The second parameter designs the payment method.\n                        // In the cart, the constant PAYMENT_METHOD_CREDITS translates to 2.\n                        confirmPayment(userid, 2);\n                    }\n                });\n\n                modal.show();\n                return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n * Function to update the page in the nav bar.\n * @param {*} count\n */\nfunction updateBadge(count) {\n\n    const badge = document.querySelector(SELECTORS.BADGECOUNT);\n\n    if (count > 0) {\n        badge.innerHTML = count;\n        badge.classList.remove('hidden');\n    } else {\n        badge.innerHTML = count;\n        badge.classList.add('hidden');\n    }\n}\n\n/**\n * Function to toggle the active state.\n * @param {*} button\n */\nfunction toggleActiveButtonState(button = null) {\n\n    let selector = '';\n    let component = null;\n    let area = null;\n    let itemid = null;\n\n    // If we have a button, we only look for this particular itemid.\n    if (button) {\n\n        // We'll find the right variables in the DOM.\n        itemid = button.dataset.itemid;\n        component = button.dataset.component;\n        area = button.dataset.area;\n\n        selector =\n            'div'\n            + '[data-itemid=\"' + itemid + '\"]'\n            + '[data-component=\"' + component + '\"]'\n            + '[data-area=\"' + area + '\"]'\n            + '[data-objecttable=\"local_shopping_cart\"';\n    } else {\n        // As we might have more than one of these buttons, we always need to look for all of them in the document.\n        // We will update for all the buttons we find.\n        selector =\n        'div'\n        + '[data-objecttable=\"local_shopping_cart\"';\n    }\n\n    const buttons = document.querySelectorAll(selector);\n\n    // Make sure item is not yet in shopping cart. If so, add disabled class.\n    let shoppingcart = document.querySelector(SELECTORS.CASHIERSCART);\n\n    if (!shoppingcart) {\n        shoppingcart = document.querySelector(SELECTORS.NAVBARCONTAINER);\n    }\n\n    buttons.forEach(addtocartbutton => {\n\n        component = addtocartbutton.dataset.component;\n        area = addtocartbutton.dataset.area;\n        itemid = addtocartbutton.dataset.itemid;\n\n        const cartitem = shoppingcart.querySelector('[id=\"item-' + component + '-' + area + '-' + itemid + '\"]');\n\n        if (cartitem) {\n\n            addtocartbutton.classList.add('disabled');\n        } else {\n\n            addtocartbutton.classList.remove('disabled');\n        }\n    });\n}\n\n/**\n * Function to init Price Label and add Listener.\n * @param {*} userid\n */\nexport function initPriceLabel(userid) {\n\n    if (userid < 1) {\n        userid = 0;\n    }\n\n    const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n    const installmentscheckbox = document.querySelector(SELECTORS.INSTALLMENTSCHECKBOX);\n\n    if (checkbox && !checkbox.initialized) {\n        checkbox.initialized = true;\n        checkbox.addEventListener('change', event => {\n\n            var installementsvalue = false;\n            if (installmentscheckbox) {\n                installementsvalue = installmentscheckbox.checked;\n            }\n\n            if (event.currentTarget.checked) {\n                updateTotalPrice(userid, true, installementsvalue);\n            } else {\n                updateTotalPrice(userid, false, installementsvalue);\n            }\n        });\n    }\n\n    if (installmentscheckbox && !installmentscheckbox.initialized) {\n        installmentscheckbox.initialized = true;\n\n        // eslint-disable-next-line no-console\n        console.log('add event listener to installment');\n        installmentscheckbox.addEventListener('change', event => {\n\n            // eslint-disable-next-line no-console\n            console.log(event.currentTarget, event.currentTarget.checked);\n\n            // eslint-disable-next-line no-console\n            console.log(checkbox);\n\n            let checkboxchecked = null;\n            if (checkbox) {\n                checkboxchecked = checkbox.checked;\n            }\n\n            updateTotalPrice(userid, checkboxchecked, event.currentTarget.checked);\n\n        });\n    }\n}\n\n/**\n * Helper function to convert prices to number format before rendering.\n * @param {Object} data the data containing the price values\n */\nfunction convertPricesToNumberFormat(data) {\n    // Render all prices to 2 fixed decimals.\n    if (data.price) {\n        data.price = Number(data.price).toFixed(2);\n    }\n    if (data.initialtotal) {\n        data.initialtotal = Number(data.initialtotal).toFixed(2);\n    }\n    if (data.initialtotal_net) {\n        // eslint-disable-next-line camelcase\n        data.initialtotal_net = Number(data.initialtotal_net).toFixed(2);\n    }\n    if (data.discount) {\n        data.discount = Number(data.discount).toFixed(2);\n    }\n    if (data.deductible) {\n        data.deductible = Number(data.deductible).toFixed(2);\n    }\n    if (data.credit) {\n        data.credit = Number(data.credit).toFixed(2);\n    }\n    if (data.remainingcredit) {\n        data.remainingcredit = Number(data.remainingcredit).toFixed(2);\n    }\n    if (data.price_net) {\n        // eslint-disable-next-line camelcase\n        data.price_net = Number(data.price_net).toFixed(2);\n    }\n    if (data.price_gross) {\n        // eslint-disable-next-line camelcase\n        data.price_gross = Number(data.price_gross).toFixed(2);\n    }\n    if (data.items) {\n        for (var i = 0; i < data.items.length; i++) {\n            if (data.items[i].price) {\n                data.items[i].price = Number(data.items[i].price).toFixed(2);\n            }\n            if (data.items[i].price_gross) {\n                // eslint-disable-next-line camelcase\n                data.items[i].price_gross = Number(data.items[i].price_gross).toFixed(2);\n            }\n            if (data.items[i].price_net) {\n                // eslint-disable-next-line camelcase\n                data.items[i].price_net = Number(data.items[i].price_net).toFixed(2);\n            }\n        }\n    }\n}\n\n/**\n * Add Accept terms listener to set the right class to payment region button.\n * @param {element} accepttermsbutton\n * @param {element} paymentbutton\n */\nfunction addAcceptTermsListener(accepttermsbutton, paymentbutton) {\n\n    accepttermsbutton.addEventListener('change', event => {\n        if (event.currentTarget.checked) {\n            paymentbutton.disabled = false;\n        } else {\n            paymentbutton.disabled = true;\n        }\n    });\n}"],"names":["userid","checkbox","document","querySelector","SELECTORS","PRICELABELCHECKBOX","installmentscheckbox","INSTALLMENTSCHECKBOX","initialized","addEventListener","event","installementsvalue","checked","currentTarget","updateTotalPrice","console","log","checkboxchecked","_ajax","_interopRequireDefault","_templates","_modal_factory","_modal_events","_dynamicform","_systemImportTransformerGlobalIdentifier","window","self","global","e","__esModule","default","interval","_exports","visbilityevent","SHOPPING_CART_ITEM","NAVBARCONTAINER","TRASHCLASS","DISCOUNTCLASS","MODIFYTIMECLASS","BADGECOUNT","COUNTDOWN","CASHIERSCART","CHECKOUTCART","PRICELABELAREA","CHECKOUTBUTTON","PAYMENTREGIONBUTTON","ACCEPTTERMS","CHECKVATNRFORM","init","expirationtime","nowdate","initTimer","containers","querySelectorAll","forEach","container","element","target","classList","contains","dataset","component","area","itemid","deleteItem","discountModal","modifyTimeModal","readyState","reinit","visibilityState","paymentbutton","addZeroPriceListener","price","currency","accepttermsbutton","disabled","addAcceptTermsListener","initVATNRChecker","vatnrchecker","vatnrcheckerform","DynamicForm","name","value","submitFormAjax","events","FORM_SUBMITTED","load","buttoninit","undefined","selector","button","_button$dataset$useri","trim","addtocartbutton","toggleActiveButtonState","nojs","blocked","preventDefault","stopPropagation","addItem","arguments","length","Ajax","call","methodname","args","done","data","oncashier","location","href","indexOf","iscashier","promises","convertPricesToNumberFormat","push","Templates","renderForPromise","then","_ref","html","js","replaceNodeContents","catch","Promise","all","clearInterval","count","badge","innerHTML","remove","add","updateBadge","items","item","componentname","closest","updateItemPrice","fail","ex","deleteAllItems","getString","get_string","itemname","message","showNotification","define","amd","resolve","reject","require","module","exports","loader","wbt","reloadAllTables","err","Number","isInteger","parseInt","addItemShowNotification","usecredit","useinstallments","checkboxes","usecreditvalue","checkboxid","Math","random","toString","slice","installments","installmentscheckboxid","labelareas","_ref2","labelarea","noupdate","checkoutButton","style","display","cost","dealWithZeroPrice","removeEventListener","success","getStrings","key","strings","ModalFactory","create","type","types","SAVE_CANCEL","modal","setBody","setSaveButtonText","show","setTitle","getRoot","on","ModalEvents","save","reload","async","confirmPayment","countdownelement","delta","minutes","seconds","timer","setInterval","textContent","setTimeout","buttons","shoppingcart","toFixed","initialtotal","initialtotal_net","discount","deductible","credit","remainingcredit","price_net","price_gross","i"],"mappings":"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"}