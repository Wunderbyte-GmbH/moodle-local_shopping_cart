{"version":3,"file":"cart.min.js","sources":["../src/cart.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\n\nimport {confirmPayment} from 'local_shopping_cart/cashier';\nimport {discountModal} from 'local_shopping_cart/cashier';\nimport {showNotification} from 'local_shopping_cart/notifications';\n\nimport {\n    get_strings as getStrings,\n    get_string as getString\n        }\n        from 'core/str';\n\nexport var interval = null;\nexport var visbilityevent = false;\n\n// This file inits the cart on every page, on checkout and cashier.\n// The cart is always loaed entirely and replaced via css.\n// The cashiers cart are identified in the DOM via userid -1 (CASHIERUSER).\n// The translation to real userids is done in the PHP only.\n\nconst CASHIERUSER = -1;\n\nconst SELECTORS = {\n    SHOPPING_CART_ITEM: '[data-item=\"shopping_cart_item\"]',\n    NAVBARCONTAINER: '#nav-shopping_cart-popover-container .shopping-cart-items-container',\n    TRASHCLASS: 'fa-trash-o',\n    DISCOUNTCLASS: 'shoppingcart-discount-icon',\n    BADGECOUNT: '#nav-shopping_cart-popover-container div.count-container',\n    COUNTDOWN: '#nav-shopping_cart-popover-container span.expirationtime',\n    CASHIERSCART: 'div.shopping-cart-cashier-items-container',\n    CHECKOUTCART: 'div.shopping-cart-checkout-items-container',\n    PRICELABELCHECKBOX: '.sc_price_label input.usecredit-checkbox',\n    INSTALLMENTSCHECKBOX: '.sc_price_label input.useinstallments-checkbox',\n    PRICELABELAREA: '.sc_price_label',\n    CHECKOUTBUTTON: '#nav-shopping_cart-popover-container #shopping-cart-checkout-button',\n    PAYMENTREGIONBUTTON: 'div.shopping_cart_payment_region button',\n    ACCEPTTERMS: '#accepttermsnandconditions',\n};\n/**\n *\n * @param {*} expirationtime\n */\n\n export const init = (expirationtime, nowdate) => {\n\n    // eslint-disable-next-line no-console\n    console.log(expirationtime, nowdate);\n\n    initTimer(expirationtime, nowdate);\n\n    // We might have more than one container.\n    let containers = [];\n    containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n        + \",\" + SELECTORS.CASHIERSCART\n        + \",\" + SELECTORS.CHECKOUTCART);\n\n    containers.forEach(container => {\n\n        container.addEventListener('click', event => {\n\n            // Decide the target of the click.\n            const element = event.target;\n\n            if (element.classList.contains(SELECTORS.TRASHCLASS)) {\n\n                const userid = element.dataset.userid ? element.dataset.userid : 0;\n                const component = element.dataset.component;\n                const area = element.dataset.area;\n                const itemid = element.dataset.itemid;\n\n                deleteItem(itemid, component, area, userid);\n            } else if (element.classList.contains(SELECTORS.DISCOUNTCLASS)) {\n\n                discountModal(event);\n            }\n        });\n    });\n\n    // Re-init cart on page reload or navigation to another page - required for 2-digit price precision visibility.\n    document.addEventListener(\"readystatechange\", () => {\n        if (document.readyState !== 'loading') {\n            reinit();\n        }\n    });\n\n    if (visbilityevent == false) {\n        document.addEventListener(\"visibilitychange\", function() {\n            visbilityevent = true;\n            if (document.visibilityState === 'visible') {\n                reinit();\n            }\n        });\n    }\n\n    // Initially, we need to add the zeroPriceListener once.\n    const paymentbutton = document.querySelector(SELECTORS.PAYMENTREGIONBUTTON);\n    if (paymentbutton) {\n        const data = {\n            price: paymentbutton.dataset.price,\n            currency: paymentbutton.dataset.currency,\n        };\n        addZeroPriceListener(data);\n    }\n\n    const accepttermsbutton = document.querySelector(SELECTORS.ACCEPTTERMS);\n    if (accepttermsbutton && paymentbutton) {\n        addAcceptTermsListener(accepttermsbutton, paymentbutton);\n    }\n};\n\nexport const buttoninit = (itemid, component, area) => {\n\n    // If we don't have an itemid, we need to look for all the buttons.\n    if (!itemid || !component || !area) {\n        const selector = '[data-objecttable=\"local_shopping_cart\"';\n        const allbuttons = document.querySelectorAll(\n            selector);\n\n        allbuttons.forEach(button => {\n            const itemid = button.dataset.itemid;\n            const area = button.dataset.area;\n            const component = button.dataset.component;\n            buttoninit(itemid, component, area);\n        });\n        return;\n    }\n\n    // Return all buttons with the add to cart functionality.\n    const buttons =\n    document.querySelectorAll(\n        'div'\n        + '[data-itemid=\"' + itemid + '\"]'\n        + '[data-component=\"' + component + '\"]'\n        + '[data-area=\"' + area + '\"]'\n        + '[data-objecttable=\"local_shopping_cart\"');\n\n    buttons.forEach(addtocartbutton => {\n\n        // We need to check all the buttons.\n        toggleActiveButtonState(addtocartbutton);\n\n        // We only ever initialize the button once.\n        if (!addtocartbutton || addtocartbutton.dataset.initialized === 'true') {\n            return;\n        }\n        addtocartbutton.dataset.initialized = 'true';\n\n        // If the button has the nojs flag, we don't add the listener at all.\n\n        if (addtocartbutton.dataset.nojs) {\n            return;\n        }\n\n        // Add click eventlistern to oneself.\n        addtocartbutton.addEventListener('click', event => {\n\n            if (addtocartbutton.dataset.blocked == 'true') {\n                return;\n            }\n\n            // If we find the disabled class, the click event is aborted.\n            if (addtocartbutton.classList.contains('disabled')) {\n                event.preventDefault();\n                event.stopPropagation();\n                // DeleteItem(itemid, component, area);\n            } else {\n                // Event.preventDefault();\n                // Event.stopPropagation();\n                addItem(itemid, component, area);\n            }\n        });\n    });\n\n    return;\n};\n\n/**\n * Function to reload the cart. We can pass on the certain component if we need to make sure that not only the cart is reloaded.\n * This is the case when adding or deleting a certain item and a special button has to be reset.\n * @param {*} userid\n */\nexport const reinit = (userid = 0) => {\n\n    userid = transformUserIdForCashier(userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_shopping_cart_items\",\n        args: {\n            userid\n        },\n        done: function(data) {\n\n            // If we are on the cashier page, we add the possibility to add a discount to the cart items.\n            const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n            if (oncashier > 0) {\n                data.iscashier = true;\n            } else {\n                data.iscashier = false;\n            }\n\n            let containers = [];\n\n            if (userid != 0 && data.iscashier) {\n                containers = document.querySelectorAll(SELECTORS.CASHIERSCART);\n            } else {\n                containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n                    + \",\" + SELECTORS.CHECKOUTCART);\n            }\n\n            let promises = [];\n\n            // Before rendering, we convert all prices to strings with 2 fixed decimals.\n            convertPricesToNumberFormat(data);\n\n            // We render for promise for all the containers.\n            promises.push(Templates.renderForPromise('local_shopping_cart/shopping_cart_items', data).then(({html, js}) => {\n                containers.forEach(container => {\n                // We know we will always find the Navbar, so we can do this right away.\n                    Templates.replaceNodeContents(container, html, js);\n                });\n                return true;\n            }).catch((e) => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            Promise.all(promises).then(() => {\n\n                // If we are on the cashier page, we add the possibility to add a discount to the cart items.\n                if (!(userid != 0 && data.iscashier)) {\n                    clearInterval(interval);\n                    initTimer(data.expirationtime, data.nowdate);\n\n                    updateBadge(data.count);\n                }\n\n                toggleActiveButtonState();\n\n                updateTotalPrice(userid);\n\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n        },\n        fail: ex => {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};\n\n/**\n * This function is only called when the timer invalidates the cart.\n * If no userid is provided the logged in USER will be used.\n * The USER-user is chosen with the userid 0, we just reinit everything after sending.\n * @param {*} userid\n */\nexport const deleteAllItems = (userid = 0) => {\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_all_items_from_cart\",\n        args: {\n            'userid': userid\n        },\n        done: function() {\n            reinit(0);\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(ex);\n        },\n    }]);\n};\n\nexport const deleteItem = (itemid, component, area, userid) => {\n\n    userid = transformUserIdForCashier(userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_item\",\n        args: {\n            'itemid': itemid,\n            'component': component,\n            'area': area,\n            'userid': userid\n        },\n        done: function(data) {\n\n            getString('item_deleted', 'local_shopping_cart', data.itemname).then(message => {\n                showNotification(message, 'success');\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n            reinit(userid);\n\n            import('local_wunderbyte_table/reload')\n                // eslint-disable-next-line promise/always-return\n                .then(wbt => {\n                    wbt.reloadAllTables();\n                })\n                .catch(err => {\n                    // Handle any errors, including if the module doesn't exist\n                    // eslint-disable-next-line no-console\n                    console.log(err);\n            });\n\n        },\n        fail: function() {\n\n            reinit(userid);\n        },\n    }]);\n};\n\nexport const addItem = (itemid, component, area) => {\n\n    let userid = transformUserIdForCashier();\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_add_item\",\n        args: {\n            'area': area,\n            'component': component,\n            'itemid': itemid,\n            'userid': userid\n        },\n        done: function(data) {\n            data.component = component;\n            data.area = area;\n            data.itemid = itemid;\n            data.userid = userid; // For the mustache template, we need to obey structure.\n            addItemShowNotification(data);\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n *\n * @param {*} userid\n * @param {*} usecredit\n * @param {*} useinstallments\n */\nexport const updateTotalPrice = (userid = 0, usecredit = true, useinstallments = false) => {\n\n    // On cashier, update price must always be for cashier user.\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    if (oncashier > 0) {\n        userid = CASHIERUSER;\n    }\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    // We must make sure the checkbox is only once visible on the site.\n    // const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n    usecredit = usecredit ? 1 : 0;\n    useinstallments = useinstallments ? 1 : 0;\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_price\",\n        args: {\n            userid,\n            usecredit,\n            useinstallments\n        },\n        done: function(data) {\n\n            // We take the usecredit value we receive from the server.\n            if (data.usecredit == 1) {\n                data.usecreditvalue = 'checked';\n            } else {\n                data.usecreditvalue = '';\n            }\n\n            data.checkboxid = Math.random().toString(36).slice(2, 5);\n\n            if (data.installments.length > 0) {\n                data.installmentscheckboxid = 'i' + data.checkboxid;\n            }\n\n            data.userid = userid;\n\n            const labelareas = document.querySelectorAll(SELECTORS.PRICELABELAREA);\n\n            // Before rendering, we convert all prices to strings with 2 fixed decimals.\n            convertPricesToNumberFormat(data);\n\n            Templates.renderForPromise('local_shopping_cart/price_label', data).then(({html, js}) => {\n\n                labelareas.forEach(labelarea => {\n                    Templates.replaceNodeContents(labelarea, html, js);\n\n                    addZeroPriceListener(data);\n                });\n\n                return true;\n            }).catch((e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            const checkoutButton = document.querySelector(SELECTORS.CHECKOUTBUTTON);\n            const paymentbutton = document.querySelector(SELECTORS.PAYMENTREGIONBUTTON);\n            if (data.count == 0) {\n                if (checkoutButton) {\n                    checkoutButton.classList.add(\"disabled\");\n                }\n                if (paymentbutton) {\n                    paymentbutton.style.display = \"none\";\n                }\n            } else {\n                if (checkoutButton) {\n                    checkoutButton.classList.remove(\"disabled\");\n                }\n                if (paymentbutton) {\n                    paymentbutton.style.display = \"inline\";\n                }\n            }\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n * Looks for the payment buttun, updates cost and adds the listener.\n * @param {*} data\n */\nfunction addZeroPriceListener(data) {\n\n    let paymentbutton = document.querySelector(\".shopping_cart_payment_region button\");\n\n    if (paymentbutton) {\n\n        if (paymentbutton.classList.contains('disabled')) {\n            return;\n        }\n\n        const price = data.price;\n        const currency = data.currency;\n\n        paymentbutton.dataset.cost = price + \" \" + currency;\n\n        if (price == 0) {\n\n            paymentbutton.addEventListener('click', dealWithZeroPrice);\n        } else {\n\n            paymentbutton.removeEventListener('click', dealWithZeroPrice);\n        }\n    }\n}\n\n/**\n * Function to show notifications when items are added.\n * @param {*} data\n */\nexport function addItemShowNotification(data) {\n    const CARTPARAM_ALREADYINCART = 0; // Already in cart.\n    const CARTPARAM_SUCCESS = 1; // Item added to cart successfully.\n    const CARTPARAM_CARTISFULL = 2; // Item added to cart successfully.\n    const CARTPARAM_COSTCENTER = 3; // Item added to cart successfully.\n    const CARTPARAM_FULLYBOOKED = 4; // Item not added because item is already fully booked.\n    const CARTPARAM_ALREADYBOOKED = 5; // Item not added because item was already booked before.\n\n    switch (data.success) {\n        case CARTPARAM_ALREADYINCART:\n            reinit();\n            return;\n        case CARTPARAM_SUCCESS:\n            getString('addedtocart', 'local_shopping_cart', data.itemname).then(message => {\n                showNotification(message, 'success');\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            reinit(data.userid);\n            return;\n        case CARTPARAM_CARTISFULL:\n            getStrings([\n                {key: 'cartisfull', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setBody(strings[0]);\n                    modal.setSaveButtonText(strings[1]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_COSTCENTER:\n            getStrings([\n                {key: 'error:costcentertitle', component: 'local_shopping_cart'},\n                {key: 'error:costcentersdonotmatch', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_FULLYBOOKED:\n            getStrings([\n                {key: 'error:fullybookedtitle', component: 'local_shopping_cart'},\n                {key: 'error:fullybooked', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n\n                    // Reload when OK button is clicked.\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        window.location.reload();\n                    });\n\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_ALREADYBOOKED:\n            getStrings([\n                {key: 'error:alreadybookedtitle', component: 'local_shopping_cart'},\n                {key: 'error:alreadybooked', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n\n                    // Reload when OK button is clicked.\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        window.location.reload();\n                    });\n\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        default:\n            getStrings([\n                {key: 'error:generalcarterror', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setBody(strings[0]);\n                    modal.setSaveButtonText(strings[1]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n    }\n\n}\n\n/**\n *\n * @param {*} event\n */\nfunction dealWithZeroPrice(event) {\n\n    event.stopPropagation();\n    event.preventDefault();\n\n    confirmZeroPriceCheckoutModal(event.target);\n}\n\n/**\n * Start the timer.\n *\n * @param {integer} duration\n * @param {integer} display\n */\nfunction startTimer(duration, display) {\n\n    var timer = duration,\n                minutes,\n                seconds;\n    interval = setInterval(function() {\n\n        minutes = parseInt(timer / 60, 10);\n        seconds = parseInt(timer % 60, 10);\n\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n        display.textContent = minutes + \":\" + seconds;\n\n        if (--timer < 0) {\n\n            // We so the expiration time has already kicked in on the server.\n            setTimeout(() => {\n                reinit(0);\n            }, 2000);\n\n            // We don't actually need to make this call.\n            // deleteAllItems();\n\n            clearInterval(interval);\n        }\n    }, 1000);\n}\n\n\n/**\n * Initialize Timer.\n *\n * @param {integer} expirationtime\n * @param {integer} nowdate\n *\n */\nfunction initTimer(expirationtime = null, nowdate = null) {\n\n    const countdownelement = document.querySelector(SELECTORS.COUNTDOWN);\n\n    if (!countdownelement || !nowdate) {\n        return;\n    }\n\n    if (interval) {\n        clearInterval(interval);\n    }\n    let delta = 0;\n    let now = nowdate;\n    if (expirationtime) {\n        delta = (expirationtime - now);\n    }\n    if (delta <= 0) {\n        delta = 0;\n        countdownelement.classList.add(\"hidden\");\n    } else if (delta > 0) {\n        countdownelement.classList.remove(\"hidden\");\n        startTimer(delta, countdownelement);\n    }\n}\n\n/**\n *\n * @param {*} element\n */\nfunction confirmZeroPriceCheckoutModal(element) {\n\n    getStrings([\n        {key: 'confirmzeropricecheckouttitle', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckoutbody', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckout', component: 'local_shopping_cart'}\n    ]\n    ).then(strings => {\n        // eslint-disable-next-line promise/no-nesting\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n                modal.setBody(strings[1]);\n                modal.setSaveButtonText(strings[2]);\n                modal.getRoot().on(ModalEvents.save, function() {\n\n                    const userid = element.dataset.userid;\n\n                    if (userid) {\n                        // The second parameter designs the payment method.\n                        // In the cart, the constant PAYMENT_METHOD_CREDITS translates to 2.\n                        confirmPayment(userid, 2);\n                    }\n                });\n\n                modal.show();\n                return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n * Function to update the page in the nav bar.\n * @param {*} count\n */\nfunction updateBadge(count) {\n\n    const badge = document.querySelector(SELECTORS.BADGECOUNT);\n\n    if (count > 0) {\n        badge.innerHTML = count;\n        badge.classList.remove('hidden');\n    } else {\n        badge.innerHTML = count;\n        badge.classList.add('hidden');\n    }\n}\n\n/**\n * Function to toggle the active state.\n * @param {*} button\n */\nfunction toggleActiveButtonState(button = null) {\n\n    let selector = '';\n    let component = null;\n    let area = null;\n    let itemid = null;\n\n    // If we have a button, we only look for this particular itemid.\n    if (button) {\n\n        // We'll find the right variables in the DOM.\n        itemid = button.dataset.itemid;\n        component = button.dataset.component;\n        area = button.dataset.area;\n\n        selector =\n            'div'\n            + '[data-itemid=\"' + itemid + '\"]'\n            + '[data-component=\"' + component + '\"]'\n            + '[data-area=\"' + area + '\"]'\n            + '[data-objecttable=\"local_shopping_cart\"';\n    } else {\n        // As we might have more than one of these buttons, we always need to look for all of them in the document.\n        // We will update for all the buttons we find.\n        selector =\n        'div'\n        + '[data-objecttable=\"local_shopping_cart\"';\n    }\n\n    const buttons = document.querySelectorAll(selector);\n\n    // Make sure item is not yet in shopping cart. If so, add disabled class.\n    let shoppingcart = document.querySelector(SELECTORS.CASHIERSCART);\n\n    if (!shoppingcart) {\n        shoppingcart = document.querySelector(SELECTORS.NAVBARCONTAINER);\n    }\n\n    buttons.forEach(addtocartbutton => {\n\n        component = addtocartbutton.dataset.component;\n        area = addtocartbutton.dataset.area;\n        itemid = addtocartbutton.dataset.itemid;\n\n        const cartitem = shoppingcart.querySelector('[id=\"item-' + component + '-' + area + '-' + itemid + '\"]');\n\n        if (cartitem) {\n\n            addtocartbutton.classList.add('disabled');\n        } else {\n\n            addtocartbutton.classList.remove('disabled');\n        }\n    });\n}\n\n/**\n * Function to init Price Label and add Listener.\n * @param {*} userid\n */\nexport function initPriceLabel(userid) {\n\n    // eslint-disable-next-line no-console\n    console.log('initpricelabel');\n\n    if (userid < 1) {\n        userid = 0;\n    }\n\n    const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n    const installmentscheckbox = document.querySelector(SELECTORS.INSTALLMENTSCHECKBOX);\n\n    if (checkbox && !checkbox.initialized) {\n        checkbox.initialized = true;\n        checkbox.addEventListener('change', event => {\n\n            var installementsvalue = false;\n            if (installmentscheckbox) {\n                installementsvalue = installmentscheckbox.checked;\n            }\n\n            if (event.currentTarget.checked) {\n                updateTotalPrice(userid, true, installementsvalue);\n            } else {\n                updateTotalPrice(userid, false, installementsvalue);\n            }\n        });\n    }\n\n    if (installmentscheckbox && !installmentscheckbox.initialized) {\n        installmentscheckbox.initialized = true;\n\n        // eslint-disable-next-line no-console\n        console.log('add event listener to installment');\n        installmentscheckbox.addEventListener('change', event => {\n\n            // eslint-disable-next-line no-console\n            console.log(event.currentTarget, event.currentTarget.checked);\n\n            if (event.currentTarget.checked) {\n                updateTotalPrice(userid, checkbox.checked, true);\n            } else {\n                updateTotalPrice(userid, checkbox.checked, false);\n            }\n        });\n    }\n}\n\n/**\n * We need to know if we are on the cashier page to transform userid if necessary.\n * @param {integer} userid\n * @returns {integer}\n */\nfunction transformUserIdForCashier(userid = null) {\n\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    if ((userid == CASHIERUSER || !(userid === 0 || userid === \"0\")) && oncashier > 0) {\n        userid = CASHIERUSER;\n    } else if (userid === null) {\n        userid = 0;\n    }\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    return userid;\n}\n\n/**\n * Helper function to convert prices to number format before rendering.\n * @param {Object} data the data containing the price values\n */\nfunction convertPricesToNumberFormat(data) {\n    // Render all prices to 2 fixed decimals.\n    if (data.price) {\n        data.price = Number(data.price).toFixed(2);\n    }\n    if (data.initialtotal) {\n        data.initialtotal = Number(data.initialtotal).toFixed(2);\n    }\n    if (data.initialtotal_net) {\n        // eslint-disable-next-line camelcase\n        data.initialtotal_net = Number(data.initialtotal_net).toFixed(2);\n    }\n    if (data.discount) {\n        data.discount = Number(data.discount).toFixed(2);\n    }\n    if (data.deductible) {\n        data.deductible = Number(data.deductible).toFixed(2);\n    }\n    if (data.credit) {\n        data.credit = Number(data.credit).toFixed(2);\n    }\n    if (data.remainingcredit) {\n        data.remainingcredit = Number(data.remainingcredit).toFixed(2);\n    }\n    if (data.price_net) {\n        // eslint-disable-next-line camelcase\n        data.price_net = Number(data.price_net).toFixed(2);\n    }\n    if (data.price_gross) {\n        // eslint-disable-next-line camelcase\n        data.price_gross = Number(data.price_gross).toFixed(2);\n    }\n    if (data.items) {\n        for (var i = 0; i < data.items.length; i++) {\n            if (data.items[i].price) {\n                data.items[i].price = Number(data.items[i].price).toFixed(2);\n            }\n            if (data.items[i].price_gross) {\n                // eslint-disable-next-line camelcase\n                data.items[i].price_gross = Number(data.items[i].price_gross).toFixed(2);\n            }\n            if (data.items[i].price_net) {\n                // eslint-disable-next-line camelcase\n                data.items[i].price_net = Number(data.items[i].price_net).toFixed(2);\n            }\n        }\n    }\n}\n\n/**\n * Add Accept terms listener to set the right class to payment region button.\n * @param {element} accepttermsbutton\n * @param {element} paymentbutton\n */\nfunction addAcceptTermsListener(accepttermsbutton, paymentbutton) {\n\n    accepttermsbutton.addEventListener('change', event => {\n        if (event.currentTarget.checked) {\n            paymentbutton.disabled = false;\n        } else {\n            paymentbutton.disabled = true;\n        }\n    });\n}"],"names":["userid","console","log","checkbox","document","querySelector","SELECTORS","PRICELABELCHECKBOX","installmentscheckbox","INSTALLMENTSCHECKBOX","initialized","addEventListener","event","installementsvalue","checked","currentTarget","updateTotalPrice","_ajax","_interopRequireDefault","_templates","_modal_factory","_modal_events","_systemImportTransformerGlobalIdentifier","window","self","global","obj","__esModule","default","interval","_exports","visbilityevent","SHOPPING_CART_ITEM","NAVBARCONTAINER","TRASHCLASS","DISCOUNTCLASS","BADGECOUNT","COUNTDOWN","CASHIERSCART","CHECKOUTCART","PRICELABELAREA","CHECKOUTBUTTON","PAYMENTREGIONBUTTON","ACCEPTTERMS","init","expirationtime","nowdate","initTimer","containers","querySelectorAll","forEach","container","element","target","classList","contains","dataset","component","area","itemid","deleteItem","discountModal","readyState","reinit","visibilityState","paymentbutton","addZeroPriceListener","price","currency","accepttermsbutton","disabled","addAcceptTermsListener","buttoninit","selector","button","addtocartbutton","toggleActiveButtonState","nojs","blocked","preventDefault","stopPropagation","addItem","arguments","length","undefined","transformUserIdForCashier","Ajax","call","methodname","args","done","data","oncashier","location","href","indexOf","iscashier","promises","convertPricesToNumberFormat","push","Templates","renderForPromise","then","_ref","html","js","replaceNodeContents","catch","e","Promise","all","clearInterval","count","badge","innerHTML","remove","add","updateBadge","fail","ex","deleteAllItems","getString","itemname","message","showNotification","define","amd","resolve","reject","require","module","exports","loader","wbt","reloadAllTables","err","Number","isInteger","parseInt","addItemShowNotification","usecredit","useinstallments","usecreditvalue","checkboxid","Math","random","toString","slice","installments","installmentscheckboxid","labelareas","_ref2","labelarea","checkoutButton","style","display","cost","dealWithZeroPrice","removeEventListener","success","getStrings","key","strings","ModalFactory","create","type","types","SAVE_CANCEL","modal","setBody","setSaveButtonText","show","setTitle","getRoot","on","ModalEvents","save","reload","confirmPayment","countdownelement","delta","minutes","seconds","timer","setInterval","textContent","setTimeout","buttons","shoppingcart","toFixed","initialtotal","initialtotal_net","discount","deductible","credit","remainingcredit","price_net","price_gross","items","i"],"mappings":"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"}