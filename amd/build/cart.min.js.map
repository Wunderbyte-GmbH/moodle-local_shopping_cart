{"version":3,"file":"cart.min.js","sources":["../src/cart.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\n\nimport {confirmPayment} from 'local_shopping_cart/cashier';\nimport {discountModal} from 'local_shopping_cart/cashier';\nimport {showNotification} from 'local_shopping_cart/notifications';\n\nimport {\n    get_strings as getStrings,\n    get_string as getString\n        }\n        from 'core/str';\n\nexport var interval = null;\nexport var visbilityevent = false;\n\n// This file inits the cart on every page, on checkout and cashier.\n// The cart is always loaed entirely and replaced via css.\n// The cashiers cart are identified in the DOM via userid -1 (CASHIERUSER).\n// The translation to real userids is done in the PHP only.\n\nconst CASHIERUSER = -1;\n\nconst SELECTORS = {\n    SHOPPING_CART_ITEM: '[data-item=\"shopping_cart_item\"]',\n    NAVBARCONTAINER: '#nav-shopping_cart-popover-container .shopping-cart-items-container',\n    TRASHCLASS: 'fa-trash-o',\n    DISCOUNTCLASS: 'fa-eur',\n    BADGECOUNT: '#nav-shopping_cart-popover-container div.count-container',\n    COUNTDOWN: '#nav-shopping_cart-popover-container span.expirationdate',\n    CASHIERSCART: 'div.shopping-cart-cashier-items-container',\n    CHECKOUTCART: 'div.shopping-cart-checkout-items-container',\n    PRICELABELCHECKBOX: '.sc_price_label input.usecredit-checkbox',\n    PRICELABELAREA: '.sc_price_label',\n};\n/**\n *\n * @param {*} expirationdate\n */\n\n export const init = (expirationdate) => {\n\n    initTimer(expirationdate);\n\n    // We might have more than one container.\n    let containers = [];\n    containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n        + \",\" + SELECTORS.CASHIERSCART\n        + \",\" + SELECTORS.CHECKOUTCART);\n\n    containers.forEach(container => {\n\n        container.addEventListener('click', event => {\n\n            // Decide the target of the click.\n            const element = event.target;\n\n            if (element.classList.contains(SELECTORS.TRASHCLASS)) {\n\n                const userid = element.dataset.userid ? element.dataset.userid : 0;\n                const component = element.dataset.component;\n                const itemid = element.dataset.itemid;\n\n                deleteItem(itemid, component, userid);\n            } else if (element.classList.contains(SELECTORS.DISCOUNTCLASS)) {\n\n                discountModal(event);\n            }\n        });\n    });\n\n    if (visbilityevent == false) {\n        document.addEventListener(\"visibilitychange\", function() {\n            visbilityevent = true;\n            if (document.visibilityState === 'visible') {\n                reinit();\n            }\n        });\n    }\n\n    // Initially, we need to add the zeroPriceListener once.\n\n    const paymentbutton = document.querySelector('div.shopping_cart_payment_region button');\n    if (paymentbutton) {\n        const data = {\n            price: paymentbutton.dataset.price,\n            currency: paymentbutton.dataset.currency,\n        };\n        addZeroPriceListener(data);\n    }\n};\n\nexport const buttoninit = (itemid, component) => {\n\n    // Return all buttons with the add to cart functionality.\n    const buttons =\n    document.querySelectorAll(\n        'button'\n        + '[data-itemid=\"' + itemid + '\"]'\n        + '[data-component=\"' + component + '\"]'\n        + '[data-objecttable=\"local_shopping_cart\"');\n\n    buttons.forEach(addtocartbutton => {\n\n        // We need to check all the buttons.\n        toggleActiveButtonState(addtocartbutton);\n\n        // We only ever initialize the button once.\n        if (!addtocartbutton || addtocartbutton.dataset.initialized === 'true') {\n            return;\n        }\n        addtocartbutton.dataset.initialized = 'true';\n\n        // Add click eventlistern to oneself.\n        addtocartbutton.addEventListener('click', event => {\n\n        // If we find the disabled class, the click event is aborted.\n        if (addtocartbutton.classList.contains('disabled')) {\n            return;\n        }\n            event.preventDefault();\n            event.stopPropagation();\n            addItem(itemid, component);\n        });\n    });\n\n    return;\n};\n\n/**\n * Function to reload the cart. We can pass on the certain component if we need to make sure that not only the cart is reloaded.\n * This is the case when adding or deleting a certain item and a special button has to be reset.\n * @param {*} userid\n */\nexport const reinit = (userid = 0) => {\n\n    userid = transformUserIdForCashier(userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_shopping_cart_items\",\n        args: {\n            userid\n        },\n        done: function(data) {\n\n            // If we are on the cashier page, we add the possiblity to add a discount to the cart items.\n            const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n            if (oncashier > 0) {\n                data.iscashier = true;\n            } else {\n                data.iscashier = false;\n            }\n\n            let containers = [];\n\n            if (userid != 0 && data.iscashier) {\n                containers = document.querySelectorAll(SELECTORS.CASHIERSCART);\n            } else {\n                containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n                    + \",\" + SELECTORS.CHECKOUTCART);\n            }\n\n            let promises = [];\n\n            // We render for promice for all the containers.\n            promises.push(Templates.renderForPromise('local_shopping_cart/shopping_cart_items', data).then(({html, js}) => {\n                containers.forEach(container => {\n                // We know we will always find the Navbar, so we can do this right away.\n                    Templates.replaceNodeContents(container, html, js);\n                });\n                return true;\n            }).catch((e) => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            Promise.all(promises).then(() => {\n\n                // If we are on the cashier page, we add the possiblity to add a discount to the cart items.\n                if (!(userid != 0 && data.iscashier)) {\n                    clearInterval(interval);\n                    initTimer(data.expirationdate);\n\n                    updateBadge(data.count);\n                }\n\n                toggleActiveButtonState();\n\n                updateTotalPrice(userid);\n\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n        },\n        fail: ex => {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};\n\n/**\n * This function is only called when the timer invalidates the cart.\n * This always works for the USER-user, so no userid is transmitted.\n * The USER-user is chosen with the userid 0, we just reinit everything afert sending.\n */\nexport const deleteAllItems = () => {\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_all_items_from_cart\",\n        args: {\n        },\n        done: function() {\n            reinit(0);\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(ex);\n        },\n    }]);\n};\n\nexport const deleteItem = (itemid, component, userid) => {\n\n    userid = transformUserIdForCashier(userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_item\",\n        args: {\n            'itemid': itemid,\n            'component': component,\n            'userid': userid\n        },\n        done: function() {\n\n            reinit(userid);\n        },\n        fail: function() {\n\n            reinit(userid);\n        },\n    }]);\n};\n\nexport const addItem = (itemid, component) => {\n\n    let userid = transformUserIdForCashier();\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_add_item\",\n        args: {\n            'component': component,\n            'itemid': itemid,\n            'userid': userid\n        },\n        done: function(data) {\n\n            data.component = component;\n            data.itemid = itemid;\n            data.userid = userid; // For the mustache template, we need to obey structure.\n\n            if (data.success != 1) {\n\n                getString('cartisfull', 'local_shopping_cart').then(message => {\n                    showNotification(message, 'danger');\n                    return;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n\n                return;\n            } else if (data.success == 1) {\n                getString('addedtocart', 'local_shopping_cart', data.itemname).then(message => {\n                    showNotification(message, 'success');\n                    return;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n\n                reinit(userid);\n            }\n\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n *\n * @param {*} userid\n * @param {*} usecredit\n */\nexport const updateTotalPrice = (userid = 0, usecredit = true) => {\n\n    // On cashier, update price must always be for cashier user.\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    if (oncashier > 0) {\n        userid = CASHIERUSER;\n    }\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    // We must make sure the checkbox is only once visible on the site.\n    // const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n    usecredit = usecredit ? 1 : 0;\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_price\",\n        args: {\n            userid,\n            usecredit\n        },\n        done: function(data) {\n\n             // We take the usecredit value we receive from the server.\n             if (data.usecredit == 1) {\n                data.usecreditvalue = 'checked';\n            } else {\n                data.usecreditvalue = '';\n            }\n\n            data.checkboxid = Math.random().toString(36).slice(2, 5);\n\n            data.userid = userid;\n\n            const labelareas = document.querySelectorAll(SELECTORS.PRICELABELAREA);\n\n            Templates.renderForPromise('local_shopping_cart/price_label', data).then(({html, js}) => {\n\n                labelareas.forEach(labelarea => {\n                    Templates.replaceNodeContents(labelarea, html, js);\n\n                    addZeroPriceListener(data);\n                });\n\n                return true;\n            }).catch((e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n * Looks for the payment buttun, updates cost and adds the listener.\n * @param {*} data\n */\nfunction addZeroPriceListener(data) {\n\n    let paymentbutton = document.querySelector(\".shopping_cart_payment_region button\");\n\n    if (paymentbutton) {\n\n        const price = data.price;\n        const currency = data.currency;\n\n        paymentbutton.dataset.cost = price + \" \" + currency;\n\n        if (price == 0) {\n\n            paymentbutton.addEventListener('click', dealWithZeroPrice);\n        } else {\n\n            paymentbutton.removeEventListener('click', dealWithZeroPrice);\n        }\n    }\n}\n\n/**\n *\n * @param {*} event\n */\nfunction dealWithZeroPrice(event) {\n\n        event.stopPropagation();\n        event.preventDefault();\n\n        confirmZeroPriceCheckoutModal(event.target);\n}\n\n/**\n * Start the timer.\n *\n * @param {integer} duration\n * @param {integer} display\n */\nfunction startTimer(duration, display) {\n\n    var timer = duration,\n                minutes,\n                seconds;\n    interval = setInterval(function() {\n\n        minutes = parseInt(timer / 60, 10);\n        seconds = parseInt(timer % 60, 10);\n\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n        display.textContent = minutes + \":\" + seconds;\n\n        if (--timer < 0) {\n            deleteAllItems();\n\n            clearInterval(interval);\n        }\n    }, 1000);\n}\n\n\n/**\n * Initialize Timer.\n *\n * @param {integer} expirationdate\n *\n */\nfunction initTimer(expirationdate = null) {\n\n    const countdownelement = document.querySelector(SELECTORS.COUNTDOWN);\n\n    if (!countdownelement) {\n        return;\n    }\n\n    if (interval) {\n        clearInterval(interval);\n    }\n    let delta = 0;\n    let now = Date.now('UTC');\n    now = (new Date()).getTime() / 1000;\n    if (expirationdate) {\n        delta = (expirationdate - now);\n    }\n    if (delta <= 0) {\n        delta = 0;\n        countdownelement.classList.add(\"hidden\");\n    } else if (delta > 0) {\n        countdownelement.classList.remove(\"hidden\");\n        startTimer(delta, countdownelement);\n    }\n}\n\n/**\n *\n * @param {*} element\n */\n function confirmZeroPriceCheckoutModal(element) {\n\n    getStrings([\n        {key: 'confirmzeropricecheckouttitle', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckoutbody', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckout', component: 'local_shopping_cart'}\n    ]\n    ).then(strings => {\n\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n                modal.setBody(strings[1]);\n                modal.setSaveButtonText(strings[2]);\n                modal.getRoot().on(ModalEvents.save, function() {\n\n                    const userid = element.dataset.userid;\n\n                    if (userid) {\n                        // The second parameter designs the payment method.\n                        // In the cart, the constant PAYMENT_METHOD_CREDITS translates to 2.\n                        confirmPayment(userid, 2);\n                    }\n                });\n\n                modal.show();\n                return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n * Function to update the page in the nav bar.\n * @param {*} count\n */\nfunction updateBadge(count) {\n\n    const badge = document.querySelector(SELECTORS.BADGECOUNT);\n\n    if (count > 0) {\n        badge.innerHTML = count;\n        badge.classList.remove('hidden');\n    } else {\n        badge.innerHTML = count;\n        badge.classList.add('hidden');\n    }\n}\n\n/**\n * Function to toggle the active state.\n * @param {*} button\n */\nfunction toggleActiveButtonState(button = null) {\n\n    let selector = '';\n    let component = null;\n    let itemid = null;\n\n    // If we have a button, we only look for this particular itemid.\n    if (button) {\n\n        // We'll find the right variables in the DOM.\n        itemid = button.dataset.itemid;\n        component = button.dataset.component;\n\n        selector =\n            'button'\n            + '[data-itemid=\"' + itemid + '\"]'\n            + '[data-component=\"' + component + '\"]'\n            + '[data-objecttable=\"local_shopping_cart\"';\n    } else {\n        // As we might have more than one of these buttons, we always need to look for all of them in the document.\n        // We will update for all the buttons we find.\n        selector =\n        'button'\n        + '[data-objecttable=\"local_shopping_cart\"';\n    }\n\n    const buttons = document.querySelectorAll(selector);\n\n    // Make sure item is not yet in shopping cart. If so, add disabled class.\n    let shoppingcart = document.querySelector(SELECTORS.CASHIERSCART);\n\n    if (!shoppingcart) {\n        shoppingcart = document.querySelector(SELECTORS.NAVBARCONTAINER);\n    }\n\n    buttons.forEach(addtocartbutton => {\n\n        component = addtocartbutton.dataset.component;\n        itemid = addtocartbutton.dataset.itemid;\n\n        const cartitem = shoppingcart.querySelector('[id^=\"item-' + component + '-' + itemid + '\"]');\n\n        if (cartitem) {\n\n            addtocartbutton.classList.add('disabled');\n        } else {\n\n            addtocartbutton.classList.remove('disabled');\n        }\n    });\n}\n\n/**\n * Function to init Price Label and add Listener.\n * @param {*} userid\n */\nexport function initPriceLabel(userid) {\n\n    if (userid < 1) {\n        userid = 0;\n    }\n\n    const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n\n    if (checkbox) {\n        checkbox.addEventListener('change', event => {\n\n            if (event.currentTarget.checked) {\n                updateTotalPrice(userid, true);\n            } else {\n                updateTotalPrice(userid, false);\n            }\n        });\n    }\n}\n\n/**\n * We need to know if we are on the cashier page to transform userid if necessary.\n * @param {integer} userid\n * @returns {integer}\n */\nfunction transformUserIdForCashier(userid = null) {\n\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    if ((userid == CASHIERUSER || !(userid === 0 || userid === \"0\")) && oncashier > 0) {\n        userid = CASHIERUSER;\n    } else if (userid === null) {\n        userid = 0;\n    }\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    return userid;\n}"],"names":["userid","checkbox","document","querySelector","SELECTORS","addEventListener","event","currentTarget","checked","updateTotalPrice","interval","visbilityevent","expirationdate","initTimer","containers","querySelectorAll","forEach","container","element","target","classList","contains","dataset","component","itemid","deleteItem","visibilityState","reinit","paymentbutton","addZeroPriceListener","price","currency","addtocartbutton","toggleActiveButtonState","initialized","preventDefault","stopPropagation","addItem","transformUserIdForCashier","call","methodname","args","done","data","oncashier","window","location","href","indexOf","iscashier","promises","push","Templates","renderForPromise","then","_ref","html","js","replaceNodeContents","catch","e","console","log","Promise","all","clearInterval","updateBadge","count","fail","ex","deleteAllItems","Number","isInteger","parseInt","success","itemname","message","usecredit","usecreditvalue","checkboxid","Math","random","toString","slice","labelareas","_ref2","labelarea","cost","dealWithZeroPrice","removeEventListener","key","strings","create","type","ModalFactory","types","SAVE_CANCEL","modal","setTitle","setBody","setSaveButtonText","getRoot","on","ModalEvents","save","show","startTimer","duration","display","minutes","seconds","timer","setInterval","textContent","countdownelement","delta","now","Date","getTime","add","remove","badge","innerHTML","button","selector","buttons","shoppingcart"],"mappings":"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"}