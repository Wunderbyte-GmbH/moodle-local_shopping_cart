{"version":3,"file":"cart.min.js","sources":["../src/cart.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\n\nimport {confirmPayment} from 'local_shopping_cart/cashier';\nimport {addDiscountEvent} from 'local_shopping_cart/cashier';\nimport {showNotification} from 'local_shopping_cart/notifications';\n\nimport {\n    get_strings as getStrings\n        }\n        from 'core/str';\n\nexport var interval = null;\nexport var visbilityevent = false;\n\n\n\n// We need click listener on cart\n// Disabled should not be done by a check on cart, but either it's loaded via php, OR it is added right away with the click.\n// We should load the whole cart, including the price, with one function which always stays the same. (less css)\n\n\n\n\nconst SELECTORS = {\n    SHOPPING_CART_ITEM: '[data-item=\"shopping_cart_item\"]',\n    NAVBARCONTAINER: '#nav-shopping_cart-popover-container .shopping-cart-items-container',\n    TRASHCLASS: 'fa-trash-o',\n    BADGECOUNT: '#nav-shopping_cart-popover-container div.count-container',\n    COUNTDOWN: '#nav-shopping_cart-popover-container span.expirationdate',\n    CASHIERSCART: '#shopping_cart-cashiers-cart',\n    CHECKOUTCART: 'div.shopping-cart-checkout-items-container',\n    PRICELABELCHECKBOX: '.sc_price_label input.usecredit-checkbox',\n    PRICELABELAREA: '.sc_price_label',\n};\n\nexport const buttoninit = (itemid, component) => {\n\n    // Return all buttons with the add to cart functionality.\n    const buttons =\n    document.querySelectorAll(\n        'button'\n        + '[data-itemid=\"' + itemid + '\"]'\n        + '[data-component=\"' + component + '\"]'\n        + '[data-objecttable=\"local_shopping_cart\"');\n\n    buttons.forEach(addtocartbutton => {\n\n        // We need to check all the buttons.\n        toggleActiveButtonState(addtocartbutton);\n\n        // We only ever initialize the button once.\n        if (!addtocartbutton || addtocartbutton.dataset.initialized === 'true') {\n            return;\n        }\n        addtocartbutton.dataset.initialized = 'true';\n\n        // Add click eventlistern to oneself.\n        addtocartbutton.addEventListener('click', event => {\n\n        // If we find the disabled class, the click event is aborted.\n        if (addtocartbutton.classList.contains('disabled')) {\n            return;\n        }\n            event.preventDefault();\n            event.stopPropagation();\n            addItem(itemid, component);\n        });\n    });\n\n    return;\n\n    // If there is no itemid, we browse the whole document and init all buttons individually.\n    if (!itemid) {\n        const buttons = document.querySelectorAll(SELECTORS.SHOPPING_CART_ITEM);\n        buttons.forEach(button => {\n            const number = button.itemid;\n            buttoninit(number, component);\n        });\n        return;\n    }\n\n    // We don't know how many instances of this peticular button are on the site. So we need to be agnostic.\n\n    // First we get the button and delete the helper-span to secure js loading.\n    const addtocartbutton = document.querySelector('#btn-' + component + '-' + itemid);\n\n    // If we don't find the button, we abort.\n    if (!addtocartbutton || addtocartbutton.dataset.initialized === 'true') {\n        return;\n    }\n    addtocartbutton.dataset.initialized = 'true';\n\n    // Make sure item is not yet in shopping cart. If so, add disabled class.\n    let shoppingcart = document.querySelector('#shopping_cart-cashiers-cart');\n\n    if (!shoppingcart) {\n        shoppingcart = document.querySelector('#nav-shopping_cart-popover-container');\n    }\n\n    if (shoppingcart) {\n        const cartitem = shoppingcart.querySelector('[id^=\"item-' + component + '-' + itemid + ']');\n        if (cartitem) {\n            addtocartbutton.classList.add('disabled');\n        }\n    }\n\n\n};\n\n/**\n *\n * @param {*} expirationdate\n */\n\n export const init = (expirationdate) => {\n\n    // We might have more than one container.\n    let containers = [];\n    containers.push(document.querySelector(SELECTORS.NAVBARCONTAINER));\n    containers.push(document.querySelector(SELECTORS.CHECKOUTCART));\n\n    containers.filter(x => x !== null).forEach(container => {\n\n        container.addEventListener('click', event => {\n\n            // Decide the target of the click.\n            const element = event.target;\n\n            if (element.classList.contains(SELECTORS.TRASHCLASS))  {\n\n                const userid = element.dataset.userid ? element.dataset.userid : 0;\n                const component = element.dataset.component;\n                const itemid = element.dataset.itemid;\n\n                deleteItem(itemid, component, userid);\n            }\n        });\n    });\n\n    if (visbilityevent == false) {\n        document.addEventListener(\"visibilitychange\", function() {\n            visbilityevent = true;\n            if (document.visibilityState === 'visible') {\n                reinit();\n            }\n        });\n    }\n\n    return;\n\n    // countdownelement = document.querySelector('.expirationdate');\n    initTimer(expirationdate);\n    if (visbilityevent == false) {\n        let items = document.querySelectorAll(SELECTORS.SHOPPING_CART_ITEM + ' .fa-trash-o');\n        items.forEach(item => {\n            addDeleteevent(item);\n        });\n\n        items = document.querySelectorAll(SELECTORS.SHOPPING_CART_ITEM + ' .fa-eur');\n        items.forEach(item => {\n            addDiscountEvent(item);\n        });\n\n    }\n    updateTotalPrice();\n};\n\n/**\n * Function to reload the cart. We can pass on the certain component if we need to make sure that not only the cart is reloaded.\n * This is the case when adding or deleting a certain item and a special button has to be reset.\n * @param {*} userid\n */\nexport const reinit = (userid = 0) => {\n\n    // eslint-disable-next-line no-console\n    console.log('reinit', userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_shopping_cart_items\",\n        args: {\n            userid\n        },\n        done: function(data) {\n            let promises = [];\n            promises.push(Templates.renderForPromise('local_shopping_cart/shopping_cart_items', data).then(({html, js}) => {\n\n                // We know we will always find the Navbar, so we can do this right away.\n                Templates.replaceNodeContents(SELECTORS.NAVBARCONTAINER, html, js);\n\n                return true;\n            }).catch((e) => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            promises.push(Templates.renderForPromise('local_shopping_cart/shopping_cart_items', data).then(({html, js}) => {\n\n                // We try to replace for Checkout page.\n                Templates.replaceNodeContents(SELECTORS.CHECKOUTCART, html, js);\n\n                return true;\n            }).catch((e) => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n            Promise.all(promises).then(() => {\n\n                clearInterval(interval);\n                initTimer(data.expirationdate);\n\n                updateBadge(data.count);\n\n                toggleActiveButtonState();\n\n                updateTotalPrice(userid);\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n        },\n        fail: ex => {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};\n\nexport const deleteAllItems = () => {\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_all_items_from_cart\",\n        args: {\n        },\n        done: function() {\n            let item = document.querySelectorAll(SELECTORS.SHOPPING_CART_ITEM);\n            item.forEach(item => {\n                if (item) {\n                    item.remove();\n                }\n            });\n\n            updateTotalPrice();\n\n            let itemcount1 = document.getElementById(\"countbadge\");\n            let itemcount2 = document.getElementById(\"itemcount\");\n\n            itemcount1.innerHTML = 0;\n            itemcount2.innerHTML = 0;\n            itemcount2.classList.add(\"hidden\");\n\n            // Make sure addtocartbutton active againe once the item is removed from the shopping cart.\n            const addtocartbutton = document.querySelectorAll('[id^=btn-].disabled');\n            addtocartbutton.forEach(btn => {\n                if (btn) {\n                    btn.classList.remove('disabled');\n                }\n            });\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(ex);\n        },\n    }]);\n};\n\nexport const deleteItem = (itemid, component, userid) => {\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_item\",\n        args: {\n            'itemid': itemid,\n            'component': component,\n            'userid': userid\n        },\n        done: function() {\n\n            reinit(itemid, component);\n        },\n        fail: function() {\n\n            reinit();\n        },\n    }]);\n};\n\nexport const addItem = (itemid, component) => {\n\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    let userid = 0;\n    if (oncashier > 0) {\n        userid = -1;\n    }\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_add_item\",\n        args: {\n            'component': component,\n            'itemid': itemid,\n            'userid': userid\n        },\n        done: function(data) {\n            data.component = component;\n            data.itemid = itemid;\n            data.userid = data.buyforuser; // For the mustache template, we need to obey structure.\n\n            if (data.success != 1) {\n\n                showNotification(\"Cart is full\", 'danger');\n\n                return;\n            } else if (data.success == 1) {\n\n                showNotification(data.itemname + \" added to cart\", 'success');\n\n                // If we are on the cashier page, we add the possiblity to add a discount to the cart items.\n                const oncashier = window.location.href.indexOf(\"cashier.php\");\n                if (oncashier) {\n                    data.iscashier = true;\n                }\n\n                reinit(itemid, component);\n            }\n\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n *\n * @param {*} userid\n * @param {*} usecredit\n */\nexport const updateTotalPrice = (userid = 0, usecredit = true) => {\n\n    // eslint-disable-next-line no-console\n    console.log('updatetotalprice');\n\n    // We must make sure the checkbox is only once visible on the site.\n    const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n\n    // eslint-disable-next-line no-console\n    console.log('checked', checkbox.checked, usecredit);\n\n    usecredit = usecredit ? 1 : 0;\n\n    // eslint-disable-next-line no-console\n    console.log('usecredit before ajax', usecredit);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_price\",\n        args: {\n            userid,\n            usecredit\n        },\n        done: function(data) {\n\n             // We take the usecredit value we receive from the server.\n             if (data.usecredit == 1) {\n                data.usecreditvalue = 'checked';\n            } else {\n                data.usecreditvalue = '';\n            }\n\n            // eslint-disable-next-line no-console\n            console.log(data, data.usecreditvalue);\n\n            data.checkboxid = Math.random().toString(36).slice(2, 5);\n\n            const labelareas = document.querySelectorAll(SELECTORS.PRICELABELAREA);\n\n            // eslint-disable-next-line no-console\n            console.log(labelareas);\n\n            Templates.renderForPromise('local_shopping_cart/price_label', data).then(({html, js}) => {\n\n                Templates.replaceNodeContents(SELECTORS.PRICELABELAREA, html, js);\n\n                return true;\n            }).catch((e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            let paymentbutton = document.querySelector(\".shopping_cart_payment_region button\");\n\n            if (paymentbutton) {\n\n                const price = data.price;\n                const currency = data.currency;\n\n                // eslint-disable-next-line no-console\n                console.log(\"paymentbutton\", price, currency);\n\n                paymentbutton.dataset.cost = price + \" \" + currency;\n\n                if (price == 0) {\n                    // eslint-disable-next-line no-console\n                    console.log('price is 0');\n                    paymentbutton.addEventListener('click', dealWithZeroPrice);\n                } else {\n                    // eslint-disable-next-line no-console\n                    console.log('price is not 0');\n                    paymentbutton.removeEventListener('click', dealWithZeroPrice);\n                }\n            }\n\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n *\n * @param {*} event\n */\nfunction dealWithZeroPrice(event) {\n\n    // eslint-disable-next-line no-console\n    console.log('onlymyclickcounts');\n\n        event.stopPropagation();\n        event.preventDefault();\n        // eslint-disable-next-line no-console\n        console.log('onlymyclickcounts', event.target);\n\n        confirmZeroPriceCheckoutModal(event.target);\n}\n\n/**\n * Delete Event.\n * @param {HTMLElement} item\n * @param {int} userid\n */\nfunction addDeleteevent(item, userid = 0) {\n    if (userid !== 0) {\n        item.dataset.userid = '' + userid;\n    }\n    item.addEventListener('click', deleteEvent);\n}\n\n/**\n * Function called in listener.\n */\nfunction deleteEvent() {\n        const item = this;\n        // eslint-disable-next-line no-console\n        console.log('item', item);\n        // Item comes as #item-booking-213123.\n        const itemid = item.dataset.itemid;\n        const component = item.dataset.component;\n        let userid = item.dataset.userid;\n        if (!userid) {\n            userid = 0;\n        }\n        deleteItem(itemid, component, userid);\n    }\n\n/**\n * Start the timer.\n *\n * @param {integer} duration\n * @param {integer} display\n */\nfunction startTimer(duration, display) {\n\n    var timer = duration,\n                minutes,\n                seconds;\n    interval = setInterval(function() {\n\n        minutes = parseInt(timer / 60, 10);\n        seconds = parseInt(timer % 60, 10);\n\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n        display.textContent = minutes + \":\" + seconds;\n\n        if (--timer < 0) {\n            deleteAllItems();\n\n            clearInterval(interval);\n        }\n    }, 1000);\n}\n\n\n/**\n * Initialize Timer.\n *\n * @param {integer} expirationdate\n *\n */\nfunction initTimer(expirationdate = null) {\n\n    const countdownelement = document.querySelector(SELECTORS.COUNTDOWN);\n    if (interval) {\n        clearInterval(interval);\n    }\n    let delta = 0;\n    let now = Date.now('UTC');\n    now = (new Date()).getTime() / 1000;\n    if (expirationdate) {\n        delta = (expirationdate - now);\n    }\n    if (delta <= 0) {\n        delta = 0;\n        countdownelement.classList.add(\"hidden\");\n    } else if (delta > 0) {\n        countdownelement.classList.remove(\"hidden\");\n        startTimer(delta, countdownelement);\n    }\n}\n\n/**\n *\n * @param {*} element\n */\n function confirmZeroPriceCheckoutModal(element) {\n\n    getStrings([\n        {key: 'confirmzeropricecheckouttitle', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckoutbody', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckout', component: 'local_shopping_cart'}\n    ]\n    ).then(strings => {\n\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n                modal.setBody(strings[1]);\n                modal.setSaveButtonText(strings[2]);\n                modal.getRoot().on(ModalEvents.save, function() {\n\n                    const userid = element.dataset.userid;\n\n                    // eslint-disable-next-line no-console\n                    console.log(userid);\n\n                    if (userid) {\n                        confirmPayment(userid);\n                    }\n                });\n\n                modal.show();\n                return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n * Function to update the page in the nav bar.\n * @param {*} count\n */\nfunction updateBadge(count) {\n\n    const badge = document.querySelector(SELECTORS.BADGECOUNT);\n\n    if (count > 0) {\n        badge.innerHTML = count;\n        badge.classList.remove('hidden');\n    } else {\n        badge.innerHTML = count;\n        badge.classList.add('hidden');\n    }\n}\n\n/**\n * Function to toggle the active state.\n * @param {*} button\n */\nfunction toggleActiveButtonState(button = null) {\n\n    // eslint-disable-next-line no-console\n    console.log('toggleActiveButtonState');\n\n    let selector = '';\n    let component = null;\n    let itemid = null;\n\n    // If we have a button, we only look for this particular itemid.\n    if (button) {\n\n        // We'll find the right variables in the DOM.\n        itemid = button.dataset.itemid;\n        component = button.dataset.component;\n\n        selector =\n            'button'\n            + '[data-itemid=\"' + itemid + '\"]'\n            + '[data-component=\"' + component + '\"]'\n            + '[data-objecttable=\"local_shopping_cart\"';\n    } else {\n        // As we might have more than one of these buttons, we always need to look for all of them in the document.\n        // We will update for all the buttons we find.\n        selector =\n        'button'\n        + '[data-objecttable=\"local_shopping_cart\"';\n    }\n\n    const buttons = document.querySelectorAll(selector);\n\n    // Make sure item is not yet in shopping cart. If so, add disabled class.\n    let shoppingcart = document.querySelector(SELECTORS.CASHIERSCART);\n\n    if (!shoppingcart) {\n        shoppingcart = document.querySelector(SELECTORS.NAVBARCONTAINER);\n    }\n\n    buttons.forEach(addtocartbutton => {\n\n        component = addtocartbutton.dataset.component;\n        itemid = addtocartbutton.dataset.itemid;\n\n        const cartitem = shoppingcart.querySelector('[id^=\"item-' + component + '-' + itemid + '\"]');\n\n        if (cartitem) {\n\n            addtocartbutton.classList.add('disabled');\n        } else {\n\n            addtocartbutton.classList.remove('disabled');\n        }\n    });\n}\n\n/**\n * Function to init Price Label and add Listener.\n * @param {*} userid\n */\nexport function initPriceLabel(userid) {\n\n    if (userid < 1) {\n        userid = 0;\n    }\n\n    const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n\n    if (checkbox) {\n        checkbox.addEventListener('change', event => {\n\n            // eslint-disable-next-line no-console\n            console.log(event);\n\n            if (event.currentTarget.checked) {\n                updateTotalPrice(userid, true);\n            } else {\n                updateTotalPrice(userid, false);\n            }\n        });\n    }\n}"],"names":["userid","checkbox","document","querySelector","SELECTORS","addEventListener","event","console","log","currentTarget","checked","updateTotalPrice","interval","visbilityevent","buttoninit","itemid","component","querySelectorAll","forEach","addtocartbutton","toggleActiveButtonState","dataset","initialized","classList","contains","preventDefault","stopPropagation","addItem","expirationdate","containers","push","filter","x","container","element","target","deleteItem","visibilityState","reinit","call","methodname","args","done","data","promises","Templates","renderForPromise","then","_ref","html","js","replaceNodeContents","catch","e","_ref2","Promise","all","clearInterval","initTimer","updateBadge","count","fail","ex","deleteAllItems","item","remove","itemcount1","getElementById","itemcount2","innerHTML","add","btn","window","location","href","indexOf","buyforuser","success","itemname","iscashier","usecredit","usecreditvalue","checkboxid","Math","random","toString","slice","labelareas","_ref3","paymentbutton","price","currency","cost","dealWithZeroPrice","removeEventListener","key","strings","create","type","ModalFactory","types","SAVE_CANCEL","modal","setTitle","setBody","setSaveButtonText","getRoot","on","ModalEvents","save","show","startTimer","duration","display","minutes","seconds","timer","setInterval","parseInt","textContent","countdownelement","delta","now","Date","getTime","badge","button","selector","buttons","shoppingcart"],"mappings":"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"}