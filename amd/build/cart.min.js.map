{"version":3,"file":"cart.min.js","sources":["../src/cart.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\n\nimport {confirmPayment} from 'local_shopping_cart/cashier';\nimport {discountModal} from 'local_shopping_cart/cashier';\nimport {showNotification} from 'local_shopping_cart/notifications';\n\nimport DynamicForm from 'core_form/dynamicform';\n\nimport {\n    get_strings as getStrings,\n    get_string as getString\n        }\n        from 'core/str';\n\nexport var interval = null;\nexport var visbilityevent = false;\n\n// This file inits the cart on every page, on checkout and cashier.\n// The cart is always loaed entirely and replaced via css.\n// The cashiers cart are identified in the DOM via userid -1 (CASHIERUSER).\n// The translation to real userids is done in the PHP only.\n\nconst CASHIERUSER = -1;\n\nconst SELECTORS = {\n    SHOPPING_CART_ITEM: '[data-item=\"shopping_cart_item\"]',\n    NAVBARCONTAINER: '#nav-shopping_cart-popover-container .shopping-cart-items-container',\n    TRASHCLASS: 'fa-trash-o',\n    DISCOUNTCLASS: 'shoppingcart-discount-icon',\n    BADGECOUNT: '#nav-shopping_cart-popover-container div.count-container',\n    COUNTDOWN: '#nav-shopping_cart-popover-container span.expirationtime',\n    CASHIERSCART: 'div.shopping-cart-cashier-items-container',\n    CHECKOUTCART: 'div.shopping-cart-checkout-items-container',\n    PRICELABELCHECKBOX: '.sc_price_label input.usecredit-checkbox',\n    INSTALLMENTSCHECKBOX: '.sc_price_label input.useinstallments-checkbox',\n    PRICELABELAREA: '.sc_price_label',\n    CHECKOUTBUTTON: '#nav-shopping_cart-popover-container #shopping-cart-checkout-button',\n    PAYMENTREGIONBUTTON: 'div.shopping_cart_payment_region button',\n    ACCEPTTERMS: '#accepttermsnandconditions',\n    CHECKUIDFORM: 'div.form_uidchecker',\n};\n/**\n *\n * @param {*} expirationtime\n */\n\n export const init = (expirationtime, nowdate) => {\n\n    // eslint-disable-next-line no-console\n    console.log(expirationtime, nowdate);\n\n    initTimer(expirationtime, nowdate);\n\n    // We might have more than one container.\n    let containers = [];\n    containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n        + \",\" + SELECTORS.CASHIERSCART\n        + \",\" + SELECTORS.CHECKOUTCART);\n\n    containers.forEach(container => {\n\n        container.addEventListener('click', event => {\n\n            // Decide the target of the click.\n            const element = event.target;\n\n            if (element.classList.contains(SELECTORS.TRASHCLASS)) {\n\n                const userid = element.dataset.userid ? element.dataset.userid : 0;\n                const component = element.dataset.component;\n                const area = element.dataset.area;\n                const itemid = element.dataset.itemid;\n\n                deleteItem(itemid, component, area, userid);\n            } else if (element.classList.contains(SELECTORS.DISCOUNTCLASS)) {\n\n                discountModal(event);\n            }\n        });\n    });\n\n    // Re-init cart on page reload or navigation to another page - required for 2-digit price precision visibility.\n    document.addEventListener(\"readystatechange\", () => {\n        if (document.readyState !== 'loading') {\n            reinit();\n        }\n    });\n\n    if (visbilityevent == false) {\n        document.addEventListener(\"visibilitychange\", function() {\n            visbilityevent = true;\n            if (document.visibilityState === 'visible') {\n                reinit();\n            }\n        });\n    }\n\n    // Initially, we need to add the zeroPriceListener once.\n    const paymentbutton = document.querySelector(SELECTORS.PAYMENTREGIONBUTTON);\n    if (paymentbutton) {\n        const data = {\n            price: paymentbutton.dataset.price,\n            currency: paymentbutton.dataset.currency,\n        };\n        addZeroPriceListener(data);\n    }\n\n    const accepttermsbutton = document.querySelector(SELECTORS.ACCEPTTERMS);\n    if (accepttermsbutton && paymentbutton) {\n        addAcceptTermsListener(accepttermsbutton, paymentbutton);\n    }\n\n    initUidChecker();\n};\n\nconst initUidChecker = () => {\n\n    const uidchecker = document.querySelector(SELECTORS.CHECKUIDFORM);\n\n    if (uidchecker) {\n        const uidcheckerform = new DynamicForm(\n            uidchecker,\n            'local_shopping_cart\\\\form\\\\dynamicuidchecker'\n        );\n\n        // After submitting we want to reload the window to update the rule list.\n        uidcheckerform.addEventListener(uidcheckerform.events.FORM_SUBMITTED, (e) => {\n\n            reinit();\n            uidcheckerform.load(e.data);\n            // eslint-disable-next-line no-console\n            console.log('form submitted');\n        });\n    }\n\n};\n\nexport const buttoninit = (itemid, component, area) => {\n\n    // If we don't have an itemid, we need to look for all the buttons.\n    if (!itemid || !component || !area) {\n        const selector = '[data-objecttable=\"local_shopping_cart\"';\n        const allbuttons = document.querySelectorAll(\n            selector);\n\n        allbuttons.forEach(button => {\n            const itemid = button.dataset.itemid;\n            const area = button.dataset.area;\n            const component = button.dataset.component;\n            buttoninit(itemid, component, area);\n        });\n        return;\n    }\n\n    // Return all buttons with the add to cart functionality.\n    const buttons =\n    document.querySelectorAll(\n        'div'\n        + '[data-itemid=\"' + itemid + '\"]'\n        + '[data-component=\"' + component + '\"]'\n        + '[data-area=\"' + area + '\"]'\n        + '[data-objecttable=\"local_shopping_cart\"');\n\n    buttons.forEach(addtocartbutton => {\n\n        // We need to check all the buttons.\n        toggleActiveButtonState(addtocartbutton);\n\n        // We only ever initialize the button once.\n        if (!addtocartbutton || addtocartbutton.dataset.initialized === 'true') {\n            return;\n        }\n        addtocartbutton.dataset.initialized = 'true';\n\n        // If the button has the nojs flag, we don't add the listener at all.\n\n        if (addtocartbutton.dataset.nojs) {\n            return;\n        }\n\n        // Add click eventlistern to oneself.\n        addtocartbutton.addEventListener('click', event => {\n\n            if (addtocartbutton.dataset.blocked == 'true') {\n                return;\n            }\n\n            // If we find the disabled class, the click event is aborted.\n            if (addtocartbutton.classList.contains('disabled')) {\n                event.preventDefault();\n                event.stopPropagation();\n                // DeleteItem(itemid, component, area);\n            } else {\n                // Event.preventDefault();\n                // Event.stopPropagation();\n                addItem(itemid, component, area);\n            }\n        });\n    });\n\n    return;\n};\n\n/**\n * Function to reload the cart. We can pass on the certain component if we need to make sure that not only the cart is reloaded.\n * This is the case when adding or deleting a certain item and a special button has to be reset.\n * @param {*} userid\n */\nexport const reinit = (userid = 0) => {\n\n    userid = transformUserIdForCashier(userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_shopping_cart_items\",\n        args: {\n            userid\n        },\n        done: function(data) {\n\n            // If we are on the cashier page, we add the possibility to add a discount to the cart items.\n            const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n            if (oncashier > 0) {\n                data.iscashier = true;\n            } else {\n                data.iscashier = false;\n            }\n\n            let containers = [];\n\n            if (userid != 0 && data.iscashier) {\n                containers = document.querySelectorAll(SELECTORS.CASHIERSCART);\n            } else {\n                containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n                    + \",\" + SELECTORS.CHECKOUTCART);\n            }\n\n            let promises = [];\n\n            // Before rendering, we convert all prices to strings with 2 fixed decimals.\n            convertPricesToNumberFormat(data);\n\n            // We render for promise for all the containers.\n            promises.push(Templates.renderForPromise('local_shopping_cart/shopping_cart_items', data).then(({html, js}) => {\n                containers.forEach(container => {\n                // We know we will always find the Navbar, so we can do this right away.\n                    Templates.replaceNodeContents(container, html, js);\n                });\n                return true;\n            }).catch((e) => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            Promise.all(promises).then(() => {\n\n                // If we are on the cashier page, we add the possibility to add a discount to the cart items.\n                if (!(userid != 0 && data.iscashier)) {\n                    clearInterval(interval);\n                    initTimer(data.expirationtime, data.nowdate);\n\n                    updateBadge(data.count);\n                }\n\n                toggleActiveButtonState();\n\n                updateTotalPrice(userid);\n\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n        },\n        fail: ex => {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};\n\n/**\n * This function is only called when the timer invalidates the cart.\n * If no userid is provided the logged in USER will be used.\n * The USER-user is chosen with the userid 0, we just reinit everything after sending.\n * @param {*} userid\n */\nexport const deleteAllItems = (userid = 0) => {\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_all_items_from_cart\",\n        args: {\n            'userid': userid\n        },\n        done: function() {\n            reinit(0);\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(ex);\n        },\n    }]);\n};\n\nexport const deleteItem = (itemid, component, area, userid) => {\n\n    userid = transformUserIdForCashier(userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_item\",\n        args: {\n            'itemid': itemid,\n            'component': component,\n            'area': area,\n            'userid': userid\n        },\n        done: function(data) {\n\n            getString('item_deleted', 'local_shopping_cart', data.itemname).then(message => {\n                showNotification(message, 'success');\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n            reinit(userid);\n\n            import('local_wunderbyte_table/reload')\n                // eslint-disable-next-line promise/always-return\n                .then(wbt => {\n                    wbt.reloadAllTables();\n                })\n                .catch(err => {\n                    // Handle any errors, including if the module doesn't exist\n                    // eslint-disable-next-line no-console\n                    console.log(err);\n            });\n\n        },\n        fail: function() {\n\n            reinit(userid);\n        },\n    }]);\n};\n\nexport const addItem = (itemid, component, area) => {\n\n    let userid = transformUserIdForCashier();\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_add_item\",\n        args: {\n            'area': area,\n            'component': component,\n            'itemid': itemid,\n            'userid': userid\n        },\n        done: function(data) {\n            data.component = component;\n            data.area = area;\n            data.itemid = itemid;\n            data.userid = userid; // For the mustache template, we need to obey structure.\n            addItemShowNotification(data);\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n *\n * @param {*} userid\n * @param {*} usecredit\n * @param {*} useinstallments\n */\nexport const updateTotalPrice = (userid = 0, usecredit = true, useinstallments = false) => {\n\n    // On cashier, update price must always be for cashier user.\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    if (oncashier > 0) {\n        userid = CASHIERUSER;\n    }\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    // We must make sure the checkbox is only once visible on the site.\n    // const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n    usecredit = usecredit ? 1 : 0;\n    useinstallments = useinstallments ? 1 : 0;\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_price\",\n        args: {\n            userid,\n            usecredit,\n            useinstallments\n        },\n        done: function(data) {\n\n            // We take the usecredit value we receive from the server.\n            if (data.usecredit == 1) {\n                data.usecreditvalue = 'checked';\n            } else {\n                data.usecreditvalue = '';\n            }\n\n            data.checkboxid = Math.random().toString(36).slice(2, 5);\n\n            if (data.installments.length > 0) {\n                data.installmentscheckboxid = 'i' + data.checkboxid;\n            }\n\n            data.userid = userid;\n\n            const labelareas = document.querySelectorAll(SELECTORS.PRICELABELAREA);\n\n            // Before rendering, we convert all prices to strings with 2 fixed decimals.\n            convertPricesToNumberFormat(data);\n\n            Templates.renderForPromise('local_shopping_cart/price_label', data).then(({html, js}) => {\n\n                labelareas.forEach(labelarea => {\n                    Templates.replaceNodeContents(labelarea, html, js);\n\n                    addZeroPriceListener(data);\n                });\n\n                return true;\n            }).catch((e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            const checkoutButton = document.querySelector(SELECTORS.CHECKOUTBUTTON);\n            const paymentbutton = document.querySelector(SELECTORS.PAYMENTREGIONBUTTON);\n            if (data.count == 0) {\n                if (checkoutButton) {\n                    checkoutButton.classList.add(\"disabled\");\n                }\n                if (paymentbutton) {\n                    paymentbutton.style.display = \"none\";\n                }\n            } else {\n                if (checkoutButton) {\n                    checkoutButton.classList.remove(\"disabled\");\n                }\n                if (paymentbutton) {\n                    paymentbutton.style.display = \"inline\";\n                }\n            }\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n * Looks for the payment buttun, updates cost and adds the listener.\n * @param {*} data\n */\nfunction addZeroPriceListener(data) {\n\n    let paymentbutton = document.querySelector(\".shopping_cart_payment_region button\");\n\n    if (paymentbutton) {\n\n        if (paymentbutton.classList.contains('disabled')) {\n            return;\n        }\n\n        const price = data.price;\n        const currency = data.currency;\n\n        paymentbutton.dataset.cost = price + \" \" + currency;\n\n        if (price == 0) {\n\n            paymentbutton.addEventListener('click', dealWithZeroPrice);\n        } else {\n\n            paymentbutton.removeEventListener('click', dealWithZeroPrice);\n        }\n    }\n}\n\n/**\n * Function to show notifications when items are added.\n * @param {*} data\n */\nexport function addItemShowNotification(data) {\n    const CARTPARAM_ALREADYINCART = 0; // Already in cart.\n    const CARTPARAM_SUCCESS = 1; // Item added to cart successfully.\n    const CARTPARAM_CARTISFULL = 2; // Item added to cart successfully.\n    const CARTPARAM_COSTCENTER = 3; // Item added to cart successfully.\n    const CARTPARAM_FULLYBOOKED = 4; // Item not added because item is already fully booked.\n    const CARTPARAM_ALREADYBOOKED = 5; // Item not added because item was already booked before.\n\n    switch (data.success) {\n        case CARTPARAM_ALREADYINCART:\n            reinit();\n            return;\n        case CARTPARAM_SUCCESS:\n            getString('addedtocart', 'local_shopping_cart', data.itemname).then(message => {\n                showNotification(message, 'success');\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            reinit(data.userid);\n            return;\n        case CARTPARAM_CARTISFULL:\n            getStrings([\n                {key: 'cartisfull', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setBody(strings[0]);\n                    modal.setSaveButtonText(strings[1]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_COSTCENTER:\n            getStrings([\n                {key: 'error:costcentertitle', component: 'local_shopping_cart'},\n                {key: 'error:costcentersdonotmatch', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_FULLYBOOKED:\n            getStrings([\n                {key: 'error:fullybookedtitle', component: 'local_shopping_cart'},\n                {key: 'error:fullybooked', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n\n                    // Reload when OK button is clicked.\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        window.location.reload();\n                    });\n\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_ALREADYBOOKED:\n            getStrings([\n                {key: 'error:alreadybookedtitle', component: 'local_shopping_cart'},\n                {key: 'error:alreadybooked', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n\n                    // Reload when OK button is clicked.\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        window.location.reload();\n                    });\n\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        default:\n            getStrings([\n                {key: 'error:generalcarterror', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setBody(strings[0]);\n                    modal.setSaveButtonText(strings[1]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n    }\n\n}\n\n/**\n *\n * @param {*} event\n */\nasync function dealWithZeroPrice(event) {\n\n    event.stopPropagation();\n    event.preventDefault();\n\n    confirmZeroPriceCheckoutModal(event.target);\n}\n\n/**\n * Start the timer.\n *\n * @param {integer} duration\n * @param {integer} display\n */\nfunction startTimer(duration, display) {\n\n    var timer = duration,\n                minutes,\n                seconds;\n    interval = setInterval(function() {\n\n        minutes = parseInt(timer / 60, 10);\n        seconds = parseInt(timer % 60, 10);\n\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n        display.textContent = minutes + \":\" + seconds;\n\n        if (--timer < 0) {\n\n            // We so the expiration time has already kicked in on the server.\n            setTimeout(() => {\n                reinit(0);\n            }, 2000);\n\n            // We don't actually need to make this call.\n            // deleteAllItems();\n\n            clearInterval(interval);\n        }\n    }, 1000);\n}\n\n\n/**\n * Initialize Timer.\n *\n * @param {integer} expirationtime\n * @param {integer} nowdate\n *\n */\nfunction initTimer(expirationtime = null, nowdate = null) {\n\n    const countdownelement = document.querySelector(SELECTORS.COUNTDOWN);\n\n    if (!countdownelement || !nowdate) {\n        return;\n    }\n\n    if (interval) {\n        clearInterval(interval);\n    }\n    let delta = 0;\n    let now = nowdate;\n    if (expirationtime) {\n        delta = (expirationtime - now);\n    }\n    if (delta <= 0) {\n        delta = 0;\n        countdownelement.classList.add(\"hidden\");\n    } else if (delta > 0) {\n        countdownelement.classList.remove(\"hidden\");\n        startTimer(delta, countdownelement);\n    }\n}\n\n/**\n *\n * @param {*} element\n */\nfunction confirmZeroPriceCheckoutModal(element) {\n\n    getStrings([\n        {key: 'confirmzeropricecheckouttitle', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckoutbody', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckout', component: 'local_shopping_cart'}\n    ]\n    ).then(strings => {\n        // eslint-disable-next-line promise/no-nesting\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n                modal.setBody(strings[1]);\n                modal.setSaveButtonText(strings[2]);\n                modal.getRoot().on(ModalEvents.save, function() {\n\n                    const userid = element.dataset.userid;\n\n                    if (userid) {\n                        // The second parameter designs the payment method.\n                        // In the cart, the constant PAYMENT_METHOD_CREDITS translates to 2.\n                        confirmPayment(userid, 2);\n                    }\n                });\n\n                modal.show();\n                return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n * Function to update the page in the nav bar.\n * @param {*} count\n */\nfunction updateBadge(count) {\n\n    const badge = document.querySelector(SELECTORS.BADGECOUNT);\n\n    if (count > 0) {\n        badge.innerHTML = count;\n        badge.classList.remove('hidden');\n    } else {\n        badge.innerHTML = count;\n        badge.classList.add('hidden');\n    }\n}\n\n/**\n * Function to toggle the active state.\n * @param {*} button\n */\nfunction toggleActiveButtonState(button = null) {\n\n    let selector = '';\n    let component = null;\n    let area = null;\n    let itemid = null;\n\n    // If we have a button, we only look for this particular itemid.\n    if (button) {\n\n        // We'll find the right variables in the DOM.\n        itemid = button.dataset.itemid;\n        component = button.dataset.component;\n        area = button.dataset.area;\n\n        selector =\n            'div'\n            + '[data-itemid=\"' + itemid + '\"]'\n            + '[data-component=\"' + component + '\"]'\n            + '[data-area=\"' + area + '\"]'\n            + '[data-objecttable=\"local_shopping_cart\"';\n    } else {\n        // As we might have more than one of these buttons, we always need to look for all of them in the document.\n        // We will update for all the buttons we find.\n        selector =\n        'div'\n        + '[data-objecttable=\"local_shopping_cart\"';\n    }\n\n    const buttons = document.querySelectorAll(selector);\n\n    // Make sure item is not yet in shopping cart. If so, add disabled class.\n    let shoppingcart = document.querySelector(SELECTORS.CASHIERSCART);\n\n    if (!shoppingcart) {\n        shoppingcart = document.querySelector(SELECTORS.NAVBARCONTAINER);\n    }\n\n    buttons.forEach(addtocartbutton => {\n\n        component = addtocartbutton.dataset.component;\n        area = addtocartbutton.dataset.area;\n        itemid = addtocartbutton.dataset.itemid;\n\n        const cartitem = shoppingcart.querySelector('[id=\"item-' + component + '-' + area + '-' + itemid + '\"]');\n\n        if (cartitem) {\n\n            addtocartbutton.classList.add('disabled');\n        } else {\n\n            addtocartbutton.classList.remove('disabled');\n        }\n    });\n}\n\n/**\n * Function to init Price Label and add Listener.\n * @param {*} userid\n */\nexport function initPriceLabel(userid) {\n\n    // eslint-disable-next-line no-console\n    console.log('initpricelabel');\n\n    if (userid < 1) {\n        userid = 0;\n    }\n\n    const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n    const installmentscheckbox = document.querySelector(SELECTORS.INSTALLMENTSCHECKBOX);\n\n    if (checkbox && !checkbox.initialized) {\n        checkbox.initialized = true;\n        checkbox.addEventListener('change', event => {\n\n            var installementsvalue = false;\n            if (installmentscheckbox) {\n                installementsvalue = installmentscheckbox.checked;\n            }\n\n            if (event.currentTarget.checked) {\n                updateTotalPrice(userid, true, installementsvalue);\n            } else {\n                updateTotalPrice(userid, false, installementsvalue);\n            }\n        });\n    }\n\n    if (installmentscheckbox && !installmentscheckbox.initialized) {\n        installmentscheckbox.initialized = true;\n\n        // eslint-disable-next-line no-console\n        console.log('add event listener to installment');\n        installmentscheckbox.addEventListener('change', event => {\n\n            // eslint-disable-next-line no-console\n            console.log(event.currentTarget, event.currentTarget.checked);\n\n            // eslint-disable-next-line no-console\n            console.log(checkbox);\n\n            let checkboxchecked = null;\n            if (checkbox) {\n                checkboxchecked = checkbox.checked;\n            }\n\n            updateTotalPrice(userid, checkboxchecked, event.currentTarget.checked);\n\n        });\n    }\n}\n\n/**\n * We need to know if we are on the cashier page to transform userid if necessary.\n * @param {integer} userid\n * @returns {integer}\n */\nfunction transformUserIdForCashier(userid = null) {\n\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    if ((userid == CASHIERUSER || !(userid === 0 || userid === \"0\")) && oncashier > 0) {\n        userid = CASHIERUSER;\n    } else if (userid === null) {\n        userid = 0;\n    }\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    return userid;\n}\n\n/**\n * Helper function to convert prices to number format before rendering.\n * @param {Object} data the data containing the price values\n */\nfunction convertPricesToNumberFormat(data) {\n    // Render all prices to 2 fixed decimals.\n    if (data.price) {\n        data.price = Number(data.price).toFixed(2);\n    }\n    if (data.initialtotal) {\n        data.initialtotal = Number(data.initialtotal).toFixed(2);\n    }\n    if (data.initialtotal_net) {\n        // eslint-disable-next-line camelcase\n        data.initialtotal_net = Number(data.initialtotal_net).toFixed(2);\n    }\n    if (data.discount) {\n        data.discount = Number(data.discount).toFixed(2);\n    }\n    if (data.deductible) {\n        data.deductible = Number(data.deductible).toFixed(2);\n    }\n    if (data.credit) {\n        data.credit = Number(data.credit).toFixed(2);\n    }\n    if (data.remainingcredit) {\n        data.remainingcredit = Number(data.remainingcredit).toFixed(2);\n    }\n    if (data.price_net) {\n        // eslint-disable-next-line camelcase\n        data.price_net = Number(data.price_net).toFixed(2);\n    }\n    if (data.price_gross) {\n        // eslint-disable-next-line camelcase\n        data.price_gross = Number(data.price_gross).toFixed(2);\n    }\n    if (data.items) {\n        for (var i = 0; i < data.items.length; i++) {\n            if (data.items[i].price) {\n                data.items[i].price = Number(data.items[i].price).toFixed(2);\n            }\n            if (data.items[i].price_gross) {\n                // eslint-disable-next-line camelcase\n                data.items[i].price_gross = Number(data.items[i].price_gross).toFixed(2);\n            }\n            if (data.items[i].price_net) {\n                // eslint-disable-next-line camelcase\n                data.items[i].price_net = Number(data.items[i].price_net).toFixed(2);\n            }\n        }\n    }\n}\n\n/**\n * Add Accept terms listener to set the right class to payment region button.\n * @param {element} accepttermsbutton\n * @param {element} paymentbutton\n */\nfunction addAcceptTermsListener(accepttermsbutton, paymentbutton) {\n\n    accepttermsbutton.addEventListener('change', event => {\n        if (event.currentTarget.checked) {\n            paymentbutton.disabled = false;\n        } else {\n            paymentbutton.disabled = true;\n        }\n    });\n}"],"names":["userid","console","log","checkbox","document","querySelector","SELECTORS","PRICELABELCHECKBOX","installmentscheckbox","INSTALLMENTSCHECKBOX","initialized","addEventListener","event","installementsvalue","checked","currentTarget","updateTotalPrice","checkboxchecked","_ajax","_interopRequireDefault","_templates","_modal_factory","_modal_events","_dynamicform","_systemImportTransformerGlobalIdentifier","window","self","global","obj","__esModule","default","interval","_exports","visbilityevent","SHOPPING_CART_ITEM","NAVBARCONTAINER","TRASHCLASS","DISCOUNTCLASS","BADGECOUNT","COUNTDOWN","CASHIERSCART","CHECKOUTCART","PRICELABELAREA","CHECKOUTBUTTON","PAYMENTREGIONBUTTON","ACCEPTTERMS","CHECKUIDFORM","init","expirationtime","nowdate","initTimer","containers","querySelectorAll","forEach","container","element","target","classList","contains","dataset","component","area","itemid","deleteItem","discountModal","readyState","reinit","visibilityState","paymentbutton","addZeroPriceListener","price","currency","accepttermsbutton","disabled","addAcceptTermsListener","initUidChecker","uidchecker","uidcheckerform","DynamicForm","events","FORM_SUBMITTED","e","load","data","buttoninit","selector","button","addtocartbutton","toggleActiveButtonState","nojs","blocked","preventDefault","stopPropagation","addItem","arguments","length","undefined","transformUserIdForCashier","Ajax","call","methodname","args","done","oncashier","location","href","indexOf","iscashier","promises","convertPricesToNumberFormat","push","Templates","renderForPromise","then","_ref","html","js","replaceNodeContents","catch","Promise","all","clearInterval","count","badge","innerHTML","remove","add","updateBadge","fail","ex","deleteAllItems","getString","itemname","message","showNotification","define","amd","resolve","reject","require","module","exports","loader","wbt","reloadAllTables","err","Number","isInteger","parseInt","addItemShowNotification","usecredit","useinstallments","usecreditvalue","checkboxid","Math","random","toString","slice","installments","installmentscheckboxid","labelareas","_ref2","labelarea","checkoutButton","style","display","cost","dealWithZeroPrice","removeEventListener","success","getStrings","key","strings","ModalFactory","create","type","types","SAVE_CANCEL","modal","setBody","setSaveButtonText","show","setTitle","getRoot","on","ModalEvents","save","reload","async","confirmPayment","countdownelement","delta","minutes","seconds","timer","setInterval","textContent","setTimeout","buttons","shoppingcart","toFixed","initialtotal","initialtotal_net","discount","deductible","credit","remainingcredit","price_net","price_gross","items","i"],"mappings":"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"}