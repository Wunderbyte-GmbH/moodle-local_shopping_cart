{"version":3,"file":"cart.min.js","sources":["../src/cart.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\n\nimport {confirmPayment} from 'local_shopping_cart/cashier';\nimport {discountModal} from 'local_shopping_cart/cashier';\nimport {showNotification} from 'local_shopping_cart/notifications';\n\nimport DynamicForm from 'core_form/dynamicform';\n\nimport {\n    get_strings as getStrings,\n    get_string as getString\n        }\n        from 'core/str';\n\nexport var interval = null;\nexport var visbilityevent = false;\n\n// This file inits the cart on every page, on checkout and cashier.\n// The cart is always loaed entirely and replaced via css.\n// The cashiers cart are identified in the DOM via userid -1 (CASHIERUSER).\n// The translation to real userids is done in the PHP only.\n\nconst CASHIERUSER = -1;\n\nconst SELECTORS = {\n    SHOPPING_CART_ITEM: '[data-item=\"shopping_cart_item\"]',\n    NAVBARCONTAINER: '#nav-shopping_cart-popover-container .shopping-cart-items-container',\n    TRASHCLASS: 'fa-trash-o',\n    DISCOUNTCLASS: 'shoppingcart-discount-icon',\n    BADGECOUNT: '#nav-shopping_cart-popover-container div.count-container',\n    COUNTDOWN: '#nav-shopping_cart-popover-container span.expirationtime',\n    CASHIERSCART: 'div.shopping-cart-cashier-items-container',\n    CHECKOUTCART: 'div.shopping-cart-checkout-items-container',\n    PRICELABELCHECKBOX: '.sc_price_label input.usecredit-checkbox',\n    INSTALLMENTSCHECKBOX: '.sc_price_label input.useinstallments-checkbox',\n    PRICELABELAREA: '.sc_price_label',\n    CHECKOUTBUTTON: '#nav-shopping_cart-popover-container #shopping-cart-checkout-button',\n    PAYMENTREGIONBUTTON: 'div.shopping_cart_payment_region button',\n    ACCEPTTERMS: '#accepttermsnandconditions',\n    CHECKVATNRFORM: 'div.form_vatnrchecker',\n};\n/**\n *\n * @param {*} expirationtime\n */\n\n export const init = (expirationtime, nowdate) => {\n\n    // eslint-disable-next-line no-console\n    console.log(expirationtime, nowdate);\n\n    initTimer(expirationtime, nowdate);\n\n    // We might have more than one container.\n    let containers = [];\n    containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n        + \",\" + SELECTORS.CASHIERSCART\n        + \",\" + SELECTORS.CHECKOUTCART);\n\n    containers.forEach(container => {\n\n        container.addEventListener('click', event => {\n\n            // Decide the target of the click.\n            const element = event.target;\n\n            if (element.classList.contains(SELECTORS.TRASHCLASS)) {\n\n                const userid = element.dataset.userid ? element.dataset.userid : 0;\n                const component = element.dataset.component;\n                const area = element.dataset.area;\n                const itemid = element.dataset.itemid;\n\n                deleteItem(itemid, component, area, userid);\n            } else if (element.classList.contains(SELECTORS.DISCOUNTCLASS)) {\n\n                discountModal(event);\n            }\n        });\n    });\n\n    // Re-init cart on page reload or navigation to another page - required for 2-digit price precision visibility.\n    document.addEventListener(\"readystatechange\", () => {\n        if (document.readyState !== 'loading') {\n            reinit();\n        }\n    });\n\n    if (visbilityevent == false) {\n        document.addEventListener(\"visibilitychange\", function() {\n            visbilityevent = true;\n            if (document.visibilityState === 'visible') {\n                reinit();\n            }\n        });\n    }\n\n    // Initially, we need to add the zeroPriceListener once.\n    const paymentbutton = document.querySelector(SELECTORS.PAYMENTREGIONBUTTON);\n    if (paymentbutton) {\n        const data = {\n            price: paymentbutton.dataset.price,\n            currency: paymentbutton.dataset.currency,\n        };\n        addZeroPriceListener(data);\n    }\n\n    const accepttermsbutton = document.querySelector(SELECTORS.ACCEPTTERMS);\n    if (accepttermsbutton && paymentbutton) {\n        addAcceptTermsListener(accepttermsbutton, paymentbutton);\n    }\n\n    initVATNRChecker();\n};\n\nconst initVATNRChecker = () => {\n\n    const vatnrchecker = document.querySelector(SELECTORS.CHECKVATNRFORM);\n\n    if (vatnrchecker) {\n        const vatnrcheckerform = new DynamicForm(\n            vatnrchecker,\n            'local_shopping_cart\\\\form\\\\dynamicvatnrchecker'\n        );\n\n        vatnrcheckerform.addEventListener('change', (e) => {\n\n            // eslint-disable-next-line no-console\n            console.log(e.target.checked, e.target.name);\n\n            if (!e.target.name) {\n                return;\n            }\n\n            if (e.target.name == 'usevatnr'\n                && e.target.checked === false) {\n\n                // eslint-disable-next-line no-console\n                console.log(e.target.value);\n\n                vatnrcheckerform.submitFormAjax();\n            }\n        });\n\n        // After submitting we want to reload the window to update the rule list.\n        vatnrcheckerform.addEventListener(vatnrcheckerform.events.FORM_SUBMITTED, () => {\n\n            vatnrcheckerform.load();\n            // eslint-disable-next-line no-console\n            console.log('form submitted');\n\n            reinit();\n        });\n    }\n\n};\n\nexport const buttoninit = (itemid, component, area) => {\n\n    // If we don't have an itemid, we need to look for all the buttons.\n    if (!itemid || !component || !area) {\n        const selector = '[data-objecttable=\"local_shopping_cart\"';\n        const allbuttons = document.querySelectorAll(\n            selector);\n\n        allbuttons.forEach(button => {\n            const itemid = button.dataset.itemid;\n            const area = button.dataset.area;\n            const component = button.dataset.component;\n            buttoninit(itemid, component, area);\n        });\n        return;\n    }\n\n    // Return all buttons with the add to cart functionality.\n    const buttons =\n    document.querySelectorAll(\n        'div'\n        + '[data-itemid=\"' + itemid + '\"]'\n        + '[data-component=\"' + component + '\"]'\n        + '[data-area=\"' + area + '\"]'\n        + '[data-objecttable=\"local_shopping_cart\"');\n\n    buttons.forEach(addtocartbutton => {\n\n        // We need to check all the buttons.\n        toggleActiveButtonState(addtocartbutton);\n\n        // We only ever initialize the button once.\n        if (!addtocartbutton || addtocartbutton.dataset.initialized === 'true') {\n            return;\n        }\n        addtocartbutton.dataset.initialized = 'true';\n\n        // If the button has the nojs flag, we don't add the listener at all.\n\n        if (addtocartbutton.dataset.nojs) {\n            return;\n        }\n\n        // Add click eventlistern to oneself.\n        addtocartbutton.addEventListener('click', event => {\n\n            if (addtocartbutton.dataset.blocked == 'true') {\n                return;\n            }\n\n            // If we find the disabled class, the click event is aborted.\n            if (addtocartbutton.classList.contains('disabled')) {\n                event.preventDefault();\n                event.stopPropagation();\n                // DeleteItem(itemid, component, area);\n            } else {\n                // Event.preventDefault();\n                // Event.stopPropagation();\n                addItem(itemid, component, area);\n            }\n        });\n    });\n\n    return;\n};\n\n/**\n * Function to reload the cart. We can pass on the certain component if we need to make sure that not only the cart is reloaded.\n * This is the case when adding or deleting a certain item and a special button has to be reset.\n * @param {*} userid\n */\nexport const reinit = (userid = 0) => {\n\n    userid = transformUserIdForCashier(userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_shopping_cart_items\",\n        args: {\n            userid\n        },\n        done: function(data) {\n\n            // If we are on the cashier page, we add the possibility to add a discount to the cart items.\n            const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n            if (oncashier > 0) {\n                data.iscashier = true;\n            } else {\n                data.iscashier = false;\n            }\n\n            let containers = [];\n\n            if (userid != 0 && data.iscashier) {\n                containers = document.querySelectorAll(SELECTORS.CASHIERSCART);\n            } else {\n                containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n                    + \",\" + SELECTORS.CHECKOUTCART);\n            }\n\n            let promises = [];\n\n            // Before rendering, we convert all prices to strings with 2 fixed decimals.\n            convertPricesToNumberFormat(data);\n\n            // We render for promise for all the containers.\n            promises.push(Templates.renderForPromise('local_shopping_cart/shopping_cart_items', data).then(({html, js}) => {\n                containers.forEach(container => {\n                // We know we will always find the Navbar, so we can do this right away.\n                    Templates.replaceNodeContents(container, html, js);\n                });\n                return true;\n            }).catch((e) => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            Promise.all(promises).then(() => {\n\n                // If we are on the cashier page, we add the possibility to add a discount to the cart items.\n                if (!(userid != 0 && data.iscashier)) {\n                    clearInterval(interval);\n                    initTimer(data.expirationtime, data.nowdate);\n\n                    updateBadge(data.count);\n                }\n\n                toggleActiveButtonState();\n\n                updateTotalPrice(userid);\n\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n        },\n        fail: ex => {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};\n\n/**\n * This function is only called when the timer invalidates the cart.\n * If no userid is provided the logged in USER will be used.\n * The USER-user is chosen with the userid 0, we just reinit everything after sending.\n * @param {*} userid\n */\nexport const deleteAllItems = (userid = 0) => {\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_all_items_from_cart\",\n        args: {\n            'userid': userid\n        },\n        done: function() {\n            reinit(0);\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(ex);\n        },\n    }]);\n};\n\nexport const deleteItem = (itemid, component, area, userid) => {\n\n    userid = transformUserIdForCashier(userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_item\",\n        args: {\n            'itemid': itemid,\n            'component': component,\n            'area': area,\n            'userid': userid\n        },\n        done: function(data) {\n\n            getString('item_deleted', 'local_shopping_cart', data.itemname).then(message => {\n                showNotification(message, 'success');\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n            reinit(userid);\n\n            import('local_wunderbyte_table/reload')\n                // eslint-disable-next-line promise/always-return\n                .then(wbt => {\n                    wbt.reloadAllTables();\n                })\n                .catch(err => {\n                    // Handle any errors, including if the module doesn't exist\n                    // eslint-disable-next-line no-console\n                    console.log(err);\n            });\n\n        },\n        fail: function() {\n\n            reinit(userid);\n        },\n    }]);\n};\n\nexport const addItem = (itemid, component, area) => {\n\n    let userid = transformUserIdForCashier();\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_add_item\",\n        args: {\n            'area': area,\n            'component': component,\n            'itemid': itemid,\n            'userid': userid\n        },\n        done: function(data) {\n            data.component = component;\n            data.area = area;\n            data.itemid = itemid;\n            data.userid = userid; // For the mustache template, we need to obey structure.\n            addItemShowNotification(data);\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n *\n * @param {*} userid\n * @param {*} usecredit\n * @param {*} useinstallments\n */\nexport const updateTotalPrice = (userid = 0, usecredit = true, useinstallments = false) => {\n\n    // On cashier, update price must always be for cashier user.\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    if (oncashier > 0) {\n        userid = CASHIERUSER;\n    }\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    // We must make sure the checkbox is only once visible on the site.\n    const checkboxes = document.querySelectorAll(SELECTORS.PRICELABELCHECKBOX);\n\n    if (checkboxes.length == 1) {\n        checkboxes.forEach(checkbox => {\n            usecredit = checkbox.checked ? 1 : 0;\n        });\n    } else {\n        usecredit = usecredit ? 1 : 0;\n    }\n    useinstallments = useinstallments ? 1 : 0;\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_price\",\n        args: {\n            userid,\n            usecredit,\n            useinstallments\n        },\n        done: function(data) {\n\n            // We take the usecredit value we receive from the server.\n            if (data.usecredit == 1) {\n                data.usecreditvalue = 'checked';\n            } else {\n                data.usecreditvalue = '';\n            }\n\n            data.checkboxid = Math.random().toString(36).slice(2, 5);\n\n            if (data.installments.length > 0) {\n                data.installmentscheckboxid = 'i' + data.checkboxid;\n            }\n\n            data.userid = userid;\n\n            const labelareas = document.querySelectorAll(SELECTORS.PRICELABELAREA);\n\n            // Before rendering, we convert all prices to strings with 2 fixed decimals.\n            convertPricesToNumberFormat(data);\n\n            Templates.renderForPromise('local_shopping_cart/price_label', data).then(({html, js}) => {\n\n                labelareas.forEach(labelarea => {\n\n                    // There are labelareas we don't want to update.\n                    if (!labelarea.dataset.noupdate) {\n                        Templates.replaceNodeContents(labelarea, html, js);\n                        addZeroPriceListener(data);\n                    }\n                });\n\n                return true;\n            }).catch((e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            const checkoutButton = document.querySelector(SELECTORS.CHECKOUTBUTTON);\n            const paymentbutton = document.querySelector(SELECTORS.PAYMENTREGIONBUTTON);\n            if (data.count == 0) {\n                if (checkoutButton) {\n                    checkoutButton.classList.add(\"disabled\");\n                }\n                if (paymentbutton) {\n                    paymentbutton.style.display = \"none\";\n                }\n            } else {\n                if (checkoutButton) {\n                    checkoutButton.classList.remove(\"disabled\");\n                }\n                if (paymentbutton) {\n                    paymentbutton.style.display = \"inline\";\n                }\n            }\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n * Looks for the payment buttun, updates cost and adds the listener.\n * @param {*} data\n */\nfunction addZeroPriceListener(data) {\n\n    let paymentbutton = document.querySelector(\".shopping_cart_payment_region button\");\n\n    if (paymentbutton) {\n\n        if (paymentbutton.classList.contains('disabled')) {\n            return;\n        }\n\n        const price = data.price;\n        const currency = data.currency;\n\n        paymentbutton.dataset.cost = price + \" \" + currency;\n\n        if (price == 0) {\n\n            paymentbutton.addEventListener('click', dealWithZeroPrice);\n        } else {\n\n            paymentbutton.removeEventListener('click', dealWithZeroPrice);\n        }\n    }\n}\n\n/**\n * Function to show notifications when items are added.\n * @param {*} data\n */\nexport function addItemShowNotification(data) {\n    const CARTPARAM_ALREADYINCART = 0; // Already in cart.\n    const CARTPARAM_SUCCESS = 1; // Item added to cart successfully.\n    const CARTPARAM_CARTISFULL = 2; // Item added to cart successfully.\n    const CARTPARAM_COSTCENTER = 3; // Item added to cart successfully.\n    const CARTPARAM_FULLYBOOKED = 4; // Item not added because item is already fully booked.\n    const CARTPARAM_ALREADYBOOKED = 5; // Item not added because item was already booked before.\n\n    switch (data.success) {\n        case CARTPARAM_ALREADYINCART:\n            reinit();\n            return;\n        case CARTPARAM_SUCCESS:\n            getString('addedtocart', 'local_shopping_cart', data.itemname).then(message => {\n                showNotification(message, 'success');\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            reinit(data.userid);\n            return;\n        case CARTPARAM_CARTISFULL:\n            getStrings([\n                {key: 'cartisfull', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setBody(strings[0]);\n                    modal.setSaveButtonText(strings[1]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_COSTCENTER:\n            getStrings([\n                {key: 'error:costcentertitle', component: 'local_shopping_cart'},\n                {key: 'error:costcentersdonotmatch', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_FULLYBOOKED:\n            getStrings([\n                {key: 'error:fullybookedtitle', component: 'local_shopping_cart'},\n                {key: 'error:fullybooked', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n\n                    // Reload when OK button is clicked.\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        window.location.reload();\n                    });\n\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_ALREADYBOOKED:\n            getStrings([\n                {key: 'error:alreadybookedtitle', component: 'local_shopping_cart'},\n                {key: 'error:alreadybooked', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n\n                    // Reload when OK button is clicked.\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        window.location.reload();\n                    });\n\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        default:\n            getStrings([\n                {key: 'error:generalcarterror', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setBody(strings[0]);\n                    modal.setSaveButtonText(strings[1]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n    }\n\n}\n\n/**\n *\n * @param {*} event\n */\nasync function dealWithZeroPrice(event) {\n\n    event.stopPropagation();\n    event.preventDefault();\n\n    confirmZeroPriceCheckoutModal(event.target);\n}\n\n/**\n * Start the timer.\n *\n * @param {integer} duration\n * @param {integer} display\n */\nfunction startTimer(duration, display) {\n\n    var timer = duration,\n                minutes,\n                seconds;\n    interval = setInterval(function() {\n\n        minutes = parseInt(timer / 60, 10);\n        seconds = parseInt(timer % 60, 10);\n\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n        display.textContent = minutes + \":\" + seconds;\n\n        if (--timer < 0) {\n\n            // We so the expiration time has already kicked in on the server.\n            setTimeout(() => {\n                reinit(0);\n            }, 2000);\n\n            // We don't actually need to make this call.\n            // deleteAllItems();\n\n            clearInterval(interval);\n        }\n    }, 1000);\n}\n\n\n/**\n * Initialize Timer.\n *\n * @param {integer} expirationtime\n * @param {integer} nowdate\n *\n */\nfunction initTimer(expirationtime = null, nowdate = null) {\n\n    const countdownelement = document.querySelector(SELECTORS.COUNTDOWN);\n\n    if (!countdownelement || !nowdate) {\n        return;\n    }\n\n    if (interval) {\n        clearInterval(interval);\n    }\n    let delta = 0;\n    let now = nowdate;\n    if (expirationtime) {\n        delta = (expirationtime - now);\n    }\n    if (delta <= 0) {\n        delta = 0;\n        countdownelement.classList.add(\"hidden\");\n    } else if (delta > 0) {\n        countdownelement.classList.remove(\"hidden\");\n        startTimer(delta, countdownelement);\n    }\n}\n\n/**\n *\n * @param {*} element\n */\nfunction confirmZeroPriceCheckoutModal(element) {\n\n    getStrings([\n        {key: 'confirmzeropricecheckouttitle', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckoutbody', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckout', component: 'local_shopping_cart'}\n    ]\n    ).then(strings => {\n        // eslint-disable-next-line promise/no-nesting\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n                modal.setBody(strings[1]);\n                modal.setSaveButtonText(strings[2]);\n                modal.getRoot().on(ModalEvents.save, function() {\n\n                    const userid = element.dataset.userid;\n\n                    if (userid) {\n                        // The second parameter designs the payment method.\n                        // In the cart, the constant PAYMENT_METHOD_CREDITS translates to 2.\n                        confirmPayment(userid, 2);\n                    }\n                });\n\n                modal.show();\n                return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n * Function to update the page in the nav bar.\n * @param {*} count\n */\nfunction updateBadge(count) {\n\n    const badge = document.querySelector(SELECTORS.BADGECOUNT);\n\n    if (count > 0) {\n        badge.innerHTML = count;\n        badge.classList.remove('hidden');\n    } else {\n        badge.innerHTML = count;\n        badge.classList.add('hidden');\n    }\n}\n\n/**\n * Function to toggle the active state.\n * @param {*} button\n */\nfunction toggleActiveButtonState(button = null) {\n\n    let selector = '';\n    let component = null;\n    let area = null;\n    let itemid = null;\n\n    // If we have a button, we only look for this particular itemid.\n    if (button) {\n\n        // We'll find the right variables in the DOM.\n        itemid = button.dataset.itemid;\n        component = button.dataset.component;\n        area = button.dataset.area;\n\n        selector =\n            'div'\n            + '[data-itemid=\"' + itemid + '\"]'\n            + '[data-component=\"' + component + '\"]'\n            + '[data-area=\"' + area + '\"]'\n            + '[data-objecttable=\"local_shopping_cart\"';\n    } else {\n        // As we might have more than one of these buttons, we always need to look for all of them in the document.\n        // We will update for all the buttons we find.\n        selector =\n        'div'\n        + '[data-objecttable=\"local_shopping_cart\"';\n    }\n\n    const buttons = document.querySelectorAll(selector);\n\n    // Make sure item is not yet in shopping cart. If so, add disabled class.\n    let shoppingcart = document.querySelector(SELECTORS.CASHIERSCART);\n\n    if (!shoppingcart) {\n        shoppingcart = document.querySelector(SELECTORS.NAVBARCONTAINER);\n    }\n\n    buttons.forEach(addtocartbutton => {\n\n        component = addtocartbutton.dataset.component;\n        area = addtocartbutton.dataset.area;\n        itemid = addtocartbutton.dataset.itemid;\n\n        const cartitem = shoppingcart.querySelector('[id=\"item-' + component + '-' + area + '-' + itemid + '\"]');\n\n        if (cartitem) {\n\n            addtocartbutton.classList.add('disabled');\n        } else {\n\n            addtocartbutton.classList.remove('disabled');\n        }\n    });\n}\n\n/**\n * Function to init Price Label and add Listener.\n * @param {*} userid\n */\nexport function initPriceLabel(userid) {\n\n    // eslint-disable-next-line no-console\n    console.log('initpricelabel');\n\n    if (userid < 1) {\n        userid = 0;\n    }\n\n    const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n    const installmentscheckbox = document.querySelector(SELECTORS.INSTALLMENTSCHECKBOX);\n\n    if (checkbox && !checkbox.initialized) {\n        checkbox.initialized = true;\n        checkbox.addEventListener('change', event => {\n\n            var installementsvalue = false;\n            if (installmentscheckbox) {\n                installementsvalue = installmentscheckbox.checked;\n            }\n\n            if (event.currentTarget.checked) {\n                updateTotalPrice(userid, true, installementsvalue);\n            } else {\n                updateTotalPrice(userid, false, installementsvalue);\n            }\n        });\n    }\n\n    if (installmentscheckbox && !installmentscheckbox.initialized) {\n        installmentscheckbox.initialized = true;\n\n        // eslint-disable-next-line no-console\n        console.log('add event listener to installment');\n        installmentscheckbox.addEventListener('change', event => {\n\n            // eslint-disable-next-line no-console\n            console.log(event.currentTarget, event.currentTarget.checked);\n\n            // eslint-disable-next-line no-console\n            console.log(checkbox);\n\n            let checkboxchecked = null;\n            if (checkbox) {\n                checkboxchecked = checkbox.checked;\n            }\n\n            updateTotalPrice(userid, checkboxchecked, event.currentTarget.checked);\n\n        });\n    }\n}\n\n/**\n * We need to know if we are on the cashier page to transform userid if necessary.\n * @param {integer} userid\n * @returns {integer}\n */\nfunction transformUserIdForCashier(userid = null) {\n\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    if ((userid == CASHIERUSER || !(userid === 0 || userid === \"0\")) && oncashier > 0) {\n        userid = CASHIERUSER;\n    } else if (userid === null) {\n        userid = 0;\n    }\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    return userid;\n}\n\n/**\n * Helper function to convert prices to number format before rendering.\n * @param {Object} data the data containing the price values\n */\nfunction convertPricesToNumberFormat(data) {\n    // Render all prices to 2 fixed decimals.\n    if (data.price) {\n        data.price = Number(data.price).toFixed(2);\n    }\n    if (data.initialtotal) {\n        data.initialtotal = Number(data.initialtotal).toFixed(2);\n    }\n    if (data.initialtotal_net) {\n        // eslint-disable-next-line camelcase\n        data.initialtotal_net = Number(data.initialtotal_net).toFixed(2);\n    }\n    if (data.discount) {\n        data.discount = Number(data.discount).toFixed(2);\n    }\n    if (data.deductible) {\n        data.deductible = Number(data.deductible).toFixed(2);\n    }\n    if (data.credit) {\n        data.credit = Number(data.credit).toFixed(2);\n    }\n    if (data.remainingcredit) {\n        data.remainingcredit = Number(data.remainingcredit).toFixed(2);\n    }\n    if (data.price_net) {\n        // eslint-disable-next-line camelcase\n        data.price_net = Number(data.price_net).toFixed(2);\n    }\n    if (data.price_gross) {\n        // eslint-disable-next-line camelcase\n        data.price_gross = Number(data.price_gross).toFixed(2);\n    }\n    if (data.items) {\n        for (var i = 0; i < data.items.length; i++) {\n            if (data.items[i].price) {\n                data.items[i].price = Number(data.items[i].price).toFixed(2);\n            }\n            if (data.items[i].price_gross) {\n                // eslint-disable-next-line camelcase\n                data.items[i].price_gross = Number(data.items[i].price_gross).toFixed(2);\n            }\n            if (data.items[i].price_net) {\n                // eslint-disable-next-line camelcase\n                data.items[i].price_net = Number(data.items[i].price_net).toFixed(2);\n            }\n        }\n    }\n}\n\n/**\n * Add Accept terms listener to set the right class to payment region button.\n * @param {element} accepttermsbutton\n * @param {element} paymentbutton\n */\nfunction addAcceptTermsListener(accepttermsbutton, paymentbutton) {\n\n    accepttermsbutton.addEventListener('change', event => {\n        if (event.currentTarget.checked) {\n            paymentbutton.disabled = false;\n        } else {\n            paymentbutton.disabled = true;\n        }\n    });\n}"],"names":["userid","console","log","checkbox","document","querySelector","SELECTORS","installmentscheckbox","initialized","addEventListener","event","installementsvalue","checked","currentTarget","updateTotalPrice","checkboxchecked","interval","visbilityevent","expirationtime","nowdate","initTimer","containers","querySelectorAll","forEach","container","element","target","classList","contains","dataset","component","area","itemid","deleteItem","readyState","reinit","visibilityState","paymentbutton","addZeroPriceListener","price","currency","accepttermsbutton","disabled","addAcceptTermsListener","initVATNRChecker","vatnrchecker","vatnrcheckerform","DynamicForm","e","name","value","submitFormAjax","events","FORM_SUBMITTED","load","buttoninit","selector","button","addtocartbutton","toggleActiveButtonState","nojs","blocked","preventDefault","stopPropagation","addItem","transformUserIdForCashier","call","methodname","args","done","data","oncashier","window","location","href","indexOf","iscashier","promises","convertPricesToNumberFormat","push","Templates","renderForPromise","then","_ref","html","js","replaceNodeContents","catch","Promise","all","clearInterval","updateBadge","count","fail","ex","itemname","message","wbt","reloadAllTables","err","Number","isInteger","parseInt","addItemShowNotification","usecredit","useinstallments","checkboxes","length","usecreditvalue","checkboxid","Math","random","toString","slice","installments","installmentscheckboxid","labelareas","_ref2","labelarea","noupdate","checkoutButton","add","style","display","remove","cost","dealWithZeroPrice","removeEventListener","success","key","strings","create","type","ModalFactory","types","SAVE_CANCEL","modal","setBody","setSaveButtonText","show","setTitle","getRoot","on","ModalEvents","save","reload","startTimer","duration","minutes","seconds","timer","setInterval","textContent","setTimeout","countdownelement","delta","now","badge","innerHTML","buttons","shoppingcart","toFixed","initialtotal","initialtotal_net","discount","deductible","credit","remainingcredit","price_net","price_gross","items","i"],"mappings":"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"}