{"version":3,"file":"cart.min.js","sources":["../src/cart.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\n\nimport {confirmPayment} from 'local_shopping_cart/cashier';\nimport {discountModal} from 'local_shopping_cart/cashier';\nimport {showNotification} from 'local_shopping_cart/notifications';\n\nimport {\n    get_strings as getStrings,\n    get_string as getString\n        }\n        from 'core/str';\n\nexport var interval = null;\nexport var visbilityevent = false;\n\n// This file inits the cart on every page, on checkout and cashier.\n// The cart is always loaed entirely and replaced via css.\n// The cashiers cart are identified in the DOM via userid -1 (CASHIERUSER).\n// The translation to real userids is done in the PHP only.\n\nconst CASHIERUSER = -1;\n\nconst SELECTORS = {\n    SHOPPING_CART_ITEM: '[data-item=\"shopping_cart_item\"]',\n    NAVBARCONTAINER: '#nav-shopping_cart-popover-container .shopping-cart-items-container',\n    TRASHCLASS: 'fa-trash-o',\n    DISCOUNTCLASS: 'fa-eur',\n    BADGECOUNT: '#nav-shopping_cart-popover-container div.count-container',\n    COUNTDOWN: '#nav-shopping_cart-popover-container span.expirationdate',\n    CASHIERSCART: 'div.shopping-cart-cashier-items-container',\n    CHECKOUTCART: 'div.shopping-cart-checkout-items-container',\n    PRICELABELCHECKBOX: '.sc_price_label input.usecredit-checkbox',\n    PRICELABELAREA: '.sc_price_label',\n    CHECKOUTBUTTON: '#nav-shopping_cart-popover-container #shopping-cart-checkout-button',\n    PAYMENTREGIONBUTTON: 'div.shopping_cart_payment_region button',\n};\n/**\n *\n * @param {*} expirationdate\n */\n\n export const init = (expirationdate) => {\n\n    initTimer(expirationdate);\n\n    // We might have more than one container.\n    let containers = [];\n    containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n        + \",\" + SELECTORS.CASHIERSCART\n        + \",\" + SELECTORS.CHECKOUTCART);\n\n    containers.forEach(container => {\n\n        container.addEventListener('click', event => {\n\n            // Decide the target of the click.\n            const element = event.target;\n\n            if (element.classList.contains(SELECTORS.TRASHCLASS)) {\n\n                const userid = element.dataset.userid ? element.dataset.userid : 0;\n                const component = element.dataset.component;\n                const area = element.dataset.area;\n                const itemid = element.dataset.itemid;\n\n                deleteItem(itemid, component, area, userid);\n            } else if (element.classList.contains(SELECTORS.DISCOUNTCLASS)) {\n\n                discountModal(event);\n            }\n        });\n    });\n\n    if (visbilityevent == false) {\n        document.addEventListener(\"visibilitychange\", function() {\n            visbilityevent = true;\n            if (document.visibilityState === 'visible') {\n                reinit();\n            }\n        });\n    }\n\n    // Initially, we need to add the zeroPriceListener once.\n\n    const paymentbutton = document.querySelector(SELECTORS.PAYMENTREGIONBUTTON);\n    if (paymentbutton) {\n        const data = {\n            price: paymentbutton.dataset.price,\n            currency: paymentbutton.dataset.currency,\n        };\n        addZeroPriceListener(data);\n    }\n};\n\nexport const buttoninit = (itemid, component, area) => {\n\n    // If we don't have an itemid, we need to look for all the buttons.\n    if (!itemid || !component || !area) {\n        const selector = '[data-objecttable=\"local_shopping_cart\"';\n        const allbuttons = document.querySelectorAll(\n            selector);\n\n        allbuttons.forEach(button => {\n            const itemid = button.dataset.itemid;\n            const area = button.dataset.area;\n            const component = button.dataset.component;\n            buttoninit(itemid, component, area);\n        });\n        return;\n    }\n\n    // Return all buttons with the add to cart functionality.\n    const buttons =\n    document.querySelectorAll(\n        'button'\n        + '[data-itemid=\"' + itemid + '\"]'\n        + '[data-component=\"' + component + '\"]'\n        + '[data-area=\"' + area + '\"]'\n        + '[data-objecttable=\"local_shopping_cart\"');\n\n    buttons.forEach(addtocartbutton => {\n\n        // We need to check all the buttons.\n        toggleActiveButtonState(addtocartbutton);\n\n        // We only ever initialize the button once.\n        if (!addtocartbutton || addtocartbutton.dataset.initialized === 'true') {\n            return;\n        }\n        addtocartbutton.dataset.initialized = 'true';\n\n        // Add click eventlistern to oneself.\n        addtocartbutton.addEventListener('click', event => {\n\n        // If we find the disabled class, the click event is aborted.\n        if (addtocartbutton.classList.contains('disabled')) {\n            return;\n        }\n            event.preventDefault();\n            event.stopPropagation();\n            addItem(itemid, component, area);\n        });\n    });\n\n    return;\n};\n\n/**\n * Function to reload the cart. We can pass on the certain component if we need to make sure that not only the cart is reloaded.\n * This is the case when adding or deleting a certain item and a special button has to be reset.\n * @param {*} userid\n */\nexport const reinit = (userid = 0) => {\n\n    userid = transformUserIdForCashier(userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_shopping_cart_items\",\n        args: {\n            userid\n        },\n        done: function(data) {\n\n            // If we are on the cashier page, we add the possibility to add a discount to the cart items.\n            const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n            if (oncashier > 0) {\n                data.iscashier = true;\n            } else {\n                data.iscashier = false;\n            }\n\n            let containers = [];\n\n            if (userid != 0 && data.iscashier) {\n                containers = document.querySelectorAll(SELECTORS.CASHIERSCART);\n            } else {\n                containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n                    + \",\" + SELECTORS.CHECKOUTCART);\n            }\n\n            let promises = [];\n\n            // We render for promice for all the containers.\n            promises.push(Templates.renderForPromise('local_shopping_cart/shopping_cart_items', data).then(({html, js}) => {\n                containers.forEach(container => {\n                // We know we will always find the Navbar, so we can do this right away.\n                    Templates.replaceNodeContents(container, html, js);\n                });\n                return true;\n            }).catch((e) => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            Promise.all(promises).then(() => {\n\n                // If we are on the cashier page, we add the possibility to add a discount to the cart items.\n                if (!(userid != 0 && data.iscashier)) {\n                    clearInterval(interval);\n                    initTimer(data.expirationdate);\n\n                    updateBadge(data.count);\n                }\n\n                toggleActiveButtonState();\n\n                updateTotalPrice(userid);\n\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n        },\n        fail: ex => {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};\n\n/**\n * This function is only called when the timer invalidates the cart.\n * This always works for the USER-user, so no userid is transmitted.\n * The USER-user is chosen with the userid 0, we just reinit everything afert sending.\n */\nexport const deleteAllItems = () => {\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_all_items_from_cart\",\n        args: {\n        },\n        done: function() {\n            reinit(0);\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(ex);\n        },\n    }]);\n};\n\nexport const deleteItem = (itemid, component, area, userid) => {\n\n    userid = transformUserIdForCashier(userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_item\",\n        args: {\n            'itemid': itemid,\n            'component': component,\n            'area': area,\n            'userid': userid\n        },\n        done: function() {\n\n            reinit(userid);\n        },\n        fail: function() {\n\n            reinit(userid);\n        },\n    }]);\n};\n\nexport const addItem = (itemid, component, area) => {\n\n    let userid = transformUserIdForCashier();\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_add_item\",\n        args: {\n            'area': area,\n            'component': component,\n            'itemid': itemid,\n            'userid': userid\n        },\n        done: function(data) {\n\n            data.component = component;\n            data.area = area;\n            data.itemid = itemid;\n            data.userid = userid; // For the mustache template, we need to obey structure.\n\n            if (data.success != 1) {\n\n                getString('cartisfull', 'local_shopping_cart').then(message => {\n                    showNotification(message, 'danger');\n                    return;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n\n                return;\n            } else if (data.success == 1) {\n                getString('addedtocart', 'local_shopping_cart', data.itemname).then(message => {\n                    showNotification(message, 'success');\n                    return;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n\n                reinit(userid);\n            }\n\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n *\n * @param {*} userid\n * @param {*} usecredit\n */\nexport const updateTotalPrice = (userid = 0, usecredit = true) => {\n\n    // On cashier, update price must always be for cashier user.\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    if (oncashier > 0) {\n        userid = CASHIERUSER;\n    }\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    // We must make sure the checkbox is only once visible on the site.\n    // const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n    usecredit = usecredit ? 1 : 0;\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_price\",\n        args: {\n            userid,\n            usecredit\n        },\n        done: function(data) {\n\n            // We take the usecredit value we receive from the server.\n            if (data.usecredit == 1) {\n                data.usecreditvalue = 'checked';\n            } else {\n                data.usecreditvalue = '';\n            }\n\n            data.checkboxid = Math.random().toString(36).slice(2, 5);\n\n            data.userid = userid;\n\n            const labelareas = document.querySelectorAll(SELECTORS.PRICELABELAREA);\n\n            Templates.renderForPromise('local_shopping_cart/price_label', data).then(({html, js}) => {\n\n                labelareas.forEach(labelarea => {\n                    Templates.replaceNodeContents(labelarea, html, js);\n\n                    addZeroPriceListener(data);\n                });\n\n                return true;\n            }).catch((e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            const checkoutButton = document.querySelector(SELECTORS.CHECKOUTBUTTON);\n            if (data.count == 0) {\n                checkoutButton.classList.add(\"disabled\");\n            } else {\n                checkoutButton.classList.remove(\"disabled\");\n            }\n\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n * Looks for the payment buttun, updates cost and adds the listener.\n * @param {*} data\n */\nfunction addZeroPriceListener(data) {\n\n    let paymentbutton = document.querySelector(\".shopping_cart_payment_region button\");\n\n    if (paymentbutton) {\n\n        const price = data.price;\n        const currency = data.currency;\n\n        paymentbutton.dataset.cost = price + \" \" + currency;\n\n        if (price == 0) {\n\n            paymentbutton.addEventListener('click', dealWithZeroPrice);\n        } else {\n\n            paymentbutton.removeEventListener('click', dealWithZeroPrice);\n        }\n    }\n}\n\n/**\n *\n * @param {*} event\n */\nfunction dealWithZeroPrice(event) {\n\n    event.stopPropagation();\n    event.preventDefault();\n\n    confirmZeroPriceCheckoutModal(event.target);\n}\n\n/**\n * Start the timer.\n *\n * @param {integer} duration\n * @param {integer} display\n */\nfunction startTimer(duration, display) {\n\n    var timer = duration,\n                minutes,\n                seconds;\n    interval = setInterval(function() {\n\n        minutes = parseInt(timer / 60, 10);\n        seconds = parseInt(timer % 60, 10);\n\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n        display.textContent = minutes + \":\" + seconds;\n\n        if (--timer < 0) {\n            deleteAllItems();\n\n            clearInterval(interval);\n        }\n    }, 1000);\n}\n\n\n/**\n * Initialize Timer.\n *\n * @param {integer} expirationdate\n *\n */\nfunction initTimer(expirationdate = null) {\n\n    const countdownelement = document.querySelector(SELECTORS.COUNTDOWN);\n\n    if (!countdownelement) {\n        return;\n    }\n\n    if (interval) {\n        clearInterval(interval);\n    }\n    let delta = 0;\n    let now = Date.now('UTC');\n    now = (new Date()).getTime() / 1000;\n    if (expirationdate) {\n        delta = (expirationdate - now);\n    }\n    if (delta <= 0) {\n        delta = 0;\n        countdownelement.classList.add(\"hidden\");\n    } else if (delta > 0) {\n        countdownelement.classList.remove(\"hidden\");\n        startTimer(delta, countdownelement);\n    }\n}\n\n/**\n *\n * @param {*} element\n */\nfunction confirmZeroPriceCheckoutModal(element) {\n\n    getStrings([\n        {key: 'confirmzeropricecheckouttitle', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckoutbody', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckout', component: 'local_shopping_cart'}\n    ]\n    ).then(strings => {\n\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n                modal.setBody(strings[1]);\n                modal.setSaveButtonText(strings[2]);\n                modal.getRoot().on(ModalEvents.save, function() {\n\n                    const userid = element.dataset.userid;\n\n                    if (userid) {\n                        // The second parameter designs the payment method.\n                        // In the cart, the constant PAYMENT_METHOD_CREDITS translates to 2.\n                        confirmPayment(userid, 2);\n                    }\n                });\n\n                modal.show();\n                return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n * Function to update the page in the nav bar.\n * @param {*} count\n */\nfunction updateBadge(count) {\n\n    const badge = document.querySelector(SELECTORS.BADGECOUNT);\n\n    if (count > 0) {\n        badge.innerHTML = count;\n        badge.classList.remove('hidden');\n    } else {\n        badge.innerHTML = count;\n        badge.classList.add('hidden');\n    }\n}\n\n/**\n * Function to toggle the active state.\n * @param {*} button\n */\nfunction toggleActiveButtonState(button = null) {\n\n    let selector = '';\n    let component = null;\n    let area = null;\n    let itemid = null;\n\n    // If we have a button, we only look for this particular itemid.\n    if (button) {\n\n        // We'll find the right variables in the DOM.\n        itemid = button.dataset.itemid;\n        component = button.dataset.component;\n        area = button.dataset.area;\n\n        selector =\n            'button'\n            + '[data-itemid=\"' + itemid + '\"]'\n            + '[data-component=\"' + component + '\"]'\n            + '[data-area=\"' + area + '\"]'\n            + '[data-objecttable=\"local_shopping_cart\"';\n    } else {\n        // As we might have more than one of these buttons, we always need to look for all of them in the document.\n        // We will update for all the buttons we find.\n        selector =\n        'button'\n        + '[data-objecttable=\"local_shopping_cart\"';\n    }\n\n    const buttons = document.querySelectorAll(selector);\n\n    // Make sure item is not yet in shopping cart. If so, add disabled class.\n    let shoppingcart = document.querySelector(SELECTORS.CASHIERSCART);\n\n    if (!shoppingcart) {\n        shoppingcart = document.querySelector(SELECTORS.NAVBARCONTAINER);\n    }\n\n    buttons.forEach(addtocartbutton => {\n\n        component = addtocartbutton.dataset.component;\n        area = addtocartbutton.dataset.area;\n        itemid = addtocartbutton.dataset.itemid;\n\n        const cartitem = shoppingcart.querySelector('[id^=\"item-' + component + '-' + area + '-' + itemid + '\"]');\n\n        if (cartitem) {\n\n            addtocartbutton.classList.add('disabled');\n        } else {\n\n            addtocartbutton.classList.remove('disabled');\n        }\n    });\n}\n\n/**\n * Function to init Price Label and add Listener.\n * @param {*} userid\n */\nexport function initPriceLabel(userid) {\n\n    if (userid < 1) {\n        userid = 0;\n    }\n\n    const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n\n    if (checkbox) {\n        checkbox.addEventListener('change', event => {\n\n            if (event.currentTarget.checked) {\n                updateTotalPrice(userid, true);\n            } else {\n                updateTotalPrice(userid, false);\n            }\n        });\n    }\n}\n\n/**\n * We need to know if we are on the cashier page to transform userid if necessary.\n * @param {integer} userid\n * @returns {integer}\n */\nfunction transformUserIdForCashier(userid = null) {\n\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    if ((userid == CASHIERUSER || !(userid === 0 || userid === \"0\")) && oncashier > 0) {\n        userid = CASHIERUSER;\n    } else if (userid === null) {\n        userid = 0;\n    }\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    return userid;\n}"],"names":["userid","checkbox","document","querySelector","SELECTORS","addEventListener","event","currentTarget","checked","updateTotalPrice","interval","visbilityevent","expirationdate","initTimer","containers","querySelectorAll","forEach","container","element","target","classList","contains","dataset","component","area","itemid","deleteItem","visibilityState","reinit","paymentbutton","addZeroPriceListener","price","currency","buttoninit","selector","button","addtocartbutton","toggleActiveButtonState","initialized","preventDefault","stopPropagation","addItem","transformUserIdForCashier","call","methodname","args","done","data","oncashier","window","location","href","indexOf","iscashier","promises","push","Templates","renderForPromise","then","_ref","html","js","replaceNodeContents","catch","e","console","log","Promise","all","clearInterval","updateBadge","count","fail","ex","deleteAllItems","Number","isInteger","parseInt","success","itemname","message","usecredit","usecreditvalue","checkboxid","Math","random","toString","slice","labelareas","_ref2","labelarea","checkoutButton","add","remove","cost","dealWithZeroPrice","removeEventListener","key","strings","create","type","ModalFactory","types","SAVE_CANCEL","modal","setTitle","setBody","setSaveButtonText","getRoot","on","ModalEvents","save","show","startTimer","duration","display","minutes","seconds","timer","setInterval","textContent","countdownelement","delta","now","Date","getTime","badge","innerHTML","buttons","shoppingcart"],"mappings":";;;;;oMA+nB+BA,QAEvBA,OAAS,IACTA,OAAS,SAGPC,SAAWC,SAASC,cAAcC,8BAEpCH,UACAA,SAASI,iBAAiB,UAAUC,QAE5BA,MAAMC,cAAcC,QACpBC,iBAAiBT,QAAQ,GAEzBS,iBAAiBT,QAAQ,kSAxmB9BU,SAAW,oCACXC,gBAAiB,+CAStBP,0BAEe,sEAFfA,qBAGU,aAHVA,wBAIa,SAJbA,qBAKU,2DALVA,oBAMS,2DANTA,uBAOY,4CAPZA,uBAQY,6CARZA,6BASkB,2CATlBA,yBAUc,kBAVdA,yBAWc,sEAXdA,8BAYmB,wDAOHQ,iBAElBC,UAAUD,oBAGNE,WAAa,GACjBA,WAAaZ,SAASa,iBAAiBX,0BACjC,IAAMA,uBACN,IAAMA,wBAEZU,WAAWE,SAAQC,YAEfA,UAAUZ,iBAAiB,SAASC,cAG1BY,QAAUZ,MAAMa,UAElBD,QAAQE,UAAUC,SAASjB,sBAAuB,OAE5CJ,OAASkB,QAAQI,QAAQtB,OAASkB,QAAQI,QAAQtB,OAAS,EAC3DuB,UAAYL,QAAQI,QAAQC,UAC5BC,KAAON,QAAQI,QAAQE,KACvBC,OAASP,QAAQI,QAAQG,OAE/BC,WAAWD,OAAQF,UAAWC,KAAMxB,aAC7BkB,QAAQE,UAAUC,SAASjB,qDAEpBE,aAKJ,GAAlBK,gBACAT,SAASG,iBAAiB,oBAAoB,mCAC1CM,gBAAiB,EACgB,YAA7BT,SAASyB,iBACTC,kBAONC,cAAgB3B,SAASC,cAAcC,kCACzCyB,cAAe,CAKfC,qBAJa,CACTC,MAAOF,cAAcP,QAAQS,MAC7BC,SAAUH,cAAcP,QAAQU,mBAM/BC,WAAa,CAACR,OAAQF,UAAWC,YAGrCC,SAAWF,YAAcC,KAAM,OAC1BU,SAAW,sDACEhC,SAASa,iBACxBmB,UAEOlB,SAAQmB,eACTV,OAASU,OAAOb,QAAQG,OACxBD,KAAOW,OAAOb,QAAQE,KACtBD,UAAYY,OAAOb,QAAQC,UACjCU,WAAWR,OAAQF,UAAWC,SAOtCtB,SAASa,iBACL,uBACqBU,OADrB,sBAEwBF,UAFxB,iBAGmBC,KAHnB,6CAMIR,SAAQoB,kBAGZC,wBAAwBD,iBAGnBA,iBAA2D,SAAxCA,gBAAgBd,QAAQgB,cAGhDF,gBAAgBd,QAAQgB,YAAc,OAGtCF,gBAAgB/B,iBAAiB,SAASC,QAGtC8B,gBAAgBhB,UAAUC,SAAS,cAGnCf,MAAMiC,iBACNjC,MAAMkC,kBACNC,QAAQhB,OAAQF,UAAWC,oDAY1BI,OAAS,eAAC5B,8DAAS,EAE5BA,OAAS0C,0BAA0B1C,sBAE9B2C,KAAK,CAAC,CACPC,WAAY,8CACZC,KAAM,CACF7C,OAAAA,QAEJ8C,KAAM,SAASC,YAGLC,UAAYC,OAAOC,SAASC,KAAKC,QAAQ,eAG3CL,KAAKM,UADLL,UAAY,MAMZlC,WAAa,GAGbA,WADU,GAAVd,QAAe+C,KAAKM,UACPnD,SAASa,iBAAiBX,wBAE1BF,SAASa,iBAAiBX,0BACjC,IAAMA,4BAGZkD,SAAW,GAGfA,SAASC,KAAKC,mBAAUC,iBAAiB,0CAA2CV,MAAMW,MAAKC,WAACC,KAACA,KAADC,GAAOA,gBACnG/C,WAAWE,SAAQC,+BAEL6C,oBAAoB7C,UAAW2C,KAAMC,QAE5C,KACRE,OAAOC,IAENC,QAAQC,IAAIF,OAGhBG,QAAQC,IAAId,UAAUI,MAAK,KAGP,GAAV1D,QAAe+C,KAAKM,YACtBgB,cAAc3D,UACdG,UAAUkC,KAAKnC,gBAEf0D,YAAYvB,KAAKwB,QAGrBlC,0BAEA5B,iBAAiBT,WAGlB+D,OAAMC,IAELC,QAAQC,IAAIF,OAIpBQ,KAAMC,KAEFR,QAAQC,IAAI,MAAQO,sCAUnBC,eAAiB,mBACrB/B,KAAK,CAAC,CACPC,WAAY,iDACZC,KAAM,GAENC,KAAM,WACFlB,OAAO,IAEX4C,KAAM,SAASC,IAEXR,QAAQC,IAAIO,sDAKX/C,WAAa,CAACD,OAAQF,UAAWC,KAAMxB,UAEhDA,OAAS0C,0BAA0B1C,sBAE9B2C,KAAK,CAAC,CACPC,WAAY,kCACZC,KAAM,QACQpB,iBACGF,eACLC,YACExB,QAEd8C,KAAM,WAEFlB,OAAO5B,SAEXwE,KAAM,WAEF5C,OAAO5B,kDAKNyC,QAAU,CAAChB,OAAQF,UAAWC,YAEnCxB,OAAS0C,4BAERiC,OAAOC,UAAU5E,UAClBA,OAAS6E,SAAS7E,uBAGjB2C,KAAK,CAAC,CACPC,WAAY,+BACZC,KAAM,MACMrB,eACKD,iBACHE,cACAzB,QAEd8C,KAAM,SAASC,MAEXA,KAAKxB,UAAYA,UACjBwB,KAAKvB,KAAOA,KACZuB,KAAKtB,OAASA,OACdsB,KAAK/C,OAASA,OAEM,GAAhB+C,KAAK+B,QAWkB,GAAhB/B,KAAK+B,8BACF,cAAe,sBAAuB/B,KAAKgC,UAAUrB,MAAKsB,8CAC/CA,QAAS,cAE3BjB,OAAMC,IAELC,QAAQC,IAAIF,MAGhBpC,OAAO5B,6BAlBG,aAAc,uBAAuB0D,MAAKsB,8CAC/BA,QAAS,aAE3BjB,OAAMC,IAELC,QAAQC,IAAIF,OAiBxBQ,KAAM,SAASC,IAEXR,QAAQC,IAAI,QAASO,QAEzB,mCAQKhE,iBAAmB,eAACT,8DAAS,EAAGiF,2EAGnCjC,UAAYC,OAAOC,SAASC,KAAKC,QAAQ,eAE3CJ,UAAY,IACZhD,QAvTY,GA0TX2E,OAAOC,UAAU5E,UAClBA,OAAS6E,SAAS7E,SAKtBiF,UAAYA,UAAY,EAAI,gBAEvBtC,KAAK,CAAC,CACPC,WAAY,gCACZC,KAAM,CACF7C,OAAAA,OACAiF,UAAAA,WAEJnC,KAAM,SAASC,MAGW,GAAlBA,KAAKkC,UACLlC,KAAKmC,eAAiB,UAEtBnC,KAAKmC,eAAiB,GAG1BnC,KAAKoC,WAAaC,KAAKC,SAASC,SAAS,IAAIC,MAAM,EAAG,GAEtDxC,KAAK/C,OAASA,aAERwF,WAAatF,SAASa,iBAAiBX,6CAEnCqD,iBAAiB,kCAAmCV,MAAMW,MAAK+B,YAAC7B,KAACA,KAADC,GAAOA,iBAE7E2B,WAAWxE,SAAQ0E,+BACL5B,oBAAoB4B,UAAW9B,KAAMC,IAE/C/B,qBAAqBiB,UAGlB,KACRgB,OAAOC,IAENC,QAAQC,IAAIF,YAGV2B,eAAiBzF,SAASC,cAAcC,0BAC5B,GAAd2C,KAAKwB,MACLoB,eAAevE,UAAUwE,IAAI,YAE7BD,eAAevE,UAAUyE,OAAO,aAIxCrB,KAAM,SAASC,IAEXR,QAAQC,IAAI,QAASO,QAEzB,aAOC3C,qBAAqBiB,UAEtBlB,cAAgB3B,SAASC,cAAc,2CAEvC0B,cAAe,OAETE,MAAQgB,KAAKhB,MACbC,SAAWe,KAAKf,SAEtBH,cAAcP,QAAQwE,KAAO/D,MAAQ,IAAMC,SAE9B,GAATD,MAEAF,cAAcxB,iBAAiB,QAAS0F,mBAGxClE,cAAcmE,oBAAoB,QAASD,6BAS9CA,kBAAkBzF,WA0EYY,QAxEnCZ,MAAMkC,kBACNlC,MAAMiC,iBAuE6BrB,QArELZ,MAAMa,4BAuEzB,CACP,CAAC8E,IAAK,gCAAiC1E,UAAW,uBAClD,CAAC0E,IAAK,+BAAgC1E,UAAW,uBACjD,CAAC0E,IAAK,2BAA4B1E,UAAW,yBAE/CmC,MAAKwC,iCAEUC,OAAO,CAACC,KAAMC,uBAAaC,MAAMC,cAAc7C,MAAK8C,QAE7DA,MAAMC,SAASP,QAAQ,IACnBM,MAAME,QAAQR,QAAQ,IACtBM,MAAMG,kBAAkBT,QAAQ,IAChCM,MAAMI,UAAUC,GAAGC,sBAAYC,MAAM,iBAE3B/G,OAASkB,QAAQI,QAAQtB,OAE3BA,oCAGeA,OAAQ,MAI/BwG,MAAMQ,OACCR,SACZzC,OAAMC,IAELC,QAAQC,IAAIF,OAET,KACRD,OAAMC,IAELC,QAAQC,IAAIF,eA9FXiD,WAAWC,SAAUC,aAGdC,QACAC,QAFRC,MAAQJ,2BAGZxG,SAAW6G,aAAY,WAEnBH,QAAUvC,SAASyC,MAAQ,GAAI,IAC/BD,QAAUxC,SAASyC,MAAQ,GAAI,IAE/BF,QAAUA,QAAU,GAAK,IAAMA,QAAUA,QACzCC,QAAUA,QAAU,GAAK,IAAMA,QAAUA,QAEzCF,QAAQK,YAAcJ,QAAU,IAAMC,UAEhCC,MAAQ,IACV5C,iBAEAL,cAAc3D,aAEnB,cAUEG,gBAAUD,sEAAiB,WAE1B6G,iBAAmBvH,SAASC,cAAcC,yBAE3CqH,wBAID/G,UACA2D,cAAc3D,cAEdgH,MAAQ,EACRC,IAAMC,KAAKD,IAAI,OACnBA,KAAO,IAAIC,MAAQC,UAAY,IAC3BjH,iBACA8G,MAAS9G,eAAiB+G,KAE1BD,OAAS,GACTA,MAAQ,EACRD,iBAAiBrG,UAAUwE,IAAI,WACxB8B,MAAQ,IACfD,iBAAiBrG,UAAUyE,OAAO,UAClCoB,WAAWS,MAAOD,4BAkDjBnD,YAAYC,aAEXuD,MAAQ5H,SAASC,cAAcC,sBAEjCmE,MAAQ,GACRuD,MAAMC,UAAYxD,MAClBuD,MAAM1G,UAAUyE,OAAO,YAEvBiC,MAAMC,UAAYxD,MAClBuD,MAAM1G,UAAUwE,IAAI,oBAQnBvD,8BAAwBF,8DAAS,KAElCD,SAAW,GACXX,UAAY,KACZC,KAAO,KACPC,OAAS,KAGTU,QAGAV,OAASU,OAAOb,QAAQG,OACxBF,UAAYY,OAAOb,QAAQC,UAC3BC,KAAOW,OAAOb,QAAQE,KAEtBU,SACI,uBACqBT,OADrB,sBAEwBF,UAFxB,iBAGmBC,KAHnB,6CAQJU,SACA,sDAIE8F,QAAU9H,SAASa,iBAAiBmB,cAGtC+F,aAAe/H,SAASC,cAAcC,wBAErC6H,eACDA,aAAe/H,SAASC,cAAcC,4BAG1C4H,QAAQhH,SAAQoB,kBAEZb,UAAYa,gBAAgBd,QAAQC,UACpCC,KAAOY,gBAAgBd,QAAQE,KAC/BC,OAASW,gBAAgBd,QAAQG,OAEhBwG,aAAa9H,cAAc,cAAgBoB,UAAY,IAAMC,KAAO,IAAMC,OAAS,MAIhGW,gBAAgBhB,UAAUwE,IAAI,YAG9BxD,gBAAgBhB,UAAUyE,OAAO,wBAkCpCnD,gCAA0B1C,8DAAS,WAElCgD,UAAYC,OAAOC,SAASC,KAAKC,QAAQ,uBA7mB/B,GA+mBXpD,QAAsC,IAAXA,QAA2B,MAAXA,SAAoBgD,UAAY,EAC5EhD,QAhnBY,EAinBM,OAAXA,SACPA,OAAS,GAGR2E,OAAOC,UAAU5E,UAClBA,OAAS6E,SAAS7E,SAGfA"}