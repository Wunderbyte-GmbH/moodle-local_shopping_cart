{"version":3,"file":"cart.min.js","sources":["../src/cart.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\n\nimport {confirmPayment} from 'local_shopping_cart/cashier';\nimport {addDiscountEvent} from 'local_shopping_cart/cashier';\nimport {showNotification} from 'local_shopping_cart/notifications';\n\nimport {\n    get_strings as getStrings\n        }\n        from 'core/str';\n\nexport var interval = null;\nexport var visbilityevent = false;\n\n\n\n// This file inits the cart on every page, on checkout and cashier.\n// The cart is always loaed entirely and replaced via css.\n// The cashiers cart are identified in the DOM via userid -1 (CASHIERUSER).\n// The translation to real userids is done in the PHP only.\n\nconst CASHIERUSER = -1;\n\nconst SELECTORS = {\n    SHOPPING_CART_ITEM: '[data-item=\"shopping_cart_item\"]',\n    NAVBARCONTAINER: '#nav-shopping_cart-popover-container .shopping-cart-items-container',\n    TRASHCLASS: 'fa-trash-o',\n    BADGECOUNT: '#nav-shopping_cart-popover-container div.count-container',\n    COUNTDOWN: '#nav-shopping_cart-popover-container span.expirationdate',\n    CASHIERSCART: 'div.shopping-cart-cashier-items-container',\n    CHECKOUTCART: 'div.shopping-cart-checkout-items-container',\n    PRICELABELCHECKBOX: '.sc_price_label input.usecredit-checkbox',\n    PRICELABELAREA: '.sc_price_label',\n};\n\nexport const buttoninit = (itemid, component) => {\n\n    // Return all buttons with the add to cart functionality.\n    const buttons =\n    document.querySelectorAll(\n        'button'\n        + '[data-itemid=\"' + itemid + '\"]'\n        + '[data-component=\"' + component + '\"]'\n        + '[data-objecttable=\"local_shopping_cart\"');\n\n    buttons.forEach(addtocartbutton => {\n\n        // We need to check all the buttons.\n        toggleActiveButtonState(addtocartbutton);\n\n        // We only ever initialize the button once.\n        if (!addtocartbutton || addtocartbutton.dataset.initialized === 'true') {\n            return;\n        }\n        addtocartbutton.dataset.initialized = 'true';\n\n        // Add click eventlistern to oneself.\n        addtocartbutton.addEventListener('click', event => {\n\n        // If we find the disabled class, the click event is aborted.\n        if (addtocartbutton.classList.contains('disabled')) {\n            return;\n        }\n            event.preventDefault();\n            event.stopPropagation();\n            addItem(itemid, component);\n        });\n    });\n\n    return;\n};\n\n/**\n *\n * @param {*} expirationdate\n */\n\n export const init = (expirationdate) => {\n\n    // We might have more than one container.\n    let containers = [];\n    containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n        + \",\" + SELECTORS.CASHIERSCART\n        + \",\" + SELECTORS.CHECKOUTCART);\n\n    // eslint-disable-next-line no-console\n    console.log(containers);\n\n    containers.forEach(container => {\n\n        container.addEventListener('click', event => {\n\n            // Decide the target of the click.\n            const element = event.target;\n\n            if (element.classList.contains(SELECTORS.TRASHCLASS))  {\n\n                const userid = element.dataset.userid ? element.dataset.userid : 0;\n                const component = element.dataset.component;\n                const itemid = element.dataset.itemid;\n\n                deleteItem(itemid, component, userid);\n            }\n        });\n    });\n\n    if (visbilityevent == false) {\n        document.addEventListener(\"visibilitychange\", function() {\n            visbilityevent = true;\n            if (document.visibilityState === 'visible') {\n                reinit();\n            }\n        });\n    }\n\n    return;\n\n    // countdownelement = document.querySelector('.expirationdate');\n    initTimer(expirationdate);\n    if (visbilityevent == false) {\n        let items = document.querySelectorAll(SELECTORS.SHOPPING_CART_ITEM + ' .fa-trash-o');\n        items.forEach(item => {\n            addDeleteevent(item);\n        });\n\n        items = document.querySelectorAll(SELECTORS.SHOPPING_CART_ITEM + ' .fa-eur');\n        items.forEach(item => {\n            addDiscountEvent(item);\n        });\n\n    }\n    updateTotalPrice();\n};\n\n/**\n * Function to reload the cart. We can pass on the certain component if we need to make sure that not only the cart is reloaded.\n * This is the case when adding or deleting a certain item and a special button has to be reset.\n * @param {*} userid\n */\nexport const reinit = (userid = 0) => {\n\n    // eslint-disable-next-line no-console\n    console.log('reinit', userid);\n\n    userid = transformUserIdForCashier(userid);\n\n    // eslint-disable-next-line no-console\n    console.log('reinit', userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_shopping_cart_items\",\n        args: {\n            userid\n        },\n        done: function(data) {\n\n            // If we are on the cashier page, we add the possiblity to add a discount to the cart items.\n            const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n            // eslint-disable-next-line no-console\n            console.log(oncashier);\n            if (oncashier > 0) {\n                data.iscashier = true;\n            } else {\n                data.iscashier = false;\n            }\n\n            let containers = [];\n\n            // eslint-disable-next-line no-console\n            console.log(userid, data.iscashier);\n\n            if (userid != 0 && data.iscashier) {\n                containers = document.querySelectorAll(SELECTORS.CASHIERSCART);\n            } else {\n                containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n                    + \",\" + SELECTORS.CHECKOUTCART);\n            }\n\n            let promises = [];\n\n            // eslint-disable-next-line no-console\n            console.log(containers);\n\n            // We render for promice for all the containers.\n            promises.push(Templates.renderForPromise('local_shopping_cart/shopping_cart_items', data).then(({html, js}) => {\n                containers.forEach(container => {\n                // We know we will always find the Navbar, so we can do this right away.\n                    Templates.replaceNodeContents(container, html, js);\n                });\n                return true;\n            }).catch((e) => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            Promise.all(promises).then(() => {\n\n                // If we are on the cashier page, we add the possiblity to add a discount to the cart items.\n                if (!(userid != 0 && data.iscashier)) {\n                    clearInterval(interval);\n                    initTimer(data.expirationdate);\n\n                    updateBadge(data.count);\n                }\n\n                toggleActiveButtonState();\n\n                updateTotalPrice(userid);\n\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n        },\n        fail: ex => {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};\n\nexport const deleteAllItems = () => {\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_all_items_from_cart\",\n        args: {\n        },\n        done: function() {\n            let item = document.querySelectorAll(SELECTORS.SHOPPING_CART_ITEM);\n            item.forEach(item => {\n                if (item) {\n                    item.remove();\n                }\n            });\n\n            updateTotalPrice();\n\n            let itemcount1 = document.getElementById(\"countbadge\");\n            let itemcount2 = document.getElementById(\"itemcount\");\n\n            itemcount1.innerHTML = 0;\n            itemcount2.innerHTML = 0;\n            itemcount2.classList.add(\"hidden\");\n\n            // Make sure addtocartbutton active againe once the item is removed from the shopping cart.\n            const addtocartbutton = document.querySelectorAll('[id^=btn-].disabled');\n            addtocartbutton.forEach(btn => {\n                if (btn) {\n                    btn.classList.remove('disabled');\n                }\n            });\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(ex);\n        },\n    }]);\n};\n\nexport const deleteItem = (itemid, component, userid) => {\n\n    userid = transformUserIdForCashier(userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_item\",\n        args: {\n            'itemid': itemid,\n            'component': component,\n            'userid': userid\n        },\n        done: function() {\n\n            reinit(userid);\n        },\n        fail: function() {\n\n            reinit(userid);\n        },\n    }]);\n};\n\nexport const addItem = (itemid, component) => {\n\n    let userid = transformUserIdForCashier();\n\n    if (!Number.isInteger(userid)) {\n        // eslint-disable-next-line no-console\n        console.log('change type');\n\n        userid = parseInt(userid);\n    } else {\n        // eslint-disable-next-line no-console\n        console.log('type ok');\n    }\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_add_item\",\n        args: {\n            'component': component,\n            'itemid': itemid,\n            'userid': userid\n        },\n        done: function(data) {\n\n            // eslint-disable-next-line no-console\n            console.log(data);\n            data.component = component;\n            data.itemid = itemid;\n            data.userid = userid; // For the mustache template, we need to obey structure.\n\n            if (data.success != 1) {\n\n                // TODO: FIX messages!\n\n                showNotification(\"Cart is full\", 'danger');\n\n                return;\n            } else if (data.success == 1) {\n\n                showNotification(data.itemname + \" added to cart\", 'success');\n\n                reinit(userid);\n            }\n\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n *\n * @param {*} userid\n * @param {*} usecredit\n */\nexport const updateTotalPrice = (userid = 0, usecredit = true) => {\n\n    // eslint-disable-next-line no-console\n    console.log('updatetotalprice');\n\n    // On cashier, update price must always be for cashier user.\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    if (oncashier > 0) {\n        userid = CASHIERUSER;\n    }\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    // We must make sure the checkbox is only once visible on the site.\n    // const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n\n    usecredit = usecredit ? 1 : 0;\n\n    // eslint-disable-next-line no-console\n    console.log('usecredit before ajax', usecredit, userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_price\",\n        args: {\n            userid,\n            usecredit\n        },\n        done: function(data) {\n\n             // We take the usecredit value we receive from the server.\n             if (data.usecredit == 1) {\n                data.usecreditvalue = 'checked';\n            } else {\n                data.usecreditvalue = '';\n            }\n\n            // eslint-disable-next-line no-console\n            console.log(data, data.usecreditvalue, userid);\n\n            data.checkboxid = Math.random().toString(36).slice(2, 5);\n\n            data.userid = userid;\n\n            const labelareas = document.querySelectorAll(SELECTORS.PRICELABELAREA);\n\n            // eslint-disable-next-line no-console\n            console.log(labelareas);\n\n            Templates.renderForPromise('local_shopping_cart/price_label', data).then(({html, js}) => {\n\n                Templates.replaceNodeContents(SELECTORS.PRICELABELAREA, html, js);\n\n                return true;\n            }).catch((e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            let paymentbutton = document.querySelector(\".shopping_cart_payment_region button\");\n\n            if (paymentbutton) {\n\n                const price = data.price;\n                const currency = data.currency;\n\n                // eslint-disable-next-line no-console\n                console.log(\"paymentbutton\", price, currency);\n\n                paymentbutton.dataset.cost = price + \" \" + currency;\n\n                if (price == 0) {\n                    // eslint-disable-next-line no-console\n                    console.log('price is 0');\n                    paymentbutton.addEventListener('click', dealWithZeroPrice);\n                } else {\n                    // eslint-disable-next-line no-console\n                    console.log('price is not 0');\n                    paymentbutton.removeEventListener('click', dealWithZeroPrice);\n                }\n            }\n\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n *\n * @param {*} event\n */\nfunction dealWithZeroPrice(event) {\n\n        event.stopPropagation();\n        event.preventDefault();\n\n        confirmZeroPriceCheckoutModal(event.target);\n}\n\n/**\n * Delete Event.\n * @param {HTMLElement} item\n * @param {int} userid\n */\nfunction addDeleteevent(item, userid = 0) {\n    if (userid !== 0) {\n        item.dataset.userid = '' + userid;\n    }\n    item.addEventListener('click', deleteEvent);\n}\n\n/**\n * Function called in listener.\n */\nfunction deleteEvent() {\n        const item = this;\n        // eslint-disable-next-line no-console\n        console.log('item', item);\n        // Item comes as #item-booking-213123.\n        const itemid = item.dataset.itemid;\n        const component = item.dataset.component;\n        let userid = item.dataset.userid;\n        if (!userid) {\n            userid = 0;\n        }\n        deleteItem(itemid, component, userid);\n    }\n\n/**\n * Start the timer.\n *\n * @param {integer} duration\n * @param {integer} display\n */\nfunction startTimer(duration, display) {\n\n    var timer = duration,\n                minutes,\n                seconds;\n    interval = setInterval(function() {\n\n        minutes = parseInt(timer / 60, 10);\n        seconds = parseInt(timer % 60, 10);\n\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n        display.textContent = minutes + \":\" + seconds;\n\n        if (--timer < 0) {\n            deleteAllItems();\n\n            clearInterval(interval);\n        }\n    }, 1000);\n}\n\n\n/**\n * Initialize Timer.\n *\n * @param {integer} expirationdate\n *\n */\nfunction initTimer(expirationdate = null) {\n\n    const countdownelement = document.querySelector(SELECTORS.COUNTDOWN);\n    if (interval) {\n        clearInterval(interval);\n    }\n    let delta = 0;\n    let now = Date.now('UTC');\n    now = (new Date()).getTime() / 1000;\n    if (expirationdate) {\n        delta = (expirationdate - now);\n    }\n    if (delta <= 0) {\n        delta = 0;\n        countdownelement.classList.add(\"hidden\");\n    } else if (delta > 0) {\n        countdownelement.classList.remove(\"hidden\");\n        startTimer(delta, countdownelement);\n    }\n}\n\n/**\n *\n * @param {*} element\n */\n function confirmZeroPriceCheckoutModal(element) {\n\n    getStrings([\n        {key: 'confirmzeropricecheckouttitle', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckoutbody', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckout', component: 'local_shopping_cart'}\n    ]\n    ).then(strings => {\n\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n                modal.setBody(strings[1]);\n                modal.setSaveButtonText(strings[2]);\n                modal.getRoot().on(ModalEvents.save, function() {\n\n                    const userid = element.dataset.userid;\n\n                    // eslint-disable-next-line no-console\n                    console.log(userid);\n\n                    if (userid) {\n                        confirmPayment(userid);\n                    }\n                });\n\n                modal.show();\n                return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n * Function to update the page in the nav bar.\n * @param {*} count\n */\nfunction updateBadge(count) {\n\n    const badge = document.querySelector(SELECTORS.BADGECOUNT);\n\n    if (count > 0) {\n        badge.innerHTML = count;\n        badge.classList.remove('hidden');\n    } else {\n        badge.innerHTML = count;\n        badge.classList.add('hidden');\n    }\n}\n\n/**\n * Function to toggle the active state.\n * @param {*} button\n */\nfunction toggleActiveButtonState(button = null) {\n\n    let selector = '';\n    let component = null;\n    let itemid = null;\n\n    // If we have a button, we only look for this particular itemid.\n    if (button) {\n\n        // We'll find the right variables in the DOM.\n        itemid = button.dataset.itemid;\n        component = button.dataset.component;\n\n        selector =\n            'button'\n            + '[data-itemid=\"' + itemid + '\"]'\n            + '[data-component=\"' + component + '\"]'\n            + '[data-objecttable=\"local_shopping_cart\"';\n    } else {\n        // As we might have more than one of these buttons, we always need to look for all of them in the document.\n        // We will update for all the buttons we find.\n        selector =\n        'button'\n        + '[data-objecttable=\"local_shopping_cart\"';\n    }\n\n    const buttons = document.querySelectorAll(selector);\n\n    // Make sure item is not yet in shopping cart. If so, add disabled class.\n    let shoppingcart = document.querySelector(SELECTORS.CASHIERSCART);\n\n    if (!shoppingcart) {\n        shoppingcart = document.querySelector(SELECTORS.NAVBARCONTAINER);\n    }\n\n    buttons.forEach(addtocartbutton => {\n\n        component = addtocartbutton.dataset.component;\n        itemid = addtocartbutton.dataset.itemid;\n\n        const cartitem = shoppingcart.querySelector('[id^=\"item-' + component + '-' + itemid + '\"]');\n\n        if (cartitem) {\n\n            addtocartbutton.classList.add('disabled');\n        } else {\n\n            addtocartbutton.classList.remove('disabled');\n        }\n    });\n}\n\n/**\n * Function to init Price Label and add Listener.\n * @param {*} userid\n */\nexport function initPriceLabel(userid) {\n\n    // eslint-disable-next-line no-console\n    console.log('initPriceLabel', userid);\n\n    if (userid < 1) {\n        userid = 0;\n    }\n\n    const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n\n    if (checkbox) {\n        checkbox.addEventListener('change', event => {\n\n            // eslint-disable-next-line no-console\n            console.log(event);\n\n            if (event.currentTarget.checked) {\n                updateTotalPrice(userid, true);\n            } else {\n                updateTotalPrice(userid, false);\n            }\n        });\n    }\n}\n\n/**\n * We need to know if we are on the cashier page to transform userid if necessary.\n * @param {integer} userid\n * @returns {integer}\n */\nfunction transformUserIdForCashier(userid = null) {\n\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    // eslint-disable-next-line no-console\n    console.log(userid, oncashier);\n\n    if ((userid == CASHIERUSER || !(userid === 0 || userid === \"0\")) && oncashier > 0) {\n        userid = CASHIERUSER;\n    } else if (userid === null) {\n        userid = 0;\n    }\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(userid, oncashier);\n\n    return userid;\n}"],"names":["userid","console","log","checkbox","document","querySelector","SELECTORS","addEventListener","event","currentTarget","checked","updateTotalPrice","interval","visbilityevent","itemid","component","querySelectorAll","forEach","addtocartbutton","toggleActiveButtonState","dataset","initialized","classList","contains","preventDefault","stopPropagation","addItem","expirationdate","containers","container","element","target","deleteItem","visibilityState","reinit","transformUserIdForCashier","call","methodname","args","done","data","oncashier","window","location","href","indexOf","iscashier","promises","push","Templates","renderForPromise","then","_ref","html","js","replaceNodeContents","catch","e","Promise","all","clearInterval","initTimer","updateBadge","count","fail","ex","deleteAllItems","item","remove","itemcount1","getElementById","itemcount2","innerHTML","add","btn","Number","isInteger","parseInt","success","itemname","usecredit","usecreditvalue","checkboxid","Math","random","toString","slice","labelareas","_ref2","paymentbutton","price","currency","cost","dealWithZeroPrice","removeEventListener","key","strings","create","type","ModalFactory","types","SAVE_CANCEL","modal","setTitle","setBody","setSaveButtonText","getRoot","on","ModalEvents","save","show","startTimer","duration","display","minutes","seconds","timer","setInterval","textContent","countdownelement","delta","now","Date","getTime","badge","button","selector","buttons","shoppingcart"],"mappings":";;;;;oMAkqB+BA,QAG3BC,QAAQC,IAAI,iBAAkBF,QAE1BA,OAAS,IACTA,OAAS,SAGPG,SAAWC,SAASC,cAAcC,8BAEpCH,UACAA,SAASI,iBAAiB,UAAUC,QAGhCP,QAAQC,IAAIM,OAERA,MAAMC,cAAcC,QACpBC,iBAAiBX,QAAQ,GAEzBW,iBAAiBX,QAAQ,kSAlpB9BY,SAAW,oCACXC,gBAAiB,+CAWtBP,6BACkB,mCADlBA,0BAEe,sEAFfA,qBAGU,aAHVA,qBAIU,2DAJVA,oBAKS,2DALTA,uBAMY,4CANZA,uBAOY,6CAPZA,6BAQkB,2CARlBA,yBASc,sCAGM,CAACQ,OAAQC,aAI/BX,SAASY,iBACL,uBACqBF,OADrB,sBAEwBC,UAFxB,6CAKIE,SAAQC,kBAGZC,wBAAwBD,iBAGnBA,iBAA2D,SAAxCA,gBAAgBE,QAAQC,cAGhDH,gBAAgBE,QAAQC,YAAc,OAGtCH,gBAAgBX,iBAAiB,SAASC,QAGtCU,gBAAgBI,UAAUC,SAAS,cAGnCf,MAAMgB,iBACNhB,MAAMiB,kBACNC,QAAQZ,OAAQC,kCAYNY,qBAGdC,WAAa,GACjBA,WAAaxB,SAASY,iBAAiBV,0BACjC,IAAMA,uBACN,IAAMA,wBAGZL,QAAQC,IAAI0B,YAEZA,WAAWX,SAAQY,YAEfA,UAAUtB,iBAAiB,SAASC,cAG1BsB,QAAUtB,MAAMuB,UAElBD,QAAQR,UAAUC,SAASjB,sBAAwB,OAE7CN,OAAS8B,QAAQV,QAAQpB,OAAS8B,QAAQV,QAAQpB,OAAS,EAC3De,UAAYe,QAAQV,QAAQL,UAC5BD,OAASgB,QAAQV,QAAQN,OAE/BkB,WAAWlB,OAAQC,UAAWf,eAKpB,GAAlBa,gBACAT,SAASG,iBAAiB,oBAAoB,mCAC1CM,gBAAiB,EACgB,YAA7BT,SAAS6B,iBACTC,mBA6BHA,OAAS,eAAClC,8DAAS,EAG5BC,QAAQC,IAAI,SAAUF,QAEtBA,OAASmC,0BAA0BnC,QAGnCC,QAAQC,IAAI,SAAUF,sBAEjBoC,KAAK,CAAC,CACPC,WAAY,8CACZC,KAAM,CACFtC,OAAAA,QAEJuC,KAAM,SAASC,YAGLC,UAAYC,OAAOC,SAASC,KAAKC,QAAQ,eAG/C5C,QAAQC,IAAIuC,WAERD,KAAKM,UADLL,UAAY,MAMZb,WAAa,GAGjB3B,QAAQC,IAAIF,OAAQwC,KAAKM,WAGrBlB,WADU,GAAV5B,QAAewC,KAAKM,UACP1C,SAASY,iBAAiBV,wBAE1BF,SAASY,iBAAiBV,0BACjC,IAAMA,4BAGZyC,SAAW,GAGf9C,QAAQC,IAAI0B,YAGZmB,SAASC,KAAKC,mBAAUC,iBAAiB,0CAA2CV,MAAMW,MAAKC,WAACC,KAACA,KAADC,GAAOA,gBACnG1B,WAAWX,SAAQY,+BAEL0B,oBAAoB1B,UAAWwB,KAAMC,QAE5C,KACRE,OAAOC,IAENxD,QAAQC,IAAIuD,OAGhBC,QAAQC,IAAIZ,UAAUI,MAAK,KAGP,GAAVnD,QAAewC,KAAKM,YACtBc,cAAchD,UACdiD,UAAUrB,KAAKb,gBAEfmC,YAAYtB,KAAKuB,QAGrB5C,0BAEAR,iBAAiBX,WAGlBwD,OAAMC,IAELxD,QAAQC,IAAIuD,OAIpBO,KAAMC,KAEFhE,QAAQC,IAAI,MAAQ+D,sCAKnBC,eAAiB,mBACrB9B,KAAK,CAAC,CACPC,WAAY,iDACZC,KAAM,GAENC,KAAM,WACSnC,SAASY,iBAAiBV,8BAChCW,SAAQkD,OACLA,MACAA,KAAKC,YAIbzD,uBAEI0D,WAAajE,SAASkE,eAAe,cACrCC,WAAanE,SAASkE,eAAe,aAEzCD,WAAWG,UAAY,EACvBD,WAAWC,UAAY,EACvBD,WAAWjD,UAAUmD,IAAI,UAGDrE,SAASY,iBAAiB,uBAClCC,SAAQyD,MAChBA,KACAA,IAAIpD,UAAU8C,OAAO,gBAIjCJ,KAAM,SAASC,IAEXhE,QAAQC,IAAI+D,sDAKXjC,WAAa,CAAClB,OAAQC,UAAWf,UAE1CA,OAASmC,0BAA0BnC,sBAE9BoC,KAAK,CAAC,CACPC,WAAY,kCACZC,KAAM,QACQxB,iBACGC,iBACHf,QAEduC,KAAM,WAEFL,OAAOlC,SAEXgE,KAAM,WAEF9B,OAAOlC,kDAKN0B,QAAU,CAACZ,OAAQC,iBAExBf,OAASmC,4BAERwC,OAAOC,UAAU5E,QAOlBC,QAAQC,IAAI,YALZD,QAAQC,IAAI,eAEZF,OAAS6E,SAAS7E,uBAMjBoC,KAAK,CAAC,CACPC,WAAY,+BACZC,KAAM,WACWvB,iBACHD,cACAd,QAEduC,KAAM,SAASC,MAGXvC,QAAQC,IAAIsC,MACZA,KAAKzB,UAAYA,UACjByB,KAAK1B,OAASA,OACd0B,KAAKxC,OAASA,OAEM,GAAhBwC,KAAKsC,QAOkB,GAAhBtC,KAAKsC,8CAEKtC,KAAKuC,SAAW,iBAAkB,WAEnD7C,OAAOlC,6CAPU,eAAgB,WAWzCgE,KAAM,SAASC,IAEXhE,QAAQC,IAAI,QAAS+D,QAEzB,mCAQKtD,iBAAmB,eAACX,8DAAS,EAAGgF,qEAGzC/E,QAAQC,IAAI,0BAGNuC,UAAYC,OAAOC,SAASC,KAAKC,QAAQ,eAE3CJ,UAAY,IACZzC,QAvUY,GA0UX2E,OAAOC,UAAU5E,UAClBA,OAAS6E,SAAS7E,SAMtBgF,UAAYA,UAAY,EAAI,EAG5B/E,QAAQC,IAAI,wBAAyB8E,UAAWhF,sBAE3CoC,KAAK,CAAC,CACPC,WAAY,gCACZC,KAAM,CACFtC,OAAAA,OACAgF,UAAAA,WAEJzC,KAAM,SAASC,MAGY,GAAlBA,KAAKwC,UACNxC,KAAKyC,eAAiB,UAEtBzC,KAAKyC,eAAiB,GAI1BhF,QAAQC,IAAIsC,KAAMA,KAAKyC,eAAgBjF,QAEvCwC,KAAK0C,WAAaC,KAAKC,SAASC,SAAS,IAAIC,MAAM,EAAG,GAEtD9C,KAAKxC,OAASA,aAERuF,WAAanF,SAASY,iBAAiBV,0BAG7CL,QAAQC,IAAIqF,+BAEFrC,iBAAiB,kCAAmCV,MAAMW,MAAKqC,YAACnC,KAACA,KAADC,GAAOA,oCAEnEC,oBAAoBjD,yBAA0B+C,KAAMC,KAEvD,KACRE,OAAOC,IAENxD,QAAQC,IAAIuD,UAGZgC,cAAgBrF,SAASC,cAAc,2CAEvCoF,cAAe,OAETC,MAAQlD,KAAKkD,MACbC,SAAWnD,KAAKmD,SAGtB1F,QAAQC,IAAI,gBAAiBwF,MAAOC,UAEpCF,cAAcrE,QAAQwE,KAAOF,MAAQ,IAAMC,SAE9B,GAATD,OAEAzF,QAAQC,IAAI,cACZuF,cAAclF,iBAAiB,QAASsF,qBAGxC5F,QAAQC,IAAI,kBACZuF,cAAcK,oBAAoB,QAASD,sBAKvD7B,KAAM,SAASC,IAEXhE,QAAQC,IAAI,QAAS+D,QAEzB,aAOC4B,kBAAkBrF,WAkGasB,QAhGhCtB,MAAMiB,kBACNjB,MAAMgB,iBA+F0BM,QA7FFtB,MAAMuB,4BA+F7B,CACP,CAACgE,IAAK,gCAAiChF,UAAW,uBAClD,CAACgF,IAAK,+BAAgChF,UAAW,uBACjD,CAACgF,IAAK,2BAA4BhF,UAAW,yBAE/CoC,MAAK6C,iCAEUC,OAAO,CAACC,KAAMC,uBAAaC,MAAMC,cAAclD,MAAKmD,QAE7DA,MAAMC,SAASP,QAAQ,IACnBM,MAAME,QAAQR,QAAQ,IACtBM,MAAMG,kBAAkBT,QAAQ,IAChCM,MAAMI,UAAUC,GAAGC,sBAAYC,MAAM,iBAE3B7G,OAAS8B,QAAQV,QAAQpB,OAG/BC,QAAQC,IAAIF,QAERA,oCACeA,WAIvBsG,MAAMQ,OACCR,SACZ9C,OAAMC,IAELxD,QAAQC,IAAIuD,OAET,KACRD,OAAMC,IAELxD,QAAQC,IAAIuD,eA1FXsD,WAAWC,SAAUC,aAGdC,QACAC,QAFRC,MAAQJ,2BAGZpG,SAAWyG,aAAY,WAEnBH,QAAUrC,SAASuC,MAAQ,GAAI,IAC/BD,QAAUtC,SAASuC,MAAQ,GAAI,IAE/BF,QAAUA,QAAU,GAAK,IAAMA,QAAUA,QACzCC,QAAUA,QAAU,GAAK,IAAMA,QAAUA,QAEzCF,QAAQK,YAAcJ,QAAU,IAAMC,UAEhCC,MAAQ,IACVlD,iBAEAN,cAAchD,aAEnB,cAUEiD,gBAAUlC,sEAAiB,WAE1B4F,iBAAmBnH,SAASC,cAAcC,qBAC5CM,UACAgD,cAAchD,cAEd4G,MAAQ,EACRC,IAAMC,KAAKD,IAAI,OACnBA,KAAO,IAAIC,MAAQC,UAAY,IAC3BhG,iBACA6F,MAAS7F,eAAiB8F,KAE1BD,OAAS,GACTA,MAAQ,EACRD,iBAAiBjG,UAAUmD,IAAI,WACxB+C,MAAQ,IACfD,iBAAiBjG,UAAU8C,OAAO,UAClC2C,WAAWS,MAAOD,4BAmDjBzD,YAAYC,aAEX6D,MAAQxH,SAASC,cAAcC,sBAEjCyD,MAAQ,GACR6D,MAAMpD,UAAYT,MAClB6D,MAAMtG,UAAU8C,OAAO,YAEvBwD,MAAMpD,UAAYT,MAClB6D,MAAMtG,UAAUmD,IAAI,oBAQnBtD,8BAAwB0G,8DAAS,KAElCC,SAAW,GACX/G,UAAY,KACZD,OAAS,KAGT+G,QAGA/G,OAAS+G,OAAOzG,QAAQN,OACxBC,UAAY8G,OAAOzG,QAAQL,UAE3B+G,SACI,uBACqBhH,OADrB,sBAEwBC,UAFxB,6CAOJ+G,SACA,sDAIEC,QAAU3H,SAASY,iBAAiB8G,cAGtCE,aAAe5H,SAASC,cAAcC,wBAErC0H,eACDA,aAAe5H,SAASC,cAAcC,4BAG1CyH,QAAQ9G,SAAQC,kBAEZH,UAAYG,gBAAgBE,QAAQL,UACpCD,OAASI,gBAAgBE,QAAQN,OAEhBkH,aAAa3H,cAAc,cAAgBU,UAAY,IAAMD,OAAS,MAInFI,gBAAgBI,UAAUmD,IAAI,YAG9BvD,gBAAgBI,UAAU8C,OAAO,wBAwCpCjC,gCAA0BnC,8DAAS,WAElCyC,UAAYC,OAAOC,SAASC,KAAKC,QAAQ,sBAG/C5C,QAAQC,IAAIF,OAAQyC,aAxpBJ,GA0pBXzC,QAAsC,IAAXA,QAA2B,MAAXA,SAAoByC,UAAY,EAC5EzC,QA3pBY,EA4pBM,OAAXA,SACPA,OAAS,GAGR2E,OAAOC,UAAU5E,UAClBA,OAAS6E,SAAS7E,SAItBC,QAAQC,IAAIF,OAAQyC,WAEbzC"}