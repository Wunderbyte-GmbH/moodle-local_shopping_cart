{"version":3,"file":"cart.min.js","sources":["../src/cart.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\n\nimport {confirmPayment} from 'local_shopping_cart/cashier';\nimport {discountModal} from 'local_shopping_cart/cashier';\nimport {showNotification} from 'local_shopping_cart/notifications';\n\nimport {\n    get_strings as getStrings,\n    get_string as getString\n        }\n        from 'core/str';\n\nexport var interval = null;\nexport var visbilityevent = false;\n\n// This file inits the cart on every page, on checkout and cashier.\n// The cart is always loaed entirely and replaced via css.\n// The cashiers cart are identified in the DOM via userid -1 (CASHIERUSER).\n// The translation to real userids is done in the PHP only.\n\nconst CASHIERUSER = -1;\n\nconst SELECTORS = {\n    SHOPPING_CART_ITEM: '[data-item=\"shopping_cart_item\"]',\n    NAVBARCONTAINER: '#nav-shopping_cart-popover-container .shopping-cart-items-container',\n    TRASHCLASS: 'fa-trash-o',\n    DISCOUNTCLASS: 'shoppingcart-discount-icon',\n    BADGECOUNT: '#nav-shopping_cart-popover-container div.count-container',\n    COUNTDOWN: '#nav-shopping_cart-popover-container span.expirationdate',\n    CASHIERSCART: 'div.shopping-cart-cashier-items-container',\n    CHECKOUTCART: 'div.shopping-cart-checkout-items-container',\n    PRICELABELCHECKBOX: '.sc_price_label input.usecredit-checkbox',\n    INSTALLMENTSCHECKBOX: '.sc_price_label input.useinstallments-checkbox',\n    PRICELABELAREA: '.sc_price_label',\n    CHECKOUTBUTTON: '#nav-shopping_cart-popover-container #shopping-cart-checkout-button',\n    PAYMENTREGIONBUTTON: 'div.shopping_cart_payment_region button',\n    ACCEPTTERMS: '#accepttermsnandconditions',\n};\n/**\n *\n * @param {*} expirationdate\n */\n\n export const init = (expirationdate, nowdate) => {\n\n    initTimer(expirationdate, nowdate);\n\n    // We might have more than one container.\n    let containers = [];\n    containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n        + \",\" + SELECTORS.CASHIERSCART\n        + \",\" + SELECTORS.CHECKOUTCART);\n\n    containers.forEach(container => {\n\n        container.addEventListener('click', event => {\n\n            // Decide the target of the click.\n            const element = event.target;\n\n            if (element.classList.contains(SELECTORS.TRASHCLASS)) {\n\n                const userid = element.dataset.userid ? element.dataset.userid : 0;\n                const component = element.dataset.component;\n                const area = element.dataset.area;\n                const itemid = element.dataset.itemid;\n\n                deleteItem(itemid, component, area, userid);\n            } else if (element.classList.contains(SELECTORS.DISCOUNTCLASS)) {\n\n                discountModal(event);\n            }\n        });\n    });\n\n    // Re-init cart on page reload or navigation to another page - required for 2-digit price precision visibility.\n    document.addEventListener(\"readystatechange\", () => {\n        if (document.readyState !== 'loading') {\n            reinit();\n        }\n    });\n\n    if (visbilityevent == false) {\n        document.addEventListener(\"visibilitychange\", function() {\n            visbilityevent = true;\n            if (document.visibilityState === 'visible') {\n                reinit();\n            }\n        });\n    }\n\n    // Initially, we need to add the zeroPriceListener once.\n    const paymentbutton = document.querySelector(SELECTORS.PAYMENTREGIONBUTTON);\n    if (paymentbutton) {\n        const data = {\n            price: paymentbutton.dataset.price,\n            currency: paymentbutton.dataset.currency,\n        };\n        addZeroPriceListener(data);\n    }\n\n    const accepttermsbutton = document.querySelector(SELECTORS.ACCEPTTERMS);\n    if (accepttermsbutton && paymentbutton) {\n        addAcceptTermsListener(accepttermsbutton, paymentbutton);\n    }\n};\n\nexport const buttoninit = (itemid, component, area) => {\n\n    // If we don't have an itemid, we need to look for all the buttons.\n    if (!itemid || !component || !area) {\n        const selector = '[data-objecttable=\"local_shopping_cart\"';\n        const allbuttons = document.querySelectorAll(\n            selector);\n\n        allbuttons.forEach(button => {\n            const itemid = button.dataset.itemid;\n            const area = button.dataset.area;\n            const component = button.dataset.component;\n            buttoninit(itemid, component, area);\n        });\n        return;\n    }\n\n    // Return all buttons with the add to cart functionality.\n    const buttons =\n    document.querySelectorAll(\n        'div'\n        + '[data-itemid=\"' + itemid + '\"]'\n        + '[data-component=\"' + component + '\"]'\n        + '[data-area=\"' + area + '\"]'\n        + '[data-objecttable=\"local_shopping_cart\"');\n\n    buttons.forEach(addtocartbutton => {\n\n        // We need to check all the buttons.\n        toggleActiveButtonState(addtocartbutton);\n\n        // We only ever initialize the button once.\n        if (!addtocartbutton || addtocartbutton.dataset.initialized === 'true') {\n            return;\n        }\n        addtocartbutton.dataset.initialized = 'true';\n\n        // If the button has the nojs flag, we don't add the listener at all.\n\n        if (addtocartbutton.dataset.nojs) {\n            return;\n        }\n\n        // Add click eventlistern to oneself.\n        addtocartbutton.addEventListener('click', event => {\n\n            if (addtocartbutton.dataset.blocked == 'true') {\n                return;\n            }\n\n            // If we find the disabled class, the click event is aborted.\n            if (addtocartbutton.classList.contains('disabled')) {\n                event.preventDefault();\n                event.stopPropagation();\n                // DeleteItem(itemid, component, area);\n            } else {\n                // Event.preventDefault();\n                // Event.stopPropagation();\n                addItem(itemid, component, area);\n            }\n        });\n    });\n\n    return;\n};\n\n/**\n * Function to reload the cart. We can pass on the certain component if we need to make sure that not only the cart is reloaded.\n * This is the case when adding or deleting a certain item and a special button has to be reset.\n * @param {*} userid\n */\nexport const reinit = (userid = 0) => {\n\n    userid = transformUserIdForCashier(userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_shopping_cart_items\",\n        args: {\n            userid\n        },\n        done: function(data) {\n\n            // If we are on the cashier page, we add the possibility to add a discount to the cart items.\n            const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n            if (oncashier > 0) {\n                data.iscashier = true;\n            } else {\n                data.iscashier = false;\n            }\n\n            let containers = [];\n\n            if (userid != 0 && data.iscashier) {\n                containers = document.querySelectorAll(SELECTORS.CASHIERSCART);\n            } else {\n                containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n                    + \",\" + SELECTORS.CHECKOUTCART);\n            }\n\n            let promises = [];\n\n            // Before rendering, we convert all prices to strings with 2 fixed decimals.\n            convertPricesToNumberFormat(data);\n\n            // We render for promise for all the containers.\n            promises.push(Templates.renderForPromise('local_shopping_cart/shopping_cart_items', data).then(({html, js}) => {\n                containers.forEach(container => {\n                // We know we will always find the Navbar, so we can do this right away.\n                    Templates.replaceNodeContents(container, html, js);\n                });\n                return true;\n            }).catch((e) => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            Promise.all(promises).then(() => {\n\n                // If we are on the cashier page, we add the possibility to add a discount to the cart items.\n                if (!(userid != 0 && data.iscashier)) {\n                    clearInterval(interval);\n                    initTimer(data.expirationdate, data.nowdate);\n\n                    updateBadge(data.count);\n                }\n\n                toggleActiveButtonState();\n\n                updateTotalPrice(userid);\n\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n        },\n        fail: ex => {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};\n\n/**\n * This function is only called when the timer invalidates the cart.\n * If no userid is provided the logged in USER will be used.\n * The USER-user is chosen with the userid 0, we just reinit everything after sending.\n * @param {*} userid\n */\nexport const deleteAllItems = (userid = 0) => {\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_all_items_from_cart\",\n        args: {\n            'userid': userid\n        },\n        done: function() {\n            reinit(0);\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(ex);\n        },\n    }]);\n};\n\nexport const deleteItem = (itemid, component, area, userid) => {\n\n    userid = transformUserIdForCashier(userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_item\",\n        args: {\n            'itemid': itemid,\n            'component': component,\n            'area': area,\n            'userid': userid\n        },\n        done: function(data) {\n\n            getString('item_deleted', 'local_shopping_cart', data.itemname).then(message => {\n                showNotification(message, 'success');\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n            window.location.reload();\n\n            import('local_wunderbyte_table/reload')\n                // eslint-disable-next-line promise/always-return\n                .then(wbt => {\n                    wbt.reloadAllTables();\n                })\n                .catch(err => {\n                    // Handle any errors, including if the module doesn't exist\n                    // eslint-disable-next-line no-console\n                    console.log(err);\n            });\n\n        },\n        fail: function() {\n\n            reinit(userid);\n        },\n    }]);\n};\n\nexport const addItem = (itemid, component, area) => {\n\n    let userid = transformUserIdForCashier();\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_add_item\",\n        args: {\n            'area': area,\n            'component': component,\n            'itemid': itemid,\n            'userid': userid\n        },\n        done: function(data) {\n            data.component = component;\n            data.area = area;\n            data.itemid = itemid;\n            data.userid = userid; // For the mustache template, we need to obey structure.\n            addItemShowNotification(data);\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n *\n * @param {*} userid\n * @param {*} usecredit\n * @param {*} useinstallments\n */\nexport const updateTotalPrice = (userid = 0, usecredit = true, useinstallments = false) => {\n\n    // On cashier, update price must always be for cashier user.\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    if (oncashier > 0) {\n        userid = CASHIERUSER;\n    }\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    // We must make sure the checkbox is only once visible on the site.\n    // const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n    usecredit = usecredit ? 1 : 0;\n    useinstallments = useinstallments ? 1 : 0;\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_price\",\n        args: {\n            userid,\n            usecredit,\n            useinstallments\n        },\n        done: function(data) {\n\n            // We take the usecredit value we receive from the server.\n            if (data.usecredit == 1) {\n                data.usecreditvalue = 'checked';\n            } else {\n                data.usecreditvalue = '';\n            }\n\n            data.checkboxid = Math.random().toString(36).slice(2, 5);\n            data.installmentscheckboxid = 'i' + data.checkboxid;\n\n            data.userid = userid;\n\n            const labelareas = document.querySelectorAll(SELECTORS.PRICELABELAREA);\n\n            // Before rendering, we convert all prices to strings with 2 fixed decimals.\n            convertPricesToNumberFormat(data);\n\n            Templates.renderForPromise('local_shopping_cart/price_label', data).then(({html, js}) => {\n\n                labelareas.forEach(labelarea => {\n                    Templates.replaceNodeContents(labelarea, html, js);\n\n                    addZeroPriceListener(data);\n                });\n\n                return true;\n            }).catch((e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            const checkoutButton = document.querySelector(SELECTORS.CHECKOUTBUTTON);\n            const paymentbutton = document.querySelector(SELECTORS.PAYMENTREGIONBUTTON);\n            if (data.count == 0) {\n                if (checkoutButton) {\n                    checkoutButton.classList.add(\"disabled\");\n                }\n                if (paymentbutton) {\n                    paymentbutton.style.display = \"none\";\n                }\n            } else {\n                if (checkoutButton) {\n                    checkoutButton.classList.remove(\"disabled\");\n                }\n                if (paymentbutton) {\n                    paymentbutton.style.display = \"inline\";\n                }\n            }\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n * Looks for the payment buttun, updates cost and adds the listener.\n * @param {*} data\n */\nfunction addZeroPriceListener(data) {\n\n    let paymentbutton = document.querySelector(\".shopping_cart_payment_region button\");\n\n    if (paymentbutton) {\n\n        if (paymentbutton.classList.contains('disabled')) {\n            return;\n        }\n\n        const price = data.price;\n        const currency = data.currency;\n\n        paymentbutton.dataset.cost = price + \" \" + currency;\n\n        if (price == 0) {\n\n            paymentbutton.addEventListener('click', dealWithZeroPrice);\n        } else {\n\n            paymentbutton.removeEventListener('click', dealWithZeroPrice);\n        }\n    }\n}\n\n/**\n * Function to show notifications when items are added.\n * @param {*} data\n */\nexport function addItemShowNotification(data) {\n    const CARTPARAM_ALREADYINCART = 0; // Already in cart.\n    const CARTPARAM_SUCCESS = 1; // Item added to cart successfully.\n    const CARTPARAM_CARTISFULL = 2; // Item added to cart successfully.\n    const CARTPARAM_COSTCENTER = 3; // Item added to cart successfully.\n    const CARTPARAM_FULLYBOOKED = 4; // Item not added because item is already fully booked.\n    const CARTPARAM_ALREADYBOOKED = 5; // Item not added because item was already booked before.\n\n    switch (data.success) {\n        case CARTPARAM_ALREADYINCART:\n            reinit();\n            return;\n        case CARTPARAM_SUCCESS:\n            getString('addedtocart', 'local_shopping_cart', data.itemname).then(message => {\n                showNotification(message, 'success');\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            reinit(data.userid);\n            return;\n        case CARTPARAM_CARTISFULL:\n            getStrings([\n                {key: 'cartisfull', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setBody(strings[0]);\n                    modal.setSaveButtonText(strings[1]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_COSTCENTER:\n            getStrings([\n                {key: 'error:costcentertitle', component: 'local_shopping_cart'},\n                {key: 'error:costcentersdonotmatch', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_FULLYBOOKED:\n            getStrings([\n                {key: 'error:fullybookedtitle', component: 'local_shopping_cart'},\n                {key: 'error:fullybooked', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n\n                    // Reload when OK button is clicked.\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        window.location.reload();\n                    });\n\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_ALREADYBOOKED:\n            getStrings([\n                {key: 'error:alreadybookedtitle', component: 'local_shopping_cart'},\n                {key: 'error:alreadybooked', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n\n                    // Reload when OK button is clicked.\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        window.location.reload();\n                    });\n\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        default:\n            getStrings([\n                {key: 'error:generalcarterror', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setBody(strings[0]);\n                    modal.setSaveButtonText(strings[1]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n    }\n\n}\n\n/**\n *\n * @param {*} event\n */\nfunction dealWithZeroPrice(event) {\n\n    event.stopPropagation();\n    event.preventDefault();\n\n    confirmZeroPriceCheckoutModal(event.target);\n}\n\n/**\n * Start the timer.\n *\n * @param {integer} duration\n * @param {integer} display\n */\nfunction startTimer(duration, display) {\n\n    var timer = duration,\n                minutes,\n                seconds;\n    interval = setInterval(function() {\n\n        minutes = parseInt(timer / 60, 10);\n        seconds = parseInt(timer % 60, 10);\n\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n        display.textContent = minutes + \":\" + seconds;\n\n        if (--timer < 0) {\n\n            // We so the expiration time has already kicked in on the server.\n            setTimeout(() => {\n                reinit(0);\n            }, 2000);\n\n            // We don't actually need to make this call.\n            // deleteAllItems();\n\n            clearInterval(interval);\n        }\n    }, 1000);\n}\n\n\n/**\n * Initialize Timer.\n *\n * @param {integer} expirationdate\n * @param {integer} nowdate\n *\n */\nfunction initTimer(expirationdate = null, nowdate = null) {\n\n    const countdownelement = document.querySelector(SELECTORS.COUNTDOWN);\n\n    if (!countdownelement || !nowdate) {\n        return;\n    }\n\n    if (interval) {\n        clearInterval(interval);\n    }\n    let delta = 0;\n    let now = nowdate;\n    if (expirationdate) {\n        delta = (expirationdate - now);\n    }\n    if (delta <= 0) {\n        delta = 0;\n        countdownelement.classList.add(\"hidden\");\n    } else if (delta > 0) {\n        countdownelement.classList.remove(\"hidden\");\n        startTimer(delta, countdownelement);\n    }\n}\n\n/**\n *\n * @param {*} element\n */\nfunction confirmZeroPriceCheckoutModal(element) {\n\n    getStrings([\n        {key: 'confirmzeropricecheckouttitle', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckoutbody', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckout', component: 'local_shopping_cart'}\n    ]\n    ).then(strings => {\n        // eslint-disable-next-line promise/no-nesting\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n                modal.setBody(strings[1]);\n                modal.setSaveButtonText(strings[2]);\n                modal.getRoot().on(ModalEvents.save, function() {\n\n                    const userid = element.dataset.userid;\n\n                    if (userid) {\n                        // The second parameter designs the payment method.\n                        // In the cart, the constant PAYMENT_METHOD_CREDITS translates to 2.\n                        confirmPayment(userid, 2);\n                    }\n                });\n\n                modal.show();\n                return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n * Function to update the page in the nav bar.\n * @param {*} count\n */\nfunction updateBadge(count) {\n\n    const badge = document.querySelector(SELECTORS.BADGECOUNT);\n\n    if (count > 0) {\n        badge.innerHTML = count;\n        badge.classList.remove('hidden');\n    } else {\n        badge.innerHTML = count;\n        badge.classList.add('hidden');\n    }\n}\n\n/**\n * Function to toggle the active state.\n * @param {*} button\n */\nfunction toggleActiveButtonState(button = null) {\n\n    let selector = '';\n    let component = null;\n    let area = null;\n    let itemid = null;\n\n    // If we have a button, we only look for this particular itemid.\n    if (button) {\n\n        // We'll find the right variables in the DOM.\n        itemid = button.dataset.itemid;\n        component = button.dataset.component;\n        area = button.dataset.area;\n\n        selector =\n            'div'\n            + '[data-itemid=\"' + itemid + '\"]'\n            + '[data-component=\"' + component + '\"]'\n            + '[data-area=\"' + area + '\"]'\n            + '[data-objecttable=\"local_shopping_cart\"';\n    } else {\n        // As we might have more than one of these buttons, we always need to look for all of them in the document.\n        // We will update for all the buttons we find.\n        selector =\n        'div'\n        + '[data-objecttable=\"local_shopping_cart\"';\n    }\n\n    const buttons = document.querySelectorAll(selector);\n\n    // Make sure item is not yet in shopping cart. If so, add disabled class.\n    let shoppingcart = document.querySelector(SELECTORS.CASHIERSCART);\n\n    if (!shoppingcart) {\n        shoppingcart = document.querySelector(SELECTORS.NAVBARCONTAINER);\n    }\n\n    buttons.forEach(addtocartbutton => {\n\n        component = addtocartbutton.dataset.component;\n        area = addtocartbutton.dataset.area;\n        itemid = addtocartbutton.dataset.itemid;\n\n        const cartitem = shoppingcart.querySelector('[id=\"item-' + component + '-' + area + '-' + itemid + '\"]');\n\n        if (cartitem) {\n\n            addtocartbutton.classList.add('disabled');\n        } else {\n\n            addtocartbutton.classList.remove('disabled');\n        }\n    });\n}\n\n/**\n * Function to init Price Label and add Listener.\n * @param {*} userid\n */\nexport function initPriceLabel(userid) {\n\n    // eslint-disable-next-line no-console\n    console.log('initpricelabel');\n\n    if (userid < 1) {\n        userid = 0;\n    }\n\n    const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n    const installmentscheckbox = document.querySelector(SELECTORS.INSTALLMENTSCHECKBOX);\n\n    if (checkbox && !checkbox.initialized) {\n        checkbox.initialized = true;\n        checkbox.addEventListener('change', event => {\n\n            if (event.currentTarget.checked) {\n                updateTotalPrice(userid, true, installmentscheckbox.checked);\n            } else {\n                updateTotalPrice(userid, false, installmentscheckbox.checked);\n            }\n        });\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(installmentscheckbox, installmentscheckbox.initialized);\n    if (installmentscheckbox && !installmentscheckbox.initialized) {\n        installmentscheckbox.initialized = true;\n\n        // eslint-disable-next-line no-console\n        console.log('add event listener to installment');\n        installmentscheckbox.addEventListener('change', event => {\n\n            // eslint-disable-next-line no-console\n            console.log(event.currentTarget, event.currentTarget.checked);\n\n            if (event.currentTarget.checked) {\n                updateTotalPrice(userid, checkbox.checked, true);\n            } else {\n                updateTotalPrice(userid, checkbox.checked, false);\n            }\n        });\n    }\n}\n\n/**\n * We need to know if we are on the cashier page to transform userid if necessary.\n * @param {integer} userid\n * @returns {integer}\n */\nfunction transformUserIdForCashier(userid = null) {\n\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    if ((userid == CASHIERUSER || !(userid === 0 || userid === \"0\")) && oncashier > 0) {\n        userid = CASHIERUSER;\n    } else if (userid === null) {\n        userid = 0;\n    }\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    return userid;\n}\n\n/**\n * Helper function to convert prices to number format before rendering.\n * @param {Object} data the data containing the price values\n */\nfunction convertPricesToNumberFormat(data) {\n    // Render all prices to 2 fixed decimals.\n    if (data.price) {\n        data.price = Number(data.price).toFixed(2);\n    }\n    if (data.initialtotal) {\n        data.initialtotal = Number(data.initialtotal).toFixed(2);\n    }\n    if (data.initialtotal_net) {\n        // eslint-disable-next-line camelcase\n        data.initialtotal_net = Number(data.initialtotal_net).toFixed(2);\n    }\n    if (data.discount) {\n        data.discount = Number(data.discount).toFixed(2);\n    }\n    if (data.deductible) {\n        data.deductible = Number(data.deductible).toFixed(2);\n    }\n    if (data.credit) {\n        data.credit = Number(data.credit).toFixed(2);\n    }\n    if (data.remainingcredit) {\n        data.remainingcredit = Number(data.remainingcredit).toFixed(2);\n    }\n    if (data.price_net) {\n        // eslint-disable-next-line camelcase\n        data.price_net = Number(data.price_net).toFixed(2);\n    }\n    if (data.price_gross) {\n        // eslint-disable-next-line camelcase\n        data.price_gross = Number(data.price_gross).toFixed(2);\n    }\n    if (data.items) {\n        for (var i = 0; i < data.items.length; i++) {\n            if (data.items[i].price) {\n                data.items[i].price = Number(data.items[i].price).toFixed(2);\n            }\n            if (data.items[i].price_gross) {\n                // eslint-disable-next-line camelcase\n                data.items[i].price_gross = Number(data.items[i].price_gross).toFixed(2);\n            }\n            if (data.items[i].price_net) {\n                // eslint-disable-next-line camelcase\n                data.items[i].price_net = Number(data.items[i].price_net).toFixed(2);\n            }\n        }\n    }\n}\n\n/**\n * Add Accept terms listener to set the right class to payment region button.\n * @param {element} accepttermsbutton\n * @param {element} paymentbutton\n */\nfunction addAcceptTermsListener(accepttermsbutton, paymentbutton) {\n\n    accepttermsbutton.addEventListener('change', event => {\n        if (event.currentTarget.checked) {\n            paymentbutton.disabled = false;\n        } else {\n            paymentbutton.disabled = true;\n        }\n    });\n}"],"names":["userid","console","log","checkbox","document","querySelector","SELECTORS","installmentscheckbox","initialized","addEventListener","event","currentTarget","checked","updateTotalPrice","interval","visbilityevent","expirationdate","nowdate","initTimer","containers","querySelectorAll","forEach","container","element","target","classList","contains","dataset","component","area","itemid","deleteItem","readyState","reinit","visibilityState","paymentbutton","addZeroPriceListener","price","currency","accepttermsbutton","disabled","addAcceptTermsListener","buttoninit","selector","button","addtocartbutton","toggleActiveButtonState","nojs","blocked","preventDefault","stopPropagation","addItem","transformUserIdForCashier","call","methodname","args","done","data","oncashier","window","location","href","indexOf","iscashier","promises","convertPricesToNumberFormat","push","Templates","renderForPromise","then","_ref","html","js","replaceNodeContents","catch","e","Promise","all","clearInterval","updateBadge","count","fail","ex","itemname","message","reload","wbt","reloadAllTables","err","Number","isInteger","parseInt","addItemShowNotification","usecredit","useinstallments","usecreditvalue","checkboxid","Math","random","toString","slice","installmentscheckboxid","labelareas","_ref2","labelarea","checkoutButton","add","style","display","remove","cost","dealWithZeroPrice","removeEventListener","success","key","strings","create","type","ModalFactory","types","SAVE_CANCEL","modal","setBody","setSaveButtonText","show","setTitle","getRoot","on","ModalEvents","save","startTimer","duration","minutes","seconds","timer","setInterval","textContent","setTimeout","countdownelement","delta","now","badge","innerHTML","buttons","shoppingcart","toFixed","initialtotal","initialtotal_net","discount","deductible","credit","remainingcredit","price_net","price_gross","items","i","length"],"mappings":"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"}