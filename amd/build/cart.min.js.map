{"version":3,"file":"cart.min.js","sources":["../src/cart.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\n\nimport {confirmPayment} from 'local_shopping_cart/cashier';\nimport {discountModal} from 'local_shopping_cart/cashier';\nimport {showNotification} from 'local_shopping_cart/notifications';\n\nimport DynamicForm from 'core_form/dynamicform';\n\nimport {\n    get_strings as getStrings,\n    get_string as getString\n        }\n        from 'core/str';\nimport {modifyTimeModal} from './cashier';\n\nexport var interval = null;\nexport var visbilityevent = false;\n\n// This file inits the cart on every page, on checkout and cashier.\n// The cart is always loaed entirely and replaced via css.\n// The cashiers cart are identified in the DOM via userid -1 (CASHIERUSER).\n// The translation to real userids is done in the PHP only.\n\nconst CASHIERUSER = -1;\n\nconst SELECTORS = {\n    SHOPPING_CART_ITEM: '[data-item=\"shopping_cart_item\"]',\n    NAVBARCONTAINER: '#nav-shopping_cart-popover-container .shopping-cart-items-container',\n    TRASHCLASS: 'fa-trash-o',\n    DISCOUNTCLASS: 'shoppingcart-discount-icon',\n    MODIFYTIMECLASS: 'shoppingcart-modifytime-icon',\n    BADGECOUNT: '#nav-shopping_cart-popover-container div.count-container',\n    COUNTDOWN: '#nav-shopping_cart-popover-container span.expirationtime',\n    CASHIERSCART: 'div.shopping-cart-cashier-items-container',\n    CHECKOUTCART: 'div.shopping-cart-checkout-items-container',\n    PRICELABELCHECKBOX: '.sc_price_label input.usecredit-checkbox',\n    INSTALLMENTSCHECKBOX: '.sc_price_label input.useinstallments-checkbox',\n    PRICELABELAREA: '.sc_price_label',\n    CHECKOUTBUTTON: '#nav-shopping_cart-popover-container #shopping-cart-checkout-button',\n    PAYMENTREGIONBUTTON: 'div.shopping_cart_payment_region button',\n    ACCEPTTERMS: '#accepttermsandconditions',\n    CHECKVATNRFORM: 'div.form_vatnrchecker',\n};\n/**\n *\n * @param {*} expirationtime\n */\n\n export const init = (expirationtime, nowdate) => {\n\n    initTimer(expirationtime, nowdate);\n\n    // We might have more than one container.\n    let containers = [];\n    containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n        + \",\" + SELECTORS.CASHIERSCART\n        + \",\" + SELECTORS.CHECKOUTCART);\n\n    containers.forEach(container => {\n\n        container.addEventListener('click', event => {\n\n            // Decide the target of the click.\n            const element = event.target;\n\n            if (element.classList.contains(SELECTORS.TRASHCLASS)) {\n\n                const userid = element.dataset.userid ? element.dataset.userid : 0;\n                const component = element.dataset.component;\n                const area = element.dataset.area;\n                const itemid = element.dataset.itemid;\n\n                deleteItem(itemid, component, area, userid);\n            } else if (element.classList.contains(SELECTORS.DISCOUNTCLASS)) {\n                discountModal(event);\n            } else if (element.classList.contains(SELECTORS.MODIFYTIMECLASS)) {\n                modifyTimeModal(event);\n            }\n        });\n    });\n\n    // Re-init cart on page reload or navigation to another page - required for 2-digit price precision visibility.\n    document.addEventListener(\"readystatechange\", () => {\n        if (document.readyState !== 'loading') {\n            reinit();\n        }\n    });\n\n    if (visbilityevent == false) {\n        document.addEventListener(\"visibilitychange\", function() {\n            visbilityevent = true;\n            if (document.visibilityState === 'visible') {\n                reinit();\n            }\n        });\n    }\n\n    // Initially, we need to add the zeroPriceListener once.\n    const paymentbutton = document.querySelector(SELECTORS.PAYMENTREGIONBUTTON);\n    if (paymentbutton) {\n        const data = {\n            price: paymentbutton.dataset.price,\n            currency: paymentbutton.dataset.currency,\n        };\n        addZeroPriceListener(data);\n        addCheckoutModalListener();\n    }\n\n    const accepttermsbutton = document.querySelector(SELECTORS.ACCEPTTERMS);\n    if (accepttermsbutton && paymentbutton) {\n        addAcceptTermsListener(accepttermsbutton, paymentbutton);\n    }\n\n    initVATNRChecker();\n};\n\nconst initVATNRChecker = () => {\n\n    const vatnrchecker = document.querySelector(SELECTORS.CHECKVATNRFORM);\n\n    if (vatnrchecker) {\n        const vatnrcheckerform = new DynamicForm(\n            vatnrchecker,\n            'local_shopping_cart\\\\form\\\\dynamicvatnrchecker'\n        );\n\n        vatnrcheckerform.addEventListener('change', (e) => {\n\n            // eslint-disable-next-line no-console\n            console.log(e.target.checked, e.target.name);\n\n            if (!e.target.name) {\n                return;\n            }\n\n            if (e.target.name == 'usevatnr'\n                && e.target.checked === false) {\n\n                // eslint-disable-next-line no-console\n                console.log(e.target.value);\n\n                vatnrcheckerform.submitFormAjax();\n            }\n        });\n\n        // After submitting we want to reload the window to update the rule list.\n        vatnrcheckerform.addEventListener(vatnrcheckerform.events.FORM_SUBMITTED, () => {\n\n            vatnrcheckerform.load();\n            // eslint-disable-next-line no-console\n            console.log('form submitted');\n\n            reinit();\n        });\n    }\n\n};\n\nexport const buttoninit = (itemid, component, area, userid) => {\n\n    // If we don't have an itemid, we need to look for all the buttons.\n    if (!itemid || !component || !area || userid === undefined) {\n        const selector = '[data-objecttable=\"local_shopping_cart\"';\n        const allbuttons = document.querySelectorAll(\n            selector);\n        allbuttons.forEach(button => {\n            const itemid = button.dataset.itemid;\n            const area = button.dataset.area;\n            const component = button.dataset.component;\n            let userid = button.dataset.userid?.trim() ? button.dataset.userid : 0;\n            buttoninit(itemid, component, area, userid);\n        });\n        return;\n    }\n\n    // Return all buttons with the add to cart functionality.\n    const buttons =\n    document.querySelectorAll(\n        'div'\n        + '[data-itemid=\"' + itemid + '\"]'\n        + '[data-component=\"' + component + '\"]'\n        + '[data-area=\"' + area + '\"]'\n        + '[data-objecttable=\"local_shopping_cart\"');\n\n    buttons.forEach(addtocartbutton => {\n\n        // We need to check all the buttons.\n        toggleActiveButtonState(addtocartbutton);\n\n        // We only ever initialize the button once.\n        if (!addtocartbutton || addtocartbutton.dataset.initialized === 'true') {\n            return;\n        }\n        addtocartbutton.dataset.initialized = 'true';\n\n        // If the button has the nojs flag, we don't add the listener at all.\n\n        if (addtocartbutton.dataset.nojs) {\n            return;\n        }\n\n        // Add click eventlistern to oneself.\n        addtocartbutton.addEventListener('click', event => {\n\n            if (addtocartbutton.dataset.blocked == 'true') {\n                return;\n            }\n\n            // If we find the disabled class, the click event is aborted.\n            if (addtocartbutton.classList.contains('disabled')) {\n                event.preventDefault();\n                event.stopPropagation();\n                // DeleteItem(itemid, component, area);\n            } else {\n                // Event.preventDefault();\n                // Event.stopPropagation();\n                addItem(itemid, component, area, userid);\n            }\n        });\n    });\n\n    return;\n};\n\n/**\n * Function to reload the cart. We can pass on the certain component if we need to make sure that not only the cart is reloaded.\n * This is the case when adding or deleting a certain item and a special button has to be reset.\n * @param {*} userid\n */\nexport const reinit = (userid = 0) => {\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_shopping_cart_items\",\n        args: {\n            userid\n        },\n        done: function(data) {\n\n            // If we are on the cashier page, we add the possibility to add a discount to the cart items.\n            const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n            if (oncashier > 0) {\n                data.iscashier = true;\n            } else {\n                data.iscashier = false;\n            }\n\n            let containers = [];\n\n            if (userid != 0 && data.iscashier) {\n                containers = document.querySelectorAll(SELECTORS.CASHIERSCART);\n            } else {\n                containers = document.querySelectorAll(SELECTORS.NAVBARCONTAINER\n                    + \",\" + SELECTORS.CHECKOUTCART);\n            }\n\n            let promises = [];\n\n            // Before rendering, we convert all prices to strings with 2 fixed decimals.\n            convertPricesToNumberFormat(data);\n\n            // We render for promise for all the containers.\n            promises.push(Templates.renderForPromise('local_shopping_cart/shopping_cart_items', data).then(({html, js}) => {\n                containers.forEach(container => {\n                // We know we will always find the Navbar, so we can do this right away.\n                    Templates.replaceNodeContents(container, html, js);\n                });\n                return true;\n            }).catch((e) => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            Promise.all(promises).then(() => {\n\n                // If we are on the cashier page, we add the possibility to add a discount to the cart items.\n                if (!(userid != 0 && data.iscashier)) {\n                    clearInterval(interval);\n                    initTimer(data.expirationtime, data.nowdate);\n\n                    updateBadge(data.count);\n                }\n\n                toggleActiveButtonState();\n\n                updateTotalPrice(userid);\n\n                updateItemPrice(data);\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n        },\n        fail: ex => {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};\n\n/**\n * Update item price.\n *\n * @param {mixed} data\n *\n */\nfunction updateItemPrice(data) {\n    data.items.forEach(item => {\n        document.querySelectorAll(\n            '[data-itemid=\"'\n            + item.itemid\n            + '\"][data-component=\"'\n            + item.componentname\n            + '\"][data-area=\"'\n            + item.area\n            + '\"][data-objecttable=\"local_shopping_cart\"]'\n        ).forEach(element => {\n            const pricecontainer = element.closest(\".pricecontainer\");\n            const pricecurrency = pricecontainer.querySelector(\"span.pricecurrency\");\n            pricecurrency.innerHTML = item.price + \" \" + item.currency;\n        });\n    });\n}\n\n/**\n * This function is only called when the timer invalidates the cart.\n * If no userid is provided the logged in USER will be used.\n * The USER-user is chosen with the userid 0, we just reinit everything after sending.\n * @param {*} userid\n */\nexport const deleteAllItems = (userid = 0) => {\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_all_items_from_cart\",\n        args: {\n            'userid': userid\n        },\n        done: function() {\n            reinit(0);\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(ex);\n        },\n    }]);\n};\n\nexport const deleteItem = (itemid, component, area, userid) => {\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_item\",\n        args: {\n            'itemid': itemid,\n            'component': component,\n            'area': area,\n            'userid': userid\n        },\n        done: function(data) {\n\n            getString('item_deleted', 'local_shopping_cart', data.itemname).then(message => {\n                showNotification(message, 'success');\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n            reinit(userid);\n\n            import('local_wunderbyte_table/reload')\n                // eslint-disable-next-line promise/always-return\n                .then(wbt => {\n                    wbt.reloadAllTables();\n                })\n                .catch(err => {\n                    // Handle any errors, including if the module doesn't exist\n                    // eslint-disable-next-line no-console\n                    console.log(err);\n            });\n\n        },\n        fail: function() {\n\n            reinit(userid);\n        },\n    }]);\n};\n\nexport const addItem = (itemid, component, area, userid) => {\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_add_item\",\n        args: {\n            'area': area,\n            'component': component,\n            'itemid': itemid,\n            'userid': userid\n        },\n        done: function(data) {\n            data.component = component;\n            data.area = area;\n            data.itemid = itemid;\n            data.userid = userid; // For the mustache template, we need to obey structure.\n            addItemShowNotification(data);\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n *\n * @param {*} userid\n * @param {*} usecredit\n * @param {*} useinstallments\n */\nexport const updateTotalPrice = (userid = 0, usecredit = true, useinstallments = false) => {\n\n    // On cashier, update price must always be for cashier user.\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    if (oncashier > 0) {\n        userid = CASHIERUSER;\n    }\n\n    if (!Number.isInteger(userid)) {\n        userid = parseInt(userid);\n    }\n\n    // We must make sure the checkbox is only once visible on the site.\n    const checkboxes = document.querySelectorAll(SELECTORS.PRICELABELCHECKBOX);\n\n    if (checkboxes.length == 1) {\n        checkboxes.forEach(checkbox => {\n            usecredit = checkbox.checked ? 1 : 0;\n        });\n    } else {\n        usecredit = usecredit ? 1 : 0;\n    }\n    useinstallments = useinstallments ? 1 : 0;\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_price\",\n        args: {\n            userid,\n            usecredit,\n            useinstallments\n        },\n        done: function(data) {\n\n            // We take the usecredit value we receive from the server.\n            if (data.usecredit == 1) {\n                data.usecreditvalue = 'checked';\n            } else {\n                data.usecreditvalue = '';\n            }\n\n            data.checkboxid = Math.random().toString(36).slice(2, 5);\n\n            if (data.installments.length > 0) {\n                data.installmentscheckboxid = 'i' + data.checkboxid;\n            }\n\n            data.userid = userid;\n\n            const labelareas = document.querySelectorAll(SELECTORS.PRICELABELAREA);\n\n            // Before rendering, we convert all prices to strings with 2 fixed decimals.\n            convertPricesToNumberFormat(data);\n\n            Templates.renderForPromise('local_shopping_cart/price_label', data).then(({html, js}) => {\n\n                labelareas.forEach(labelarea => {\n\n                    // There are labelareas we don't want to update.\n                    if (!labelarea.dataset.noupdate) {\n                        Templates.replaceNodeContents(labelarea, html, js);\n                        addZeroPriceListener(data);\n                    }\n                });\n\n                return true;\n            }).catch((e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n            const checkoutButton = document.querySelector(SELECTORS.CHECKOUTBUTTON);\n            const paymentbutton = document.querySelector(SELECTORS.PAYMENTREGIONBUTTON);\n            if (data.count == 0) {\n                if (checkoutButton) {\n                    checkoutButton.classList.add(\"disabled\");\n                }\n                if (paymentbutton) {\n                    paymentbutton.style.display = \"none\";\n                }\n            } else {\n                if (checkoutButton) {\n                    checkoutButton.classList.remove(\"disabled\");\n                }\n                if (paymentbutton) {\n                    paymentbutton.style.display = \"inline\";\n                }\n            }\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n * Looks for the payment buttun, updates cost and adds the listener.\n * @param {*} data\n */\nexport function addZeroPriceListener(data) {\n\n    let paymentbutton = document.querySelector(SELECTORS.PAYMENTREGIONBUTTON);\n\n    if (paymentbutton) {\n\n        if (paymentbutton.classList.contains('disabled')) {\n            // eslint-disable-next-line no-console\n            console.log('button disabled');\n            return;\n        }\n\n        const price = data.price;\n        const currency = data.currency;\n\n        paymentbutton.dataset.cost = price + \" \" + currency;\n\n        if (price == 0) {\n            paymentbutton.addEventListener('click', dealWithZeroPrice);\n        } else {\n            paymentbutton.removeEventListener('click', dealWithZeroPrice);\n        }\n    }\n}\n\n/**\n * Adds a clicklistener to all elements closing the modal to refresh the page when payment process is interupted.\n */\nexport function addCheckoutModalListener() {\n    document.body.addEventListener(\"click\", function(event) {\n\n        const target = event.target;\n        // Check if click is on the modal backdrop\n        const isModalBackground = target.dataset.region === \"modal-container\"\n            && target.classList.contains(\"hide\");\n\n        // Find the closest button (important for 'hide' action inside a button)\n        const closestButton = target.closest(\"button[data-action='hide']\");\n        // Check if click is on an element inside modal that triggers closing\n        const isCloseAction =\n            target.closest('[data-region=\"modal-container\"]') &&\n            (closestButton || target.dataset.action === \"cancel\");\n\n        if (isModalBackground || isCloseAction) {\n            setTimeout(() => {\n                location.reload();\n            }, 300); // Small delay to ensure modal closes before refresh\n        }\n    });\n}\n\n/**\n * Function to show notifications when items are added.\n * @param {*} data\n */\nexport function addItemShowNotification(data) {\n    const CARTPARAM_ALREADYINCART = 0; // Already in cart.\n    const CARTPARAM_SUCCESS = 1; // Item added to cart successfully.\n    const CARTPARAM_CARTISFULL = 2; // Item added to cart successfully.\n    const CARTPARAM_COSTCENTER = 3; // Item added to cart successfully.\n    const CARTPARAM_FULLYBOOKED = 4; // Item not added because item is already fully booked.\n    const CARTPARAM_ALREADYBOOKED = 5; // Item not added because item was already booked before.\n\n    switch (data.success) {\n        case CARTPARAM_ALREADYINCART:\n            reinit();\n            return;\n        case CARTPARAM_SUCCESS:\n            getString('addedtocart', 'local_shopping_cart', data.itemname).then(message => {\n                showNotification(message, 'success');\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            reinit(data.userid);\n            return;\n        case CARTPARAM_CARTISFULL:\n            getStrings([\n                {key: 'cartisfull', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setBody(strings[0]);\n                    modal.setSaveButtonText(strings[1]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_COSTCENTER:\n            getStrings([\n                {key: 'error:costcentertitle', component: 'local_shopping_cart'},\n                {key: 'error:costcentersdonotmatch', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_FULLYBOOKED:\n            getStrings([\n                {key: 'error:fullybookedtitle', component: 'local_shopping_cart'},\n                {key: 'error:fullybooked', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n\n                    // Reload when OK button is clicked.\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        window.location.reload();\n                    });\n\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        case CARTPARAM_ALREADYBOOKED:\n            getStrings([\n                {key: 'error:alreadybookedtitle', component: 'local_shopping_cart'},\n                {key: 'error:alreadybooked', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n\n                    // Reload when OK button is clicked.\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        window.location.reload();\n                    });\n\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n        default:\n            getStrings([\n                {key: 'error:generalcarterror', component: 'local_shopping_cart'},\n                {key: 'ok', component: 'core'},\n            ]).then(strings => {\n                // eslint-disable-next-line promise/no-nesting\n                ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n                    modal.setBody(strings[0]);\n                    modal.setSaveButtonText(strings[1]);\n                    modal.show();\n                    return modal;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return;\n    }\n\n}\n\n/**\n *\n * @param {*} event\n */\nasync function dealWithZeroPrice(event) {\n\n    event.stopPropagation();\n    event.preventDefault();\n\n    confirmZeroPriceCheckoutModal(event.target);\n}\n\n/**\n * Start the timer.\n *\n * @param {integer} duration\n * @param {integer} display\n */\nfunction startTimer(duration, display) {\n\n    var timer = duration,\n                minutes,\n                seconds;\n    interval = setInterval(function() {\n\n        minutes = parseInt(timer / 60, 10);\n        seconds = parseInt(timer % 60, 10);\n\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n        display.textContent = minutes + \":\" + seconds;\n\n        if (--timer < 0) {\n\n            // We so the expiration time has already kicked in on the server.\n            setTimeout(() => {\n                reinit(0);\n            }, 2000);\n\n            // We don't actually need to make this call.\n            // deleteAllItems();\n\n            clearInterval(interval);\n        }\n    }, 1000);\n}\n\n\n/**\n * Initialize Timer.\n *\n * @param {integer} expirationtime\n * @param {integer} nowdate\n *\n */\nfunction initTimer(expirationtime = null, nowdate = null) {\n\n    const countdownelement = document.querySelector(SELECTORS.COUNTDOWN);\n\n    if (!countdownelement || !nowdate) {\n        return;\n    }\n\n    if (interval) {\n        clearInterval(interval);\n    }\n    let delta = 0;\n    let now = nowdate;\n    if (expirationtime) {\n        delta = (expirationtime - now);\n    }\n    if (delta <= 0) {\n        delta = 0;\n        countdownelement.classList.add(\"hidden\");\n    } else if (delta > 0) {\n        countdownelement.classList.remove(\"hidden\");\n        startTimer(delta, countdownelement);\n    }\n}\n\n/**\n *\n * @param {*} element\n */\nfunction confirmZeroPriceCheckoutModal(element) {\n\n    getStrings([\n        {key: 'confirmzeropricecheckouttitle', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckoutbody', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckout', component: 'local_shopping_cart'}\n    ]\n    ).then(strings => {\n        // eslint-disable-next-line promise/no-nesting\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n                modal.setBody(strings[1]);\n                modal.setSaveButtonText(strings[2]);\n                modal.getRoot().on(ModalEvents.save, function() {\n\n                    const userid = element.dataset.userid;\n\n                    if (userid) {\n                        // The second parameter designs the payment method.\n                        // In the cart, the constant PAYMENT_METHOD_CREDITS translates to 2.\n                        confirmPayment(userid, 2);\n                    }\n                });\n\n                modal.show();\n                return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n * Function to update the page in the nav bar.\n * @param {*} count\n */\nfunction updateBadge(count) {\n\n    const badge = document.querySelector(SELECTORS.BADGECOUNT);\n\n    if (count > 0) {\n        badge.innerHTML = count;\n        badge.classList.remove('hidden');\n    } else {\n        badge.innerHTML = count;\n        badge.classList.add('hidden');\n    }\n}\n\n/**\n * Function to toggle the active state.\n * @param {*} button\n */\nfunction toggleActiveButtonState(button = null) {\n\n    let selector = '';\n    let component = null;\n    let area = null;\n    let itemid = null;\n\n    // If we have a button, we only look for this particular itemid.\n    if (button) {\n\n        // We'll find the right variables in the DOM.\n        itemid = button.dataset.itemid;\n        component = button.dataset.component;\n        area = button.dataset.area;\n\n        selector =\n            'div'\n            + '[data-itemid=\"' + itemid + '\"]'\n            + '[data-component=\"' + component + '\"]'\n            + '[data-area=\"' + area + '\"]'\n            + '[data-objecttable=\"local_shopping_cart\"';\n    } else {\n        // As we might have more than one of these buttons, we always need to look for all of them in the document.\n        // We will update for all the buttons we find.\n        selector =\n        'div'\n        + '[data-objecttable=\"local_shopping_cart\"';\n    }\n\n    const buttons = document.querySelectorAll(selector);\n\n    // Make sure item is not yet in shopping cart. If so, add disabled class.\n    let shoppingcart = document.querySelector(SELECTORS.CASHIERSCART);\n\n    if (!shoppingcart) {\n        shoppingcart = document.querySelector(SELECTORS.NAVBARCONTAINER);\n    }\n\n    buttons.forEach(addtocartbutton => {\n\n        component = addtocartbutton.dataset.component;\n        area = addtocartbutton.dataset.area;\n        itemid = addtocartbutton.dataset.itemid;\n\n        const cartitem = shoppingcart.querySelector('[id=\"item-' + component + '-' + area + '-' + itemid + '\"]');\n\n        if (cartitem) {\n\n            addtocartbutton.classList.add('disabled');\n        } else {\n\n            addtocartbutton.classList.remove('disabled');\n        }\n    });\n}\n\n/**\n * Function to init Price Label and add Listener.\n * @param {*} userid\n */\nexport function initPriceLabel(userid) {\n\n    if (userid < 1) {\n        userid = 0;\n    }\n\n    const checkbox = document.querySelector(SELECTORS.PRICELABELCHECKBOX);\n    const installmentscheckbox = document.querySelector(SELECTORS.INSTALLMENTSCHECKBOX);\n\n    if (checkbox && !checkbox.initialized) {\n        checkbox.initialized = true;\n        checkbox.addEventListener('change', event => {\n\n            var installementsvalue = false;\n            if (installmentscheckbox) {\n                installementsvalue = installmentscheckbox.checked;\n            }\n\n            if (event.currentTarget.checked) {\n                updateTotalPrice(userid, true, installementsvalue);\n            } else {\n                updateTotalPrice(userid, false, installementsvalue);\n            }\n        });\n    }\n\n    if (installmentscheckbox && !installmentscheckbox.initialized) {\n        installmentscheckbox.initialized = true;\n\n        // eslint-disable-next-line no-console\n        console.log('add event listener to installment');\n        installmentscheckbox.addEventListener('change', event => {\n\n            // eslint-disable-next-line no-console\n            console.log(event.currentTarget, event.currentTarget.checked);\n\n            // eslint-disable-next-line no-console\n            console.log(checkbox);\n\n            let checkboxchecked = null;\n            if (checkbox) {\n                checkboxchecked = checkbox.checked;\n            }\n\n            updateTotalPrice(userid, checkboxchecked, event.currentTarget.checked);\n\n        });\n    }\n}\n\n/**\n * Helper function to convert prices to number format before rendering.\n * @param {Object} data the data containing the price values\n */\nfunction convertPricesToNumberFormat(data) {\n    // Render all prices to 2 fixed decimals.\n    if (data.price) {\n        data.price = Number(data.price).toFixed(2);\n    }\n    if (data.initialtotal) {\n        data.initialtotal = Number(data.initialtotal).toFixed(2);\n    }\n    if (data.initialtotal_net) {\n        // eslint-disable-next-line camelcase\n        data.initialtotal_net = Number(data.initialtotal_net).toFixed(2);\n    }\n    if (data.discount) {\n        data.discount = Number(data.discount).toFixed(2);\n    }\n    if (data.deductible) {\n        data.deductible = Number(data.deductible).toFixed(2);\n    }\n    if (data.credit) {\n        data.credit = Number(data.credit).toFixed(2);\n    }\n    if (data.remainingcredit) {\n        data.remainingcredit = Number(data.remainingcredit).toFixed(2);\n    }\n    if (data.price_net) {\n        // eslint-disable-next-line camelcase\n        data.price_net = Number(data.price_net).toFixed(2);\n    }\n    if (data.price_gross) {\n        // eslint-disable-next-line camelcase\n        data.price_gross = Number(data.price_gross).toFixed(2);\n    }\n    if (data.items) {\n        for (var i = 0; i < data.items.length; i++) {\n            if (data.items[i].price) {\n                data.items[i].price = Number(data.items[i].price).toFixed(2);\n            }\n            if (data.items[i].price_gross) {\n                // eslint-disable-next-line camelcase\n                data.items[i].price_gross = Number(data.items[i].price_gross).toFixed(2);\n            }\n            if (data.items[i].price_net) {\n                // eslint-disable-next-line camelcase\n                data.items[i].price_net = Number(data.items[i].price_net).toFixed(2);\n            }\n        }\n    }\n}\n\n/**\n * Add Accept terms listener to set the right class to payment region button.\n * @param {element} accepttermsbutton\n * @param {element} paymentbutton\n */\nfunction addAcceptTermsListener(accepttermsbutton, paymentbutton) {\n\n    accepttermsbutton.addEventListener('change', event => {\n        if (event.currentTarget.checked) {\n            paymentbutton.disabled = false;\n        } else {\n            paymentbutton.disabled = true;\n        }\n    });\n}"],"names":["userid","checkbox","document","querySelector","SELECTORS","installmentscheckbox","initialized","addEventListener","event","installementsvalue","checked","currentTarget","updateTotalPrice","console","log","checkboxchecked","interval","visbilityevent","expirationtime","nowdate","initTimer","containers","querySelectorAll","forEach","container","element","target","classList","contains","dataset","component","area","itemid","deleteItem","readyState","reinit","visibilityState","paymentbutton","addZeroPriceListener","price","currency","addCheckoutModalListener","accepttermsbutton","disabled","addAcceptTermsListener","initVATNRChecker","vatnrchecker","vatnrcheckerform","DynamicForm","e","name","value","submitFormAjax","events","FORM_SUBMITTED","load","buttoninit","undefined","selector","button","trim","addtocartbutton","toggleActiveButtonState","nojs","blocked","preventDefault","stopPropagation","addItem","call","methodname","args","done","data","oncashier","window","location","href","indexOf","iscashier","promises","convertPricesToNumberFormat","push","Templates","renderForPromise","then","_ref","html","js","replaceNodeContents","catch","Promise","all","clearInterval","updateBadge","count","updateItemPrice","fail","ex","items","item","componentname","closest","innerHTML","itemname","message","wbt","reloadAllTables","err","Number","isInteger","parseInt","addItemShowNotification","usecredit","useinstallments","checkboxes","length","usecreditvalue","checkboxid","Math","random","toString","slice","installments","installmentscheckboxid","labelareas","_ref2","labelarea","noupdate","checkoutButton","add","style","display","remove","cost","dealWithZeroPrice","removeEventListener","body","isModalBackground","region","closestButton","isCloseAction","action","setTimeout","reload","success","key","strings","create","type","ModalFactory","types","SAVE_CANCEL","modal","setBody","setSaveButtonText","show","setTitle","getRoot","on","ModalEvents","save","startTimer","duration","minutes","seconds","timer","setInterval","textContent","countdownelement","delta","now","badge","buttons","shoppingcart","toFixed","initialtotal","initialtotal_net","discount","deductible","credit","remainingcredit","price_net","price_gross","i"],"mappings":"wsBA47B+BA,QAEvBA,OAAS,IACTA,OAAS,SAGPC,SAAWC,SAASC,cAAcC,8BAClCC,qBAAuBH,SAASC,cAAcC,gCAEhDH,WAAaA,SAASK,cACtBL,SAASK,aAAc,EACvBL,SAASM,iBAAiB,UAAUC,YAE5BC,oBAAqB,EACrBJ,uBACAI,mBAAqBJ,qBAAqBK,SAG1CF,MAAMG,cAAcD,QACpBE,iBAAiBZ,QAAQ,EAAMS,oBAE/BG,iBAAiBZ,QAAQ,EAAOS,wBAKxCJ,uBAAyBA,qBAAqBC,cAC9CD,qBAAqBC,aAAc,EAGnCO,QAAQC,IAAI,qCACZT,qBAAqBE,iBAAiB,UAAUC,QAG5CK,QAAQC,IAAIN,MAAMG,cAAeH,MAAMG,cAAcD,SAGrDG,QAAQC,IAAIb,cAERc,gBAAkB,KAClBd,WACAc,gBAAkBd,SAASS,SAG/BE,iBAAiBZ,OAAQe,gBAAiBP,MAAMG,cAAcD,+jBAh8B/DM,SAAW,oCACXC,gBAAiB,+CAStBb,0BAEe,sEAFfA,qBAGU,aAHVA,wBAIa,6BAJbA,0BAKe,+BALfA,qBAMU,2DANVA,oBAOS,2DAPTA,uBAQY,4CARZA,uBASY,6CATZA,6BAUkB,2CAVlBA,+BAWoB,iDAXpBA,yBAYc,kBAZdA,yBAac,sEAbdA,8BAcmB,0CAdnBA,sBAeW,4BAfXA,yBAgBc,sCAOC,CAACc,eAAgBC,WAElCC,UAAUF,eAAgBC,aAGtBE,WAAa,GACjBA,WAAanB,SAASoB,iBAAiBlB,0BACjC,IAAMA,uBACN,IAAMA,wBAEZiB,WAAWE,SAAQC,YAEfA,UAAUjB,iBAAiB,SAASC,cAG1BiB,QAAUjB,MAAMkB,UAElBD,QAAQE,UAAUC,SAASxB,sBAAuB,OAE5CJ,OAASyB,QAAQI,QAAQ7B,OAASyB,QAAQI,QAAQ7B,OAAS,EAC3D8B,UAAYL,QAAQI,QAAQC,UAC5BC,KAAON,QAAQI,QAAQE,KACvBC,OAASP,QAAQI,QAAQG,OAE/BC,WAAWD,OAAQF,UAAWC,KAAM/B,aAC7ByB,QAAQE,UAAUC,SAASxB,oDACpBI,OACPiB,QAAQE,UAAUC,SAASxB,0DAClBI,aAM5BN,SAASK,iBAAiB,oBAAoB,KACd,YAAxBL,SAASgC,YACTC,YAIc,GAAlBlB,gBACAf,SAASK,iBAAiB,oBAAoB,mCAC1CU,gBAAiB,EACgB,YAA7Bf,SAASkC,iBACTD,kBAMNE,cAAgBnC,SAASC,cAAcC,kCACzCiC,cAAe,CAKfC,qBAJa,CACTC,MAAOF,cAAcR,QAAQU,MAC7BC,SAAUH,cAAcR,QAAQW,WAGpCC,iCAGEC,kBAAoBxC,SAASC,cAAcC,uBAC7CsC,mBAAqBL,wBAk6BGK,kBAAmBL,eAE/CK,kBAAkBnC,iBAAiB,UAAUC,QACrCA,MAAMG,cAAcD,QACpB2B,cAAcM,UAAW,EAEzBN,cAAcM,UAAW,KAv6B7BC,CAAuBF,kBAAmBL,eAG9CQ,0BAGEA,iBAAmB,WAEfC,aAAe5C,SAASC,cAAcC,6BAExC0C,aAAc,OACRC,iBAAmB,IAAIC,qBACzBF,aACA,kDAGJC,iBAAiBxC,iBAAiB,UAAW0C,IAGzCpC,QAAQC,IAAImC,EAAEvB,OAAOhB,QAASuC,EAAEvB,OAAOwB,MAElCD,EAAEvB,OAAOwB,MAIO,YAAjBD,EAAEvB,OAAOwB,OACe,IAArBD,EAAEvB,OAAOhB,UAGZG,QAAQC,IAAImC,EAAEvB,OAAOyB,OAErBJ,iBAAiBK,qBAKzBL,iBAAiBxC,iBAAiBwC,iBAAiBM,OAAOC,gBAAgB,KAEtEP,iBAAiBQ,OAEjB1C,QAAQC,IAAI,kBAEZqB,cAMCqB,WAAa,CAACxB,OAAQF,UAAWC,KAAM/B,cAG3CgC,SAAWF,YAAcC,WAAmB0B,IAAXzD,OAAsB,OAClD0D,SAAW,sDACExD,SAASoB,iBACxBoC,UACOnC,SAAQoC,yCACT3B,OAAS2B,OAAO9B,QAAQG,OACxBD,KAAO4B,OAAO9B,QAAQE,KACtBD,UAAY6B,OAAO9B,QAAQC,cAC7B9B,qCAAS2D,OAAO9B,QAAQ7B,+DAAQ4D,OAASD,OAAO9B,QAAQ7B,OAAS,EACrEwD,WAAWxB,OAAQF,UAAWC,KAAM/B,WAO5CE,SAASoB,iBACL,oBACqBU,OADrB,sBAEwBF,UAFxB,iBAGmBC,KAHnB,6CAMIR,SAAQsC,kBAGZC,wBAAwBD,iBAGnBA,iBAA2D,SAAxCA,gBAAgBhC,QAAQvB,cAGhDuD,gBAAgBhC,QAAQvB,YAAc,OAIlCuD,gBAAgBhC,QAAQkC,MAK5BF,gBAAgBtD,iBAAiB,SAASC,QAEC,QAAnCqD,gBAAgBhC,QAAQmC,UAKxBH,gBAAgBlC,UAAUC,SAAS,aACnCpB,MAAMyD,iBACNzD,MAAM0D,mBAKNC,QAAQnC,OAAQF,UAAWC,KAAM/B,sDAapCmC,OAAS,eAACnC,8DAAS,gBAEvBoE,KAAK,CAAC,CACPC,WAAY,8CACZC,KAAM,CACFtE,OAAAA,QAEJuE,KAAM,SAASC,YAGLC,UAAYC,OAAOC,SAASC,KAAKC,QAAQ,eAG3CL,KAAKM,UADLL,UAAY,MAMZpD,WAAa,GAGbA,WADU,GAAVrB,QAAewE,KAAKM,UACP5E,SAASoB,iBAAiBlB,wBAE1BF,SAASoB,iBAAiBlB,0BACjC,IAAMA,4BAGZ2E,SAAW,GAGfC,4BAA4BR,MAG5BO,SAASE,KAAKC,mBAAUC,iBAAiB,0CAA2CX,MAAMY,MAAKC,WAACC,KAACA,KAADC,GAAOA,gBACnGlE,WAAWE,SAAQC,+BAELgE,oBAAoBhE,UAAW8D,KAAMC,QAE5C,KACRE,OAAOxC,IAENpC,QAAQC,IAAImC,OAGhByC,QAAQC,IAAIZ,UAAUK,MAAK,KAGP,GAAVpF,QAAewE,KAAKM,YACtBc,cAAc5E,UACdI,UAAUoD,KAAKtD,eAAgBsD,KAAKrD,SAEpC0E,YAAYrB,KAAKsB,QAGrBhC,0BAEAlD,iBAAiBZ,QAEjB+F,gBAAgBvB,SAEjBiB,OAAMxC,IAELpC,QAAQC,IAAImC,OAIpB+C,KAAMC,KAEFpF,QAAQC,IAAI,MAAQmF,kBAWvBF,gBAAgBvB,MACrBA,KAAK0B,MAAM3E,SAAQ4E,OACfjG,SAASoB,iBACL,iBACE6E,KAAKnE,OACL,sBACAmE,KAAKC,cACL,iBACAD,KAAKpE,KACL,8CACJR,SAAQE,UACiBA,QAAQ4E,QAAQ,mBACFlG,cAAc,sBACrCmG,UAAYH,KAAK5D,MAAQ,IAAM4D,KAAK3D,8DAWhC,eAACxC,8DAAS,gBAC/BoE,KAAK,CAAC,CACPC,WAAY,iDACZC,KAAM,QACQtE,QAEduE,KAAM,WACFpC,OAAO,IAEX6D,KAAM,SAASC,IAEXpF,QAAQC,IAAImF,eAKXhE,WAAa,CAACD,OAAQF,UAAWC,KAAM/B,wBAE3CoE,KAAK,CAAC,CACPC,WAAY,kCACZC,KAAM,QACQtC,iBACGF,eACLC,YACE/B,QAEduE,KAAM,SAASC,0BAED,eAAgB,sBAAuBA,KAAK+B,UAAUnB,MAAKoB,8CAChDA,QAAS,cAE3Bf,OAAMxC,IAELpC,QAAQC,IAAImC,MAGhBd,OAAOnC,kpBAIFoF,MAAKqB,MACFA,IAAIC,qBAEPjB,OAAMkB,MAGH9F,QAAQC,IAAI6F,SAIxBX,KAAM,WAEF7D,OAAOnC,kDAKNmE,QAAU,CAACnC,OAAQF,UAAWC,KAAM/B,UAExC4G,OAAOC,UAAU7G,UAClBA,OAAS8G,SAAS9G,uBAGjBoE,KAAK,CAAC,CACPC,WAAY,+BACZC,KAAM,MACMvC,eACKD,iBACHE,cACAhC,QAEduE,KAAM,SAASC,MACXA,KAAK1C,UAAYA,UACjB0C,KAAKzC,KAAOA,KACZyC,KAAKxC,OAASA,OACdwC,KAAKxE,OAASA,OACd+G,wBAAwBvC,OAE5BwB,KAAM,SAASC,IAEXpF,QAAQC,IAAI,QAASmF,QAEzB,mCASKrF,iBAAmB,eAACZ,8DAAS,EAAGgH,qEAAkBC,8EAGrDxC,UAAYC,OAAOC,SAASC,KAAKC,QAAQ,eAE3CJ,UAAY,IACZzE,QAtZY,GAyZX4G,OAAOC,UAAU7G,UAClBA,OAAS8G,SAAS9G,eAIhBkH,WAAahH,SAASoB,iBAAiBlB,8BAEpB,GAArB8G,WAAWC,OACXD,WAAW3F,SAAQtB,WACf+G,UAAY/G,SAASS,QAAU,EAAI,KAGvCsG,UAAYA,UAAY,EAAI,EAEhCC,gBAAkBA,gBAAkB,EAAI,gBAEnC7C,KAAK,CAAC,CACPC,WAAY,gCACZC,KAAM,CACFtE,OAAAA,OACAgH,UAAAA,UACAC,gBAAAA,iBAEJ1C,KAAM,SAASC,MAGW,GAAlBA,KAAKwC,UACLxC,KAAK4C,eAAiB,UAEtB5C,KAAK4C,eAAiB,GAG1B5C,KAAK6C,WAAaC,KAAKC,SAASC,SAAS,IAAIC,MAAM,EAAG,GAElDjD,KAAKkD,aAAaP,OAAS,IAC3B3C,KAAKmD,uBAAyB,IAAMnD,KAAK6C,YAG7C7C,KAAKxE,OAASA,aAER4H,WAAa1H,SAASoB,iBAAiBlB,0BAG7C4E,4BAA4BR,yBAElBW,iBAAiB,kCAAmCX,MAAMY,MAAKyC,YAACvC,KAACA,KAADC,GAAOA,iBAE7EqC,WAAWrG,SAAQuG,YAGVA,UAAUjG,QAAQkG,8BACTvC,oBAAoBsC,UAAWxC,KAAMC,IAC/CjD,qBAAqBkC,WAItB,KACRiB,OAAOxC,IAENpC,QAAQC,IAAImC,YAGV+E,eAAiB9H,SAASC,cAAcC,0BACxCiC,cAAgBnC,SAASC,cAAcC,+BAC3B,GAAdoE,KAAKsB,OACDkC,gBACAA,eAAerG,UAAUsG,IAAI,YAE7B5F,gBACAA,cAAc6F,MAAMC,QAAU,UAG9BH,gBACAA,eAAerG,UAAUyG,OAAO,YAEhC/F,gBACAA,cAAc6F,MAAMC,QAAU,YAI1CnC,KAAM,SAASC,IAEXpF,QAAQC,IAAI,QAASmF,QAEzB,aAOQ3D,qBAAqBkC,UAE7BnC,cAAgBnC,SAASC,cAAcC,kCAEvCiC,cAAe,IAEXA,cAAcV,UAAUC,SAAS,wBAEjCf,QAAQC,IAAI,yBAIVyB,MAAQiC,KAAKjC,MACbC,SAAWgC,KAAKhC,SAEtBH,cAAcR,QAAQwG,KAAO9F,MAAQ,IAAMC,SAE9B,GAATD,MACAF,cAAc9B,iBAAiB,QAAS+H,mBAExCjG,cAAckG,oBAAoB,QAASD,6BAQvC7F,2BACZvC,SAASsI,KAAKjI,iBAAiB,SAAS,SAASC,aAEvCkB,OAASlB,MAAMkB,OAEf+G,kBAA8C,oBAA1B/G,OAAOG,QAAQ6G,QAClChH,OAAOC,UAAUC,SAAS,QAG3B+G,cAAgBjH,OAAO2E,QAAQ,8BAE/BuC,cACFlH,OAAO2E,QAAQ,qCACdsC,eAA2C,WAA1BjH,OAAOG,QAAQgH,SAEjCJ,mBAAqBG,gBACrBE,YAAW,KACPnE,SAASoE,WACV,iBASChC,wBAAwBvC,aAQ5BA,KAAKwE,cAPmB,cASxB7G,cARkB,4BAWR,cAAe,sBAAuBqC,KAAK+B,UAAUnB,MAAKoB,8CAC/CA,QAAS,cAE3Bf,OAAMxC,IAELpC,QAAQC,IAAImC,WAEhBd,OAAOqC,KAAKxE,aAjBS,kCAoBV,CACP,CAACiJ,IAAK,aAAcnH,UAAW,uBAC/B,CAACmH,IAAK,KAAMnH,UAAW,UACxBsD,MAAK8D,iCAESC,OAAO,CAACC,KAAMC,uBAAaC,MAAMC,cAAcnE,MAAKoE,QAC7DA,MAAMC,QAAQP,QAAQ,IACtBM,MAAME,kBAAkBR,QAAQ,IAChCM,MAAMG,OACCH,SACR/D,OAAMxC,IAELpC,QAAQC,IAAImC,OAET,KACRwC,OAAMxC,IAELpC,QAAQC,IAAImC,WApCK,kCAwCV,CACP,CAACgG,IAAK,wBAAyBnH,UAAW,uBAC1C,CAACmH,IAAK,8BAA+BnH,UAAW,uBAChD,CAACmH,IAAK,KAAMnH,UAAW,UACxBsD,MAAK8D,iCAESC,OAAO,CAACC,KAAMC,uBAAaC,MAAMC,cAAcnE,MAAKoE,QAC7DA,MAAMI,SAASV,QAAQ,IACvBM,MAAMC,QAAQP,QAAQ,IACtBM,MAAME,kBAAkBR,QAAQ,IAChCM,MAAMG,OACCH,SACR/D,OAAMxC,IAELpC,QAAQC,IAAImC,OAET,KACRwC,OAAMxC,IAELpC,QAAQC,IAAImC,WA1DM,kCA8DX,CACP,CAACgG,IAAK,yBAA0BnH,UAAW,uBAC3C,CAACmH,IAAK,oBAAqBnH,UAAW,uBACtC,CAACmH,IAAK,KAAMnH,UAAW,UACxBsD,MAAK8D,iCAESC,OAAO,CAACC,KAAMC,uBAAaC,MAAMC,cAAcnE,MAAKoE,QAC7DA,MAAMI,SAASV,QAAQ,IACvBM,MAAMC,QAAQP,QAAQ,IACtBM,MAAME,kBAAkBR,QAAQ,IAGhCM,MAAMK,UAAUC,GAAGC,sBAAYC,MAAM,WACjCtF,OAAOC,SAASoE,YAGpBS,MAAMG,OACCH,SACR/D,OAAMxC,IAELpC,QAAQC,IAAImC,OAET,KACRwC,OAAMxC,IAELpC,QAAQC,IAAImC,WAtFQ,kCA0Fb,CACP,CAACgG,IAAK,2BAA4BnH,UAAW,uBAC7C,CAACmH,IAAK,sBAAuBnH,UAAW,uBACxC,CAACmH,IAAK,KAAMnH,UAAW,UACxBsD,MAAK8D,iCAESC,OAAO,CAACC,KAAMC,uBAAaC,MAAMC,cAAcnE,MAAKoE,QAC7DA,MAAMI,SAASV,QAAQ,IACvBM,MAAMC,QAAQP,QAAQ,IACtBM,MAAME,kBAAkBR,QAAQ,IAGhCM,MAAMK,UAAUC,GAAGC,sBAAYC,MAAM,WACjCtF,OAAOC,SAASoE,YAGpBS,MAAMG,OACCH,SACR/D,OAAMxC,IAELpC,QAAQC,IAAImC,OAET,KACRwC,OAAMxC,IAELpC,QAAQC,IAAImC,8CAIL,CACP,CAACgG,IAAK,yBAA0BnH,UAAW,uBAC3C,CAACmH,IAAK,KAAMnH,UAAW,UACxBsD,MAAK8D,iCAESC,OAAO,CAACC,KAAMC,uBAAaC,MAAMC,cAAcnE,MAAKoE,QAC7DA,MAAMC,QAAQP,QAAQ,IACtBM,MAAME,kBAAkBR,QAAQ,IAChCM,MAAMG,OACCH,SACR/D,OAAMxC,IAELpC,QAAQC,IAAImC,OAET,KACRwC,OAAMxC,IAELpC,QAAQC,IAAImC,sBAWbqF,kBAAkB9H,WAiFMiB,QA/EnCjB,MAAM0D,kBACN1D,MAAMyD,iBA8E6BxC,QA5ELjB,MAAMkB,4BA8EzB,CACP,CAACuH,IAAK,gCAAiCnH,UAAW,uBAClD,CAACmH,IAAK,+BAAgCnH,UAAW,uBACjD,CAACmH,IAAK,2BAA4BnH,UAAW,yBAE/CsD,MAAK8D,iCAEUC,OAAO,CAACC,KAAMC,uBAAaC,MAAMC,cAAcnE,MAAKoE,QAE7DA,MAAMI,SAASV,QAAQ,IACnBM,MAAMC,QAAQP,QAAQ,IACtBM,MAAME,kBAAkBR,QAAQ,IAChCM,MAAMK,UAAUC,GAAGC,sBAAYC,MAAM,iBAE3BhK,OAASyB,QAAQI,QAAQ7B,OAE3BA,oCAGeA,OAAQ,MAI/BwJ,MAAMG,OACCH,SACZ/D,OAAMxC,IAELpC,QAAQC,IAAImC,OAET,KACRwC,OAAMxC,IAELpC,QAAQC,IAAImC,eArGXgH,WAAWC,SAAU/B,aAGdgC,QACAC,QAFRC,MAAQH,2BAGZlJ,SAAWsJ,aAAY,WAEnBH,QAAUrD,SAASuD,MAAQ,GAAI,IAC/BD,QAAUtD,SAASuD,MAAQ,GAAI,IAE/BF,QAAUA,QAAU,GAAK,IAAMA,QAAUA,QACzCC,QAAUA,QAAU,GAAK,IAAMA,QAAUA,QAEzCjC,QAAQoC,YAAcJ,QAAU,IAAMC,UAEhCC,MAAQ,IAGVvB,YAAW,KACP3G,OAAO,KACR,KAKHyD,cAAc5E,aAEnB,cAWEI,gBAAUF,sEAAiB,KAAMC,+DAAU,WAE1CqJ,iBAAmBtK,SAASC,cAAcC,yBAE3CoK,mBAAqBrJ,eAItBH,UACA4E,cAAc5E,cAEdyJ,MAAQ,EACRC,IAAMvJ,QACND,iBACAuJ,MAASvJ,eAAiBwJ,KAE1BD,OAAS,GACTA,MAAQ,EACRD,iBAAiB7I,UAAUsG,IAAI,WACxBwC,MAAQ,IACfD,iBAAiB7I,UAAUyG,OAAO,UAClC6B,WAAWQ,MAAOD,4BAkDjB3E,YAAYC,aAEX6E,MAAQzK,SAASC,cAAcC,sBAEjC0F,MAAQ,GACR6E,MAAMrE,UAAYR,MAClB6E,MAAMhJ,UAAUyG,OAAO,YAEvBuC,MAAMrE,UAAYR,MAClB6E,MAAMhJ,UAAUsG,IAAI,oBAQnBnE,8BAAwBH,8DAAS,KAElCD,SAAW,GACX5B,UAAY,KACZC,KAAO,KACPC,OAAS,KAGT2B,QAGA3B,OAAS2B,OAAO9B,QAAQG,OACxBF,UAAY6B,OAAO9B,QAAQC,UAC3BC,KAAO4B,OAAO9B,QAAQE,KAEtB2B,SACI,oBACqB1B,OADrB,sBAEwBF,UAFxB,iBAGmBC,KAHnB,6CAQJ2B,SACA,mDAIEkH,QAAU1K,SAASoB,iBAAiBoC,cAGtCmH,aAAe3K,SAASC,cAAcC,wBAErCyK,eACDA,aAAe3K,SAASC,cAAcC,4BAG1CwK,QAAQrJ,SAAQsC,kBAEZ/B,UAAY+B,gBAAgBhC,QAAQC,UACpCC,KAAO8B,gBAAgBhC,QAAQE,KAC/BC,OAAS6B,gBAAgBhC,QAAQG,OAEhB6I,aAAa1K,cAAc,aAAe2B,UAAY,IAAMC,KAAO,IAAMC,OAAS,MAI/F6B,gBAAgBlC,UAAUsG,IAAI,YAG9BpE,gBAAgBlC,UAAUyG,OAAO,wBA+DpCpD,4BAA4BR,SAE7BA,KAAKjC,QACLiC,KAAKjC,MAAQqE,OAAOpC,KAAKjC,OAAOuI,QAAQ,IAExCtG,KAAKuG,eACLvG,KAAKuG,aAAenE,OAAOpC,KAAKuG,cAAcD,QAAQ,IAEtDtG,KAAKwG,mBAELxG,KAAKwG,iBAAmBpE,OAAOpC,KAAKwG,kBAAkBF,QAAQ,IAE9DtG,KAAKyG,WACLzG,KAAKyG,SAAWrE,OAAOpC,KAAKyG,UAAUH,QAAQ,IAE9CtG,KAAK0G,aACL1G,KAAK0G,WAAatE,OAAOpC,KAAK0G,YAAYJ,QAAQ,IAElDtG,KAAK2G,SACL3G,KAAK2G,OAASvE,OAAOpC,KAAK2G,QAAQL,QAAQ,IAE1CtG,KAAK4G,kBACL5G,KAAK4G,gBAAkBxE,OAAOpC,KAAK4G,iBAAiBN,QAAQ,IAE5DtG,KAAK6G,YAEL7G,KAAK6G,UAAYzE,OAAOpC,KAAK6G,WAAWP,QAAQ,IAEhDtG,KAAK8G,cAEL9G,KAAK8G,YAAc1E,OAAOpC,KAAK8G,aAAaR,QAAQ,IAEpDtG,KAAK0B,UACA,IAAIqF,EAAI,EAAGA,EAAI/G,KAAK0B,MAAMiB,OAAQoE,IAC/B/G,KAAK0B,MAAMqF,GAAGhJ,QACdiC,KAAK0B,MAAMqF,GAAGhJ,MAAQqE,OAAOpC,KAAK0B,MAAMqF,GAAGhJ,OAAOuI,QAAQ,IAE1DtG,KAAK0B,MAAMqF,GAAGD,cAEd9G,KAAK0B,MAAMqF,GAAGD,YAAc1E,OAAOpC,KAAK0B,MAAMqF,GAAGD,aAAaR,QAAQ,IAEtEtG,KAAK0B,MAAMqF,GAAGF,YAEd7G,KAAK0B,MAAMqF,GAAGF,UAAYzE,OAAOpC,KAAK0B,MAAMqF,GAAGF,WAAWP,QAAQ"}