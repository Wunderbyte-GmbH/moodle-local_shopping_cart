{"version":3,"file":"cart.min.js","sources":["../src/cart.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\n\nimport {confirmPayment} from 'local_shopping_cart/cashier';\nimport {addDiscountEvent} from 'local_shopping_cart/cashier';\nimport {showNotification} from 'local_shopping_cart/notifications';\n\nimport {\n    get_strings as getStrings\n        }\n        from 'core/str';\n\nexport var interval = null;\nexport var visbilityevent = false;\n\n\n\n// We need click listener on cart\n// Disabled should not be done by a check on cart, but either it's loaded via php, OR it is added right away with the click.\n// We should load the whole cart, including the price, with one function which always stays the same. (less css)\n\n\n\n\nconst SELECTORS = {\n    SHOPPING_CART_ITEM: '[data-item=\"shopping_cart_item\"]',\n    NAVBARCONTAINER: '#nav-shopping_cart-popover-container .shopping-cart-items-container',\n    TRASHCLASS: 'fa-trash-o',\n    BADGECOUNT: '#nav-shopping_cart-popover-container div.count-container',\n    COUNTDOWN: '#nav-shopping_cart-popover-container span.expirationdate',\n    CASHIERSCART: '#shopping_cart-cashiers-cart',\n    CHECKOUTCART: 'div.shopping-cart-checkout-items-container'\n};\n\nexport const buttoninit = (itemid, component) => {\n\n    // Return all buttons with the add to cart functionality.\n    const buttons =\n    document.querySelectorAll(\n        'button'\n        + '[data-itemid=\"' + itemid + '\"]'\n        + '[data-component=\"' + component + '\"]'\n        + '[data-objecttable=\"local_shopping_cart\"');\n\n    buttons.forEach(addtocartbutton => {\n\n        // We need to check all the buttons.\n        toggleActiveButtonState(addtocartbutton);\n\n        // We only ever initialize the button once.\n        if (!addtocartbutton || addtocartbutton.dataset.initialized === 'true') {\n            return;\n        }\n        addtocartbutton.dataset.initialized = 'true';\n\n        // Add click eventlistern to oneself.\n        addtocartbutton.addEventListener('click', event => {\n\n        // If we find the disabled class, the click event is aborted.\n        if (addtocartbutton.classList.contains('disabled')) {\n            return;\n        }\n            event.preventDefault();\n            event.stopPropagation();\n            addItem(itemid, component);\n        });\n    });\n\n    return;\n\n    // If there is no itemid, we browse the whole document and init all buttons individually.\n    if (!itemid) {\n        const buttons = document.querySelectorAll(SELECTORS.SHOPPING_CART_ITEM);\n        buttons.forEach(button => {\n            const number = button.itemid;\n            buttoninit(number, component);\n        });\n        return;\n    }\n\n    // We don't know how many instances of this peticular button are on the site. So we need to be agnostic.\n\n    // First we get the button and delete the helper-span to secure js loading.\n    const addtocartbutton = document.querySelector('#btn-' + component + '-' + itemid);\n\n    // If we don't find the button, we abort.\n    if (!addtocartbutton || addtocartbutton.dataset.initialized === 'true') {\n        return;\n    }\n    addtocartbutton.dataset.initialized = 'true';\n\n    // Make sure item is not yet in shopping cart. If so, add disabled class.\n    let shoppingcart = document.querySelector('#shopping_cart-cashiers-cart');\n\n    if (!shoppingcart) {\n        shoppingcart = document.querySelector('#nav-shopping_cart-popover-container');\n    }\n\n    if (shoppingcart) {\n        const cartitem = shoppingcart.querySelector('[id^=\"item-' + component + '-' + itemid + ']');\n        if (cartitem) {\n            addtocartbutton.classList.add('disabled');\n        }\n    }\n\n\n};\n\n/**\n *\n * @param {*} expirationdate\n */\n\n export const init = (expirationdate) => {\n\n    // We might have more than one container.\n    let containers = [];\n    containers.push(document.querySelector(SELECTORS.NAVBARCONTAINER));\n    containers.push(document.querySelector(SELECTORS.CHECKOUTCART));\n\n    containers.filter(x => x !== null).forEach(container => {\n\n        container.addEventListener('click', event => {\n\n            // Decide the target of the click.\n            const element = event.target;\n\n            if (element.classList.contains(SELECTORS.TRASHCLASS))  {\n\n                const userid = element.dataset.userid ? element.dataset.userid : 0;\n                const component = element.dataset.component;\n                const itemid = element.dataset.itemid;\n\n                deleteItem(itemid, component, userid);\n            }\n        });\n    });\n\n    if (visbilityevent == false) {\n        document.addEventListener(\"visibilitychange\", function() {\n            visbilityevent = true;\n            if (document.visibilityState === 'visible') {\n                reinit();\n            }\n        });\n    }\n\n    return;\n\n    // countdownelement = document.querySelector('.expirationdate');\n    initTimer(expirationdate);\n    if (visbilityevent == false) {\n        let items = document.querySelectorAll(SELECTORS.SHOPPING_CART_ITEM + ' .fa-trash-o');\n        items.forEach(item => {\n            addDeleteevent(item);\n        });\n\n        items = document.querySelectorAll(SELECTORS.SHOPPING_CART_ITEM + ' .fa-eur');\n        items.forEach(item => {\n            addDiscountEvent(item);\n        });\n\n    }\n    updateTotalPrice();\n};\n\n/**\n * Function to reload the cart. We can pass on the certain component if we need to make sure that not only the cart is reloaded.\n * This is the case when adding or deleting a certain item and a special button has to be reset.\n * @param {*} userid\n */\nexport const reinit = (userid = 0) => {\n\n    // eslint-disable-next-line no-console\n    console.log('reinit', userid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_shopping_cart_items\",\n        args: {\n        },\n        done: function(data) {\n            Templates.renderForPromise('local_shopping_cart/shopping_cart_items', data).then(({html, js}) => {\n\n                // We know we will always find the Navbar, so we can do this right away.\n                Templates.replaceNodeContents(SELECTORS.NAVBARCONTAINER, html, js);\n\n                const checkoutcontainer = document.querySelector(SELECTORS.CHECKOUTCART);\n\n                // eslint-disable-next-line no-console\n                console.log(checkoutcontainer);\n\n                // We know we will always find the Navbar, so we can do this right away.\n                Templates.replaceNodeContents(SELECTORS.CHECKOUTCART, html);\n\n                clearInterval(interval);\n                initTimer(data.expirationdate);\n\n                updateBadge(data.count);\n\n                toggleActiveButtonState();\n\n                return true;\n            }).catch((e) => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};\n\nexport const deleteAllItems = () => {\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_all_items_from_cart\",\n        args: {\n        },\n        done: function() {\n            let item = document.querySelectorAll(SELECTORS.SHOPPING_CART_ITEM);\n            item.forEach(item => {\n                if (item) {\n                    item.remove();\n                }\n            });\n\n            updateTotalPrice();\n\n            let itemcount1 = document.getElementById(\"countbadge\");\n            let itemcount2 = document.getElementById(\"itemcount\");\n\n            itemcount1.innerHTML = 0;\n            itemcount2.innerHTML = 0;\n            itemcount2.classList.add(\"hidden\");\n\n            // Make sure addtocartbutton active againe once the item is removed from the shopping cart.\n            const addtocartbutton = document.querySelectorAll('[id^=btn-].disabled');\n            addtocartbutton.forEach(btn => {\n                if (btn) {\n                    btn.classList.remove('disabled');\n                }\n            });\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(ex);\n        },\n    }]);\n};\n\nexport const deleteItem = (itemid, component, userid) => {\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_delete_item\",\n        args: {\n            'itemid': itemid,\n            'component': component,\n            'userid': userid\n        },\n        done: function() {\n\n            reinit(itemid, component);\n        },\n        fail: function() {\n\n            reinit();\n        },\n    }]);\n};\n\nexport const addItem = (itemid, component) => {\n\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    let userid = 0;\n    if (oncashier > 0) {\n        userid = -1;\n    }\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_add_item\",\n        args: {\n            'component': component,\n            'itemid': itemid,\n            'userid': userid\n        },\n        done: function(data) {\n            data.component = component;\n            data.itemid = itemid;\n            data.userid = data.buyforuser; // For the mustache template, we need to obey structure.\n\n            if (data.success != 1) {\n\n                showNotification(\"Cart is full\", 'danger');\n\n                return;\n            } else if (data.success == 1) {\n\n                showNotification(data.itemname + \" added to cart\", 'success');\n\n                // If we are on the cashier page, we add the possiblity to add a discount to the cart items.\n                const oncashier = window.location.href.indexOf(\"cashier.php\");\n                if (oncashier) {\n                    data.iscashier = true;\n                }\n\n                reinit(itemid, component);\n            }\n\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n *\n * @param {*} userid\n * @param {*} usecredit\n */\nexport const updateTotalPrice = (userid = 0, usecredit = true) => {\n\n    // eslint-disable-next-line no-console\n    console.log('updatetotalprice');\n\n    // First, get the state of usecredit.\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\n\n    let labelareas = null;\n    if (oncashier > 0) {\n        labelareas = document.querySelectorAll('div.sc_price_label');\n    } else {\n        labelareas = document.querySelectorAll('li.sc_price_label');\n    }\n\n    labelareas.forEach(element => {\n\n        // eslint-disable-next-line no-console\n        console.log(element);\n\n        // First we update the userid, if possible.\n        userid = element.dataset.userid ? element.dataset.userid : userid;\n\n        const checkbox = element.querySelector('input.usecredit-checkbox');\n\n        if (checkbox) {\n            if (checkbox.checked) {\n\n                // eslint-disable-next-line no-console\n                console.log('checked', checkbox.checked);\n                usecredit = checkbox.checked;\n            } else {\n                usecredit = 0;\n            }\n        }\n    });\n\n    usecredit = usecredit ? 1 : 0;\n\n    // eslint-disable-next-line no-console\n    console.log('usecredit before ajax', usecredit);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_get_price\",\n        args: {\n            userid,\n            usecredit\n        },\n        done: function(data) {\n\n            // We take the usecredit value we receive from the server.\n            if (data.usecredit == 1) {\n                data.usecreditclass = 'checked';\n            } else {\n                data.usecreditclass = '';\n            }\n\n            const initialtotal = data.initialtotal;\n\n            let shoppingcart = document.querySelector('#shopping_cart-cashiers-cart');\n            let cashierssection = null;\n            let checkoutcart = null;\n            let checkouttotals = null;\n\n            if (!shoppingcart) {\n                shoppingcart = document.querySelector('#nav-shopping_cart-popover-container');\n                checkoutcart = document.querySelector('div.checkoutgrid.checkout');\n                // eslint-disable-next-line no-console\n                console.log('1', checkoutcart);\n            } else {\n                cashierssection = document.querySelector('#shopping_cart-cashiers-section');\n            }\n\n            let totals = [];\n            if (cashierssection) {\n                totals = cashierssection.querySelectorAll('.initialtotal');\n            } else {\n                // First we add the total price from navbar.\n                totals = shoppingcart.querySelectorAll('.initialtotal');\n\n                // If we are on the checkout site, we deal with the totals there separately.\n                if (checkoutcart) {\n                    checkouttotals = checkoutcart.querySelectorAll('.initialtotal');\n\n                    if (checkouttotals) {\n                        checkouttotals.forEach(total => {\n                            total.innerHTML = initialtotal;\n                        });\n                    }\n                }\n            }\n\n            let paymentbutton = document.querySelector(\".shopping_cart_payment_region button\");\n\n            if (paymentbutton) {\n\n                const price = data.price;\n                const currency = data.currency;\n\n                // eslint-disable-next-line no-console\n                console.log(\"paymentbutton\", price, currency);\n\n                paymentbutton.dataset.cost = price + \" \" + currency;\n\n                if (price == 0) {\n                    // eslint-disable-next-line no-console\n                    console.log('price is 0');\n                    paymentbutton.addEventListener('click', dealWithZeroPrice);\n                } else {\n                    // eslint-disable-next-line no-console\n                    console.log('price is not 0');\n                    paymentbutton.removeEventListener('click', dealWithZeroPrice);\n                }\n            }\n\n            // Run through the list of total prices and set them to the right one.\n            totals.forEach(total => {\n                total.innerHTML = initialtotal;\n            });\n\n            data.checkboxid = Math.random().toString(36).slice(2, 5);\n\n            Templates.renderForPromise('local_shopping_cart/price_label', data).then(({html}) => {\n                labelareas.forEach(element => {\n                    // First, clean all children.\n                    let child = element.lastElementChild;\n                    while (child) {\n                        element.removeChild(child);\n                        child = element.lastElementChild;\n                    }\n                    element.insertAdjacentHTML(\"afterbegin\", html);\n\n                    const checkbox = element.querySelector('input.usecredit-checkbox');\n\n                    if (checkbox) {\n                        checkbox.addEventListener('change', event => {\n\n                            // eslint-disable-next-line no-console\n                            console.log(event);\n\n                            updateTotalPrice(userid);\n                        });\n                    }\n\n                });\n                return true;\n            }).catch((e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            }));\n\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log('error', ex);\n        }\n    }], true);\n};\n\n/**\n *\n * @param {*} event\n */\nfunction dealWithZeroPrice(event) {\n\n    // eslint-disable-next-line no-console\n    console.log('onlymyclickcounts');\n\n        event.stopPropagation();\n        event.preventDefault();\n        // eslint-disable-next-line no-console\n        console.log('onlymyclickcounts', event.target);\n\n        confirmZeroPriceCheckoutModal(event.target);\n}\n\n/**\n * Delete Event.\n * @param {HTMLElement} item\n * @param {int} userid\n */\nfunction addDeleteevent(item, userid = 0) {\n    if (userid !== 0) {\n        item.dataset.userid = '' + userid;\n    }\n    item.addEventListener('click', deleteEvent);\n}\n\n/**\n * Function called in listener.\n */\nfunction deleteEvent() {\n        const item = this;\n        // eslint-disable-next-line no-console\n        console.log('item', item);\n        // Item comes as #item-booking-213123.\n        const itemid = item.dataset.itemid;\n        const component = item.dataset.component;\n        let userid = item.dataset.userid;\n        if (!userid) {\n            userid = 0;\n        }\n        deleteItem(itemid, component, userid);\n    }\n\n/**\n * Start the timer.\n *\n * @param {integer} duration\n * @param {integer} display\n */\nfunction startTimer(duration, display) {\n\n    var timer = duration,\n                minutes,\n                seconds;\n    interval = setInterval(function() {\n\n        minutes = parseInt(timer / 60, 10);\n        seconds = parseInt(timer % 60, 10);\n\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n        display.textContent = minutes + \":\" + seconds;\n\n        if (--timer < 0) {\n            deleteAllItems();\n\n            clearInterval(interval);\n        }\n    }, 1000);\n}\n\n\n/**\n * Initialize Timer.\n *\n * @param {integer} expirationdate\n *\n */\nfunction initTimer(expirationdate = null) {\n\n    const countdownelement = document.querySelector(SELECTORS.COUNTDOWN);\n    if (interval) {\n        clearInterval(interval);\n    }\n    let delta = 0;\n    let now = Date.now('UTC');\n    now = (new Date()).getTime() / 1000;\n    if (expirationdate) {\n        delta = (expirationdate - now);\n    }\n    if (delta <= 0) {\n        delta = 0;\n        countdownelement.classList.add(\"hidden\");\n    } else if (delta > 0) {\n        countdownelement.classList.remove(\"hidden\");\n        startTimer(delta, countdownelement);\n    }\n}\n\n/**\n *\n * @param {*} element\n */\n function confirmZeroPriceCheckoutModal(element) {\n\n    getStrings([\n        {key: 'confirmzeropricecheckouttitle', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckoutbody', component: 'local_shopping_cart'},\n        {key: 'confirmzeropricecheckout', component: 'local_shopping_cart'}\n    ]\n    ).then(strings => {\n\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n                modal.setBody(strings[1]);\n                modal.setSaveButtonText(strings[2]);\n                modal.getRoot().on(ModalEvents.save, function() {\n\n                    const userid = element.dataset.userid;\n\n                    // eslint-disable-next-line no-console\n                    console.log(userid);\n\n                    if (userid) {\n                        confirmPayment(userid);\n                    }\n                });\n\n                modal.show();\n                return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n * Function to update the page in the nav bar.\n * @param {*} count\n */\nfunction updateBadge(count) {\n\n    const badge = document.querySelector(SELECTORS.BADGECOUNT);\n\n    if (count > 0) {\n        badge.innerHTML = count;\n        badge.classList.remove('hidden');\n    } else {\n        badge.innerHTML = count;\n        badge.classList.add('hidden');\n    }\n}\n\n/**\n * Function to toggle the active state.\n * @param {*} button\n */\nfunction toggleActiveButtonState(button = null) {\n\n    // eslint-disable-next-line no-console\n    console.log('toggleActiveButtonState');\n\n    let selector = '';\n    let component = null;\n    let itemid = null;\n\n    // If we have a button, we only look for this particular itemid.\n    if (button) {\n\n        // We'll find the right variables in the DOM.\n        itemid = button.dataset.itemid;\n        component = button.dataset.component;\n\n        selector =\n            'button'\n            + '[data-itemid=\"' + itemid + '\"]'\n            + '[data-component=\"' + component + '\"]'\n            + '[data-objecttable=\"local_shopping_cart\"';\n    } else {\n        // As we might have more than one of these buttons, we always need to look for all of them in the document.\n        // We will update for all the buttons we find.\n        selector =\n        'button'\n        + '[data-objecttable=\"local_shopping_cart\"';\n    }\n\n    const buttons = document.querySelectorAll(selector);\n\n    // Make sure item is not yet in shopping cart. If so, add disabled class.\n    let shoppingcart = document.querySelector(SELECTORS.CASHIERSCART);\n\n    if (!shoppingcart) {\n        shoppingcart = document.querySelector(SELECTORS.NAVBARCONTAINER);\n    }\n\n    buttons.forEach(addtocartbutton => {\n\n        component = addtocartbutton.dataset.component;\n        itemid = addtocartbutton.dataset.itemid;\n\n        const cartitem = shoppingcart.querySelector('[id^=\"item-' + component + '-' + itemid + '\"]');\n\n        if (cartitem) {\n\n            addtocartbutton.classList.add('disabled');\n        } else {\n\n            addtocartbutton.classList.remove('disabled');\n        }\n    });\n}"],"names":["interval","visbilityevent","SELECTORS","buttoninit","itemid","component","document","querySelectorAll","forEach","addtocartbutton","toggleActiveButtonState","dataset","initialized","addEventListener","event","classList","contains","preventDefault","stopPropagation","addItem","expirationdate","containers","push","querySelector","filter","x","container","element","target","userid","deleteItem","visibilityState","reinit","console","log","call","methodname","args","done","data","renderForPromise","then","_ref","html","js","replaceNodeContents","checkoutcontainer","clearInterval","initTimer","updateBadge","count","catch","e","fail","ex","deleteAllItems","item","remove","updateTotalPrice","itemcount1","getElementById","itemcount2","innerHTML","add","btn","window","location","href","indexOf","buyforuser","success","itemname","iscashier","usecredit","oncashier","labelareas","checkbox","checked","usecreditclass","initialtotal","shoppingcart","cashierssection","checkoutcart","checkouttotals","totals","total","paymentbutton","price","currency","cost","dealWithZeroPrice","removeEventListener","checkboxid","Math","random","toString","slice","_ref2","child","lastElementChild","removeChild","insertAdjacentHTML","key","strings","create","type","ModalFactory","types","SAVE_CANCEL","modal","setTitle","setBody","setSaveButtonText","getRoot","on","ModalEvents","save","show","startTimer","duration","display","minutes","seconds","timer","setInterval","parseInt","textContent","countdownelement","delta","now","Date","getTime","badge","button","selector","buttons"],"mappings":"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"}