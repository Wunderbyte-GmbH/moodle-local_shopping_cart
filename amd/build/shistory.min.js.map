{"version":3,"file":"shistory.min.js","sources":["../src/shistory.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nimport {updateTotalPrice, buttoninit} from 'local_shopping_cart/cart';\n\nimport {\n    get_string as getString,\n    get_strings as getStrings\n        }\n        from 'core/str';\nimport Notification from 'core/notification';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport ModalForm from 'core_form/modalform';\n\nexport const init = (cancelationFee = null) => {\n\n    // eslint-disable-next-line no-console\n    console.log('init shopping cart history');\n\n    const buttons = document.querySelectorAll(\".cashier-history-items .shopping_cart_history_cancel_button\");\n\n    buttons.forEach(button => {\n\n        if (!button.dataset.initialized) {\n\n            if (button.dataset.canceled == true) {\n                setButtonToCanceled(button);\n            } else {\n                button.addEventListener('click', event => {\n\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    if (button.dataset.canceled == false) {\n                        // eslint-disable-next-line no-console\n                        console.log('button clicked');\n\n                        // We find out if we are on the cachiers page. Only there, we set the cachiers modal.\n\n                        if (window.location.href.includes('cashier.php')) {\n                            confirmCancelAndSetCreditModal(button);\n                        } else {\n                            // We only add the functionality if we got a cancelation fee.\n                            if (cancelationFee !== null) {\n                                confirmCancelModal(button, cancelationFee);\n                            }\n                        }\n                    }\n\n                });\n            }\n            button.dataset.initialized = true;\n        }\n    });\n\n    const elements = document.querySelectorAll('button.shopping_cart_history_paidback_button');\n\n    elements.forEach(element => {\n\n        // eslint-disable-next-line no-console\n        console.log('initialize paid back', element);\n\n        if (!element.dataset.initialized) {\n            element.addEventListener('click', event => {\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                 // eslint-disable-next-line no-console\n                 console.log('button clicked');\n                 confirmPaidBackModal(element);\n            });\n            element.dataset.initialized = true;\n        }\n    });\n};\n\n/**\n * This triggers the ajax call to acutally cancel the purchase.\n * @param {int} itemid\n * @param {int} userid\n * @param {string} componentname\n * @param {int} historyid\n * @param {string} currency\n * @param {string} price\n * @param {string} credit\n * @param {type} button\n */\nfunction cancelPurchase(itemid, userid, componentname, historyid, currency, price, credit, button) {\n\n    // eslint-disable-next-line no-console\n    console.log('button clicked', historyid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_cancel_purchase\",\n        args: {\n            'itemid': itemid,\n            'componentname': componentname,\n            'userid': userid,\n            'historyid': historyid,\n            'credit': credit\n        },\n        done: function(data) {\n\n            // eslint-disable-next-line no-console\n            console.log(data);\n\n            if (data.success == 1) {\n\n                getString('cancelsuccess', 'local_shopping_cart').then(message => {\n\n                    Notification.addNotification({\n                        message,\n                        type: \"success\"\n                    });\n\n                    setTimeout(() => {\n                        let notificationslist = document.querySelectorAll('#user-notifications div.alert');\n                        const notificatonelement = notificationslist[notificationslist.length - 1];\n                        notificatonelement.remove();\n                    }, 5000);\n\n                    return;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n\n                // eslint-disable-next-line no-console\n                console.log('data returned', data.success);\n                setButtonToCanceled(button);\n\n                showCredit(data.credit, currency, userid);\n\n                // Make sure addtocartbutton active againe once the item is removed from the shopping cart.\n                const addtocartbutton = document.querySelector('#btn-' + componentname + '-' + itemid);\n\n                // If there is not addtocartbutton, we have to add it anew.\n                if (!addtocartbutton) {\n\n                    data.itemid = itemid;\n                    data.componentname = componentname;\n                    data.price = price;\n\n                    Templates.renderForPromise('local_shopping_cart/addtocartdb', data).then(({html}) => {\n\n                        // Get parentelement.\n                        let parent = document.querySelector('span.price_' + componentname + \"_\" + itemid);\n                        parent.textContent = price + \" \" + currency;\n\n                        if (parent) {\n                            parent.insertAdjacentHTML('beforeend', html);\n                        }\n\n                        buttoninit(itemid, componentname);\n                        return true;\n                    }).catch((e) => {\n                        // eslint-disable-next-line no-console\n                        console.log(e);\n                    });\n                } else {\n                     // eslint-disable-next-line no-console\n                     console.log(addtocartbutton);\n                     addtocartbutton.classList.remove('disabled');\n                     addtocartbutton.dataset.initialized = false;\n                     buttoninit(itemid, componentname);\n                }\n\n            } else {\n                getString('canceldidntwork', 'local_shopping_cart').then(message => {\n\n                    Notification.addNotification({\n                        message,\n                        type: \"danger\"\n                    });\n\n                    setTimeout(() => {\n                        let notificationslist = document.querySelectorAll('#user-notifications div.alert');\n                        const notificatonelement = notificationslist[notificationslist.length - 1];\n                        notificatonelement.remove();\n                    }, 5000);\n\n                    return;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n            }\n\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n\n}\n\n/**\n * Function to change classes and text of button.\n * @param {*} button\n */\nfunction setButtonToCanceled(button) {\n\n    button.classList.add('disabled');\n    button.classList.remove('btn-primary');\n    button.classList.add('btn-danger');\n    button.dataset.canceled = true;\n\n    getString('canceled', 'local_shopping_cart').then(result => {\n        // eslint-disable-next-line no-console\n        console.log(result);\n\n        button.innerText = result;\n        return;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n *\n * @param {string} credit\n * @param {string} currency\n * @param {int} userid\n */\nfunction showCredit(credit, currency, userid) {\n\n    let creditelement = document.querySelector('li.shopping_cart_history_paidback');\n\n    if (creditelement) {\n        creditelement.classList.remove('hidden');\n\n        let credittotalelement = creditelement.querySelector('span.credit_total');\n\n        credittotalelement.textContent = credit;\n\n    } else {\n\n        let data = {\n            'currency': currency,\n            'credit': credit,\n            'userid': userid\n        };\n\n        Templates.renderForPromise('local_shopping_cart/credit_item', data).then(({html}) => {\n\n            // Get parentelement.\n            let parent = document.querySelector('ul.cashier-history-items');\n\n            parent.insertAdjacentHTML('afterbegin', html);\n\n            // We rerun init after insert, to make sure we have the right value.\n            init();\n            return true;\n        }).catch((e) => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n    }\n    // We also need to call the udpateTotalPrice function from this place to make sure everything is uptodate.\n    updateTotalPrice();\n}\n\n/**\n *\n * @param {*} element\n */\nfunction confirmPaidBack(element) {\n    const userid = element.dataset.userid;\n    Ajax.call([{\n        methodname: \"local_shopping_cart_credit_paid_back\",\n        args: {\n            userid\n        },\n        done: function(data) {\n\n            // eslint-disable-next-line no-console\n            console.log(data, userid);\n\n            let creditelement = document.querySelector('.credit_total');\n\n            creditelement.textContent = 0;\n\n            // We hide the creditelement once we have paid back everything.\n            let licreditelement = document.querySelector('.shopping_cart_history_paidback');\n            licreditelement.classList.add('hidden');\n\n            Notification.addNotification({\n                message: \"Credit paid back\",\n                type: \"success\"\n            });\n            setTimeout(() => {\n                let notificationslist = document.querySelectorAll('#user-notifications div.alert.alert-success');\n                const notificatonelement = notificationslist[notificationslist.length - 1];\n                notificatonelement.remove();\n            }, 5000);\n\n             // We also need to call the udpateTotalPrice function from this place to make sure everything is uptodate.\n            updateTotalPrice();\n            return;\n        },\n        fail: function(ex) {\n        // eslint-disable-next-line no-console\n        console.log(\"ex:\" + ex);\n        },\n    }]);\n}\n\n/**\n *\n * @param {*} button\n * @param {*} cancelationFee\n */\nfunction confirmCancelModal(button, cancelationFee) {\n\n    getStrings([\n            {key: 'confirmcanceltitle', component: 'local_shopping_cart'},\n            {key: 'confirmcancelbodyuser', component: 'local_shopping_cart', param: cancelationFee},\n            {key: 'cancelpurchase', component: 'local_shopping_cart'}\n        ]\n        ).then(strings => {\n\n            ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n                modal.setTitle(strings[0]);\n                    modal.setBody(strings[1]);\n                    modal.setSaveButtonText(strings[2]);\n                    modal.getRoot().on(ModalEvents.save, function() {\n\n                        // eslint-disable-next-line no-console\n                        console.log('we saved');\n\n                        const historyid = button.dataset.historyid;\n                        const itemid = button.dataset.itemid;\n                        const userid = button.dataset.userid;\n                        const currency = button.dataset.currency;\n                        const componentname = button.dataset.componentname;\n                        const price = button.dataset.price;\n\n                        cancelPurchase(itemid, userid, componentname, historyid, currency, price, 0, button);\n                    });\n\n                    modal.show();\n                    return modal;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n            return true;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n}\n\n/**\n *\n * @param {*} button\n */\nfunction confirmCancelAndSetCreditModal(button) {\n\n    const price = button.dataset.price;\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_cancel_addcredit\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {'credit': price},\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('confirmcanceltitle', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: button,\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        window.console.log(e.detail);\n\n        const historyid = button.dataset.historyid;\n        const itemid = button.dataset.itemid;\n        const userid = button.dataset.userid;\n        const currency = button.dataset.currency;\n        const componentname = button.dataset.componentname;\n\n        const credit = e.detail.credit ?? \"\";\n\n        cancelPurchase(itemid, userid, componentname, historyid, currency, price, credit, button);\n    });\n\n    // Show the form.\n    modalForm.show();\n}\n\n/**\n *\n * @param {*} element\n */\nfunction confirmPaidBackModal(element) {\n\n    getStrings([\n        {key: 'confirmpaidbacktitle', component: 'local_shopping_cart'},\n        {key: 'confirmpaidbackbody', component: 'local_shopping_cart'},\n        {key: 'confirmpaidback', component: 'local_shopping_cart'}\n    ]\n    ).then(strings => {\n\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n                modal.setBody(strings[1]);\n                modal.setSaveButtonText(strings[2]);\n                modal.getRoot().on(ModalEvents.save, function() {\n\n                    // eslint-disable-next-line no-console\n                    console.log('we saved');\n\n                    confirmPaidBack(element);\n                });\n\n                modal.show();\n                return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}"],"names":["init","cancelationFee","console","log","buttons","document","querySelectorAll","forEach","button","dataset","initialized","canceled","setButtonToCanceled","addEventListener","event","preventDefault","stopPropagation","window","location","href","includes","confirmCancelAndSetCreditModal","confirmCancelModal","elements","element","confirmPaidBackModal","cancelPurchase","itemid","userid","componentname","historyid","currency","price","credit","call","methodname","args","done","data","success","then","message","addNotification","type","setTimeout","notificationslist","length","remove","catch","e","creditelement","querySelector","classList","textContent","renderForPromise","_ref2","html","insertAdjacentHTML","showCredit","addtocartbutton","_ref","parent","fail","ex","add","result","innerText","key","component","param","strings","create","ModalFactory","types","SAVE_CANCEL","modal","setTitle","setBody","setSaveButtonText","getRoot","on","ModalEvents","save","show","modalForm","ModalForm","formClass","modalConfig","title","returnFocus","events","FORM_SUBMITTED","detail","confirmPaidBack"],"mappings":"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"}