{"version":3,"file":"shistory.min.js","sources":["../src/shistory.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nimport {updateTotalPrice, buttoninit} from 'local_shopping_cart/cart';\n\nimport {\n    get_string as getString,\n    get_strings as getStrings\n        }\n        from 'core/str';\nimport {showNotification} from 'local_shopping_cart/notifications';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport ModalForm from 'core_form/modalform';\n\nconst SELECTORS = {\n    CANCELBUTTON: '.cashier-history-items .shopping_cart_history_cancel_button',\n    PAIDBACKBUTTON: 'button.shopping_cart_history_paidback_button',\n    CREDITSMANAGER: 'button.shopping_cart_history_creditsmanager',\n    REBOOKBUTTON: '.shopping_cart_history_rebook_button',\n};\n\n// Little hack to get strings at top-level although getString is asynchronous.\nlet creditsmanagersuccess = 'success';\nlet notenoughcredits = 'notenoughcredits';\n(async() => {\n    creditsmanagersuccess = await getString('creditsmanagersuccess', 'local_shopping_cart');\n    notenoughcredits = await getString('notenoughcredits', 'local_shopping_cart');\n})();\n\nexport const init = (cancelationFee = null) => {\n\n    const buttons = document.querySelectorAll(SELECTORS.CANCELBUTTON);\n\n    buttons.forEach(button => {\n\n        if (!button.dataset.initialized) {\n\n            if (button.dataset.canceled == true) {\n                setButtonToCanceled(button);\n            } else {\n                button.addEventListener('click', event => {\n\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    if (button.dataset.canceled == false) {\n\n                        // We find out if we are on the cashiers page. Only there, we set the cashiers modal.\n\n                        if (window.location.href.includes('cashier.php')) {\n                            confirmCancelAndSetCreditModal(button);\n                        } else {\n                            // We only add the functionality if we got a cancelation fee.\n                            confirmCancelModal(button, cancelationFee);\n                        }\n                    }\n\n                });\n            }\n            button.dataset.initialized = true;\n        }\n    });\n\n    const elements = document.querySelectorAll(SELECTORS.PAIDBACKBUTTON);\n\n    elements.forEach(element => {\n\n        if (!element.dataset.initialized) {\n            element.addEventListener('click', event => {\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                confirmPaidBackModal(element);\n            });\n            element.dataset.initialized = true;\n        }\n    });\n\n    // Credits manager button.\n    const creditsmanagerbtn = document.querySelectorAll(SELECTORS.CREDITSMANAGER);\n    creditsmanagerbtn.forEach(btn => {\n        if (!btn.dataset.initialized) {\n            btn.addEventListener('click', event => {\n                event.preventDefault();\n                event.stopPropagation();\n                openCreditsManagerModal(btn);\n            });\n            btn.dataset.initialized = true;\n        }\n    });\n\n    // Mark for rebooking button.\n    const rebookbuttons = document.querySelectorAll(SELECTORS.REBOOKBUTTON);\n    rebookbuttons.forEach(btn => {\n        if (!btn.dataset.initialized) {\n            btn.addEventListener('click', event => {\n                event.preventDefault();\n                event.stopPropagation();\n                markforrebooking(btn);\n            });\n            btn.dataset.initialized = true;\n        }\n    });\n};\n\n/**\n * This triggers the ajax call to acutally cancel the purchase.\n * @param {int} itemid\n * @param {string} area\n * @param {int} userid\n * @param {string} componentname\n * @param {int} historyid\n * @param {string} currency\n * @param {string} price\n * @param {string} credit\n * @param {type} button\n */\nexport function cancelPurchase(itemid, area, userid, componentname, historyid, currency, price, credit, button) {\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_cancel_purchase\",\n        args: {\n            'itemid': itemid,\n            'componentname': componentname,\n            'area': area,\n            'userid': userid,\n            'historyid': historyid,\n            'credit': credit\n        },\n        done: function(data) {\n\n            if (data.success == 1) {\n\n                getString('cancelsuccess', 'local_shopping_cart').then(message => {\n\n                    showNotification(message, \"success\");\n\n                    return;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n\n                if (!button) {\n                    import('local_wunderbyte_table/reload')\n                    // eslint-disable-next-line promise/always-return\n                    .then(wbt => {\n                        wbt.reloadAllTables();\n                    })\n                    .catch(err => {\n                            // Handle any errors, including if the module doesn't exist\n                            // eslint-disable-next-line no-console\n                            console.log(err);\n                    });\n                    return;\n                }\n                setButtonToCanceled(button);\n\n                showCredit(data.credit, currency, userid);\n\n                // Make sure addtocartbutton active againe once the item is removed from the shopping cart.\n                const addtocartbutton = document.querySelector('#btn-' + componentname + '-' + itemid);\n\n                // If there is not addtocartbutton, we have to add it anew.\n                if (!addtocartbutton) {\n\n                    data.itemid = itemid;\n                    data.componentname = componentname;\n                    data.price = Number(price).toFixed(2); // Creates a string with two decimals.\n\n                    Templates.renderForPromise('local_shopping_cart/addtocartdb', data).then(({html}) => {\n\n                        // Get parentelement.\n                        let parent = document.querySelector('span.price_' + componentname + \"_\" + itemid);\n                        parent.textContent = price + \" \" + currency;\n\n                        if (parent) {\n                            parent.insertAdjacentHTML('beforeend', html);\n                        }\n\n                        buttoninit(itemid, componentname);\n                        return true;\n                    }).catch((e) => {\n                        // eslint-disable-next-line no-console\n                        console.log(e);\n                    });\n                } else {\n\n                     addtocartbutton.classList.remove('disabled');\n                     addtocartbutton.dataset.initialized = false;\n                     buttoninit(itemid, componentname);\n                }\n\n            } else {\n                getString('canceldidntwork', 'local_shopping_cart').then(message => {\n\n                    showNotification(message, \"danger\");\n\n                    return;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n            }\n\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n\n}\n\n/**\n * Function to change classes and text of button.\n * @param {*} button\n */\nfunction setButtonToCanceled(button) {\n\n    button.classList.add('disabled');\n    button.classList.remove('btn-primary');\n    button.classList.add('btn-danger');\n    button.dataset.canceled = true;\n\n    getString('canceled', 'local_shopping_cart').then(result => {\n\n        button.innerText = result;\n        return;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n *\n * @param {string} credit\n * @param {string} currency\n * @param {int} userid\n */\nfunction showCredit(credit, currency, userid) {\n\n    let creditelement = document.querySelector('li.shopping_cart_history_paidback');\n\n    if (creditelement) {\n        creditelement.classList.remove('hidden');\n\n        let credittotalelement = creditelement.querySelector('span.credit_total');\n\n        credittotalelement.textContent = credit;\n\n    } else {\n\n        let data = {\n            'currency': currency,\n            'credit': Number(credit).toFixed(2), // Creates a string with two decimals.\n            'userid': userid\n        };\n\n        Templates.renderForPromise('local_shopping_cart/credit_item', data).then(({html}) => {\n\n            // Get parentelement.\n            let parent = document.querySelector('ul.cashier-history-items');\n\n            parent.insertAdjacentHTML('afterbegin', html);\n\n            // We rerun init after insert, to make sure we have the right value.\n            init();\n            return true;\n        }).catch((e) => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n    }\n    // We also need to call the udpateTotalPrice function from this place to make sure everything is uptodate.\n    updateTotalPrice();\n}\n\n/**\n *\n * @param {*} element\n */\nfunction confirmPaidBack(element) {\n    const userid = element.dataset.userid;\n    const method = element.dataset.method;\n    Ajax.call([{\n        methodname: \"local_shopping_cart_credit_paid_back\",\n        args: {\n            userid,\n            method\n        },\n        done: function(data) {\n\n            // eslint-disable-next-line no-console\n            console.log(data);\n\n            let creditelement = document.querySelector('.credit_total');\n\n            creditelement.textContent = 0;\n\n            // We hide the creditelement once we have paid back everything.\n            let licreditelements = document.querySelectorAll('.shopping_cart_history_paidback');\n\n            licreditelements.forEach(licreditelement => licreditelement.classList.add('hidden'));\n\n            getString('creditpaidback', 'local_shopping_cart').then(message => {\n\n                showNotification(message, 'success');\n\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n             // We also need to call the udpateTotalPrice function from this place to make sure everything is uptodate.\n            updateTotalPrice();\n            return;\n        },\n        fail: function(ex) {\n        // eslint-disable-next-line no-console\n        console.log(\"ex:\" + ex);\n        },\n    }]);\n}\n\n/**\n *\n * @param {*} button\n * @param {*} cancelationFee\n */\nexport async function confirmCancelModal(button, cancelationFee) {\n\n    // eslint-disable-next-line no-console\n    console.log(button);\n\n    // If we have no price, but there are all the other values on the button...\n    // ... we first fetch the necessary data.\n    if (!button.dataset.hasOwnProperty('price')) {\n        await new Promise(function(resolve, reject) {\n            Ajax.call([{\n                methodname: 'local_shopping_cart_get_history_item',\n                args: {\n                    'itemid': button.dataset.itemid,\n                    'componentname': button.dataset.componentname,\n                    'area': button.dataset.area,\n                    'userid': button.dataset.userid,\n                },\n                done: function(data) {\n\n                    // eslint-disable-next-line no-console\n                    console.log(data);\n\n                    if (!data.success == 1) {\n                        resolve(data);\n                        return;\n                    }\n\n                    button.dataset.historyid = data.id;\n                    button.dataset.price = data.price;\n                    button.dataset.credit = 0;\n                    button.dataset.currency = data.currency;\n                    button.dataset.quotaconsumed = data.quotaconsumed;\n                    button.dataset.round = data.round;\n                    cancelationFee = data.cancelationfee;\n                    button.dataset.buttontonull = true;\n\n                    resolve(data);\n                },\n                fail: ex => {\n                    // eslint-disable-next-line no-console\n                    console.log(\"failed to load information for modal: \" + JSON.stringify(ex));\n                    reject(ex);\n                }\n            }]);\n        });\n    }\n    if (!button.dataset.hasOwnProperty('price')) {\n        getString('canceldidntwork', 'local_shopping_cart').then(message => {\n\n            showNotification(message, \"danger\");\n\n            return;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return;\n    }\n\n    // Before showing the cancel modal, we need to gather some information and pass it to the string.\n    if (cancelationFee === null) {\n        cancelationFee = 0;\n    }\n\n    const price = parseFloat(button.dataset.price);\n    // Quota consumed is always on two deciamals.\n    const quotaconsumed = parseFloat(button.dataset.quotaconsumed);\n\n    const deducedvalue = price * quotaconsumed;\n    const credit = price - deducedvalue - cancelationFee;\n    const currency = button.dataset.currency;\n    // We always round percentages.\n    const percentage = Math.round(quotaconsumed * 100);\n\n    const params = {\n        quotaconsumed: quotaconsumed.toFixed(2),\n        percentage: percentage + '%',\n        currency: currency,\n        deducedvalue: deducedvalue,\n    };\n\n    const roundvalues = button.dataset.round;\n    if (roundvalues) {\n        params.price = Math.round(price);\n        params.credit = Math.round(credit);\n        params.cancelationfee = Math.round(cancelationFee);\n        params.deducedvalue = Math.round(deducedvalue);\n    } else {\n        params.price = price.toFixed(2);\n        params.credit = credit.toFixed(2);\n        params.cancelationfee = cancelationFee.toFixed(2);\n        params.deducedvalue = deducedvalue.toFixed(2);\n    }\n\n    let bodystring = 'confirmcancelbodyuser';\n    if (quotaconsumed > 0 && quotaconsumed < 1) {\n        bodystring = 'confirmcancelbodyuserconsumption';\n    } else if (quotaconsumed == 1) {\n        bodystring = 'confirmcancelbodyusernocredit';\n    }\n\n    // Finally, make sure that we don't have negative values.\n    if (params.credit < 0) {\n        params.cancelationFee = 0 - params.credit; // Will be between 0 and cancelationfee.\n        params.credit = 0;\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(params);\n\n    getStrings([\n            {key: 'confirmcanceltitle', component: 'local_shopping_cart'},\n            {key: bodystring, component: 'local_shopping_cart', param: params},\n            {key: 'cancelpurchase', component: 'local_shopping_cart'}\n        ]\n    ).then(strings => {\n        // eslint-disable-next-line promise/no-nesting\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n            modal.setBody(strings[1]);\n            modal.setSaveButtonText(strings[2]);\n            modal.getRoot().on(ModalEvents.save, function() {\n\n                const historyid = button.dataset.historyid;\n                const itemid = button.dataset.itemid;\n                const userid = button.dataset.userid;\n                const currency = button.dataset.currency;\n                const componentname = button.dataset.componentname;\n                const area = button.dataset.area;\n                const price = button.dataset.price;\n\n                if (button.dataset.buttontonull) {\n                    button = null;\n                }\n\n                cancelPurchase(itemid, area, userid, componentname, historyid, currency, price, 0, button);\n            });\n\n            modal.show();\n            return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n *\n * @param {*} button\n */\nfunction confirmCancelAndSetCreditModal(button) {\n\n    const price = button.dataset.price;\n    const historyid = button.dataset.historyid;\n    const itemid = button.dataset.itemid;\n    const userid = button.dataset.userid;\n    const currency = button.dataset.currency;\n    const componentname = button.dataset.componentname;\n    const area = button.dataset.area;\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_cancel_addcredit\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {'price': price,\n               'historyid': historyid,\n               'itemid': itemid,\n               'userid': userid,\n               'currency': currency,\n               'componentname': componentname,\n               'area': area},\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('confirmcanceltitle', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: button\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        const response = e.detail;\n        // eslint-disable-next-line no-console\n        console.log(response);\n\n        const url = new URL(window.location.href);\n        url.searchParams.append('userid', userid);\n        window.location.replace(url.toString());\n    });\n\n    // Show the form.\n    modalForm.show();\n}\n\n/**\n *\n * @param {*} element\n */\nfunction confirmPaidBackModal(element) {\n\n    getStrings([\n        {key: 'confirmpaidbacktitle', component: 'local_shopping_cart'},\n        {key: 'confirmpaidbackbody', component: 'local_shopping_cart'},\n        {key: 'confirmpaidback', component: 'local_shopping_cart'}\n    ]\n    ).then(strings => {\n        // eslint-disable-next-line promise/no-nesting\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n                modal.setBody(strings[1]);\n                modal.setSaveButtonText(strings[2]);\n                modal.getRoot().on(ModalEvents.save, function() {\n\n                    confirmPaidBack(element);\n                });\n\n                modal.show();\n                return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n * Open the credits manager modal.\n * @param {htmlElement} button\n */\nfunction openCreditsManagerModal(button) {\n    // eslint-disable-next-line no-console\n    console.log('credits-managermodal');\n\n    const modalForm = new ModalForm({\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_creditsmanager\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {\n            userid: button.dataset.userid\n        },\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('creditsmanager', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: button\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        const response = e.detail;\n\n        if (response.error && response.error == 'notenoughcredits') {\n            showNotification(notenoughcredits, 'danger');\n        } else {\n            // eslint-disable-next-line no-console\n            console.log('credits-manager-modal response: ', response);\n            showNotification(creditsmanagersuccess, 'info');\n            setTimeout(function() {\n                reload(e.detail.userid);\n            }, 1500);\n        }\n    });\n\n    // Show the form.\n    modalForm.show();\n}\n\n/**\n * Mark booking options for rebooking.\n * @param {htmlElement} button\n */\nfunction markforrebooking(button) {\n\n    // eslint-disable-next-line no-console\n    console.log(button);\n\n    const historyid = button.dataset.historyid;\n    const userid = button.dataset.userid;\n\n    Ajax.call([{\n        methodname: 'local_shopping_cart_mark_item_for_rebooking',\n        args: {\n            historyid,\n            userid\n        },\n        done: function(data) {\n\n            // eslint-disable-next-line no-console\n            console.log(data);\n            window.location.reload();\n\n        },\n        fail: ex => {\n            // eslint-disable-next-line no-console\n            console.log(\"local_shopping_cart_mark_item_for_rebooking failed: \" + JSON.stringify(ex));\n        },\n    }]);\n}\n\n/**\n * Function to reload current page with get param userid.\n * @param {*} userid\n */\nfunction reload(userid) {\n    const url = new URL(window.location.href);\n\n    url.searchParams.delete('userid');\n    url.searchParams.append('userid', userid);\n    window.location.href = url.toString();\n}"],"names":["_ajax","_interopRequireDefault","_templates","_modal_factory","_modal_events","_modalform","_systemImportTransformerGlobalIdentifier","window","self","global","obj","__esModule","default","SELECTORS","creditsmanagersuccess","notenoughcredits","getString","init","cancelationFee","arguments","length","undefined","document","querySelectorAll","forEach","button","dataset","initialized","canceled","setButtonToCanceled","addEventListener","event","preventDefault","stopPropagation","location","href","includes","price","historyid","itemid","userid","currency","componentname","area","modalForm","ModalForm","formClass","args","modalConfig","title","returnFocus","events","FORM_SUBMITTED","e","response","detail","console","log","url","URL","searchParams","append","replace","toString","show","confirmCancelAndSetCreditModal","confirmCancelModal","element","getStrings","key","component","then","strings","ModalFactory","create","type","types","SAVE_CANCEL","modal","setTitle","setBody","setSaveButtonText","getRoot","on","ModalEvents","save","method","Ajax","call","methodname","done","data","querySelector","textContent","licreditelement","classList","add","message","showNotification","catch","updateTotalPrice","fail","ex","confirmPaidBack","confirmPaidBackModal","btn","error","setTimeout","delete","reload","openCreditsManagerModal","JSON","stringify","markforrebooking","cancelPurchase","credit","success","define","amd","Promise","resolve","reject","require","module","exports","loader","wbt","reloadAllTables","err","creditelement","remove","Number","toFixed","Templates","renderForPromise","_ref2","html","insertAdjacentHTML","showCredit","addtocartbutton","buttoninit","_ref","parent","result","innerText","async","hasOwnProperty","id","quotaconsumed","round","cancelationfee","buttontonull","parseFloat","deducedvalue","percentage","Math","params","bodystring","param","_exports"],"mappings":"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"}