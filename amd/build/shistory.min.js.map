{"version":3,"sources":["../src/shistory.js"],"names":["init","buttons","document","querySelectorAll","forEach","button","dataset","initialized","canceled","setButtonToCanceled","addEventListener","event","preventDefault","stopPropagation","console","log","confirmCancelAndSetCreditModal","elements","element","confirmPaidBackModal","cancelPurchase","itemid","userid","componentname","historyid","currency","price","credit","Ajax","call","methodname","args","done","data","success","then","message","Notification","addNotification","type","setTimeout","notificationslist","notificatonelement","length","remove","catch","e","showCredit","addtocartbutton","querySelector","Templates","renderForPromise","html","parent","textContent","insertAdjacentHTML","classList","fail","ex","add","result","innerText","creditelement","credittotalelement","confirmPaidBack","licreditelement","modalForm","ModalForm","formClass","modalConfig","title","returnFocus","events","FORM_SUBMITTED","window","detail","show","key","component","strings","ModalFactory","create","types","SAVE_CANCEL","modal","setTitle","setBody","setSaveButtonText","getRoot","on","ModalEvents","save"],"mappings":"iTAqBA,OACA,OASA,OACA,OACA,OACA,O,mDAEO,GAAMA,CAAAA,CAAI,CAAG,UAAM,CAEtB,GAAMC,CAAAA,CAAO,CAAGC,QAAQ,CAACC,gBAAT,CAA0B,sEAA1B,CAAhB,CAEAF,CAAO,CAACG,OAAR,CAAgB,SAAAC,CAAM,CAAI,CAEtB,GAAI,CAACA,CAAM,CAACC,OAAP,CAAeC,WAApB,CAAiC,CAE7B,GAAI,IAAAF,CAAM,CAACC,OAAP,CAAeE,QAAnB,CAAqC,CACjCC,CAAmB,CAACJ,CAAD,CACtB,CAFD,IAEO,CACHA,CAAM,CAACK,gBAAP,CAAwB,OAAxB,CAAiC,SAAAC,CAAK,CAAI,CAEtCA,CAAK,CAACC,cAAN,GACAD,CAAK,CAACE,eAAN,GAEA,GAAI,IAAAR,CAAM,CAACC,OAAP,CAAeE,QAAnB,CAAsC,CAElCM,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAIAC,CAA8B,CAACX,CAAD,CAEjC,CAEJ,CAfD,CAgBH,CACDA,CAAM,CAACC,OAAP,CAAeC,WAAf,GACH,CACJ,CA1BD,EA4BA,GAAMU,CAAAA,CAAQ,CAAGf,QAAQ,CAACC,gBAAT,CAA0B,8CAA1B,CAAjB,CAEAc,CAAQ,CAACb,OAAT,CAAiB,SAAAc,CAAO,CAAI,CAGxBJ,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAoCG,CAApC,EAEA,GAAI,CAACA,CAAO,CAACZ,OAAR,CAAgBC,WAArB,CAAkC,CAC9BW,CAAO,CAACR,gBAAR,CAAyB,OAAzB,CAAkC,SAAAC,CAAK,CAAI,CAEvCA,CAAK,CAACC,cAAN,GACAD,CAAK,CAACE,eAAN,GAGCC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACAI,CAAoB,CAACD,CAAD,CACxB,CARD,EASAA,CAAO,CAACZ,OAAR,CAAgBC,WAAhB,GACH,CACJ,CAjBD,CAkBH,CApDM,C,SAiEP,QAASa,CAAAA,CAAT,CAAwBC,CAAxB,CAAgCC,CAAhC,CAAwCC,CAAxC,CAAuDC,CAAvD,CAAkEC,CAAlE,CAA4EC,CAA5E,CAAmFC,CAAnF,CAA2FtB,CAA3F,CAAmG,CAG/FS,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BS,CAA9B,EAEAI,UAAKC,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,qCADL,CAEPC,IAAI,CAAE,CACF,OAAUV,CADR,CAEF,cAAiBE,CAFf,CAGF,OAAUD,CAHR,CAIF,UAAaE,CAJX,CAKF,OAAUG,CALR,CAFC,CASPK,IAAI,CAAE,cAASC,CAAT,CAAe,CAGjBnB,OAAO,CAACC,GAAR,CAAYkB,CAAZ,EAEA,GAAoB,CAAhB,EAAAA,CAAI,CAACC,OAAT,CAAuB,CAEnB,iBAAU,eAAV,CAA2B,qBAA3B,EAAkDC,IAAlD,CAAuD,SAAAC,CAAO,CAAI,CAE9DC,UAAaC,eAAb,CAA6B,CACzBF,OAAO,CAAPA,CADyB,CAEzBG,IAAI,CAAE,SAFmB,CAA7B,EAKAC,UAAU,CAAC,UAAM,IACTC,CAAAA,CAAiB,CAAGvC,QAAQ,CAACC,gBAAT,CAA0B,+BAA1B,CADX,CAEPuC,CAAkB,CAAGD,CAAiB,CAACA,CAAiB,CAACE,MAAlB,CAA2B,CAA5B,CAF/B,CAGbD,CAAkB,CAACE,MAAnB,EACH,CAJS,CAIP,GAJO,CAOb,CAdD,EAcGC,KAdH,CAcS,SAAAC,CAAC,CAAI,CAEVhC,OAAO,CAACC,GAAR,CAAY+B,CAAZ,CACH,CAjBD,EAoBAhC,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA6BkB,CAAI,CAACC,OAAlC,EACAzB,CAAmB,CAACJ,CAAD,CAAnB,CAEA0C,CAAU,CAACd,CAAI,CAACN,MAAN,CAAcF,CAAd,CAAwBH,CAAxB,CAAV,CAGA,GAAM0B,CAAAA,CAAe,CAAG9C,QAAQ,CAAC+C,aAAT,CAAuB,QAAU1B,CAAV,CAA0B,GAA1B,CAAgCF,CAAvD,CAAxB,CAGA,GAAI,CAAC2B,CAAL,CAAsB,CAElBf,CAAI,CAACZ,MAAL,CAAcA,CAAd,CACAY,CAAI,CAACV,aAAL,CAAqBA,CAArB,CACAU,CAAI,CAACP,KAAL,CAAaA,CAAb,CAEAwB,UAAUC,gBAAV,CAA2B,iCAA3B,CAA8DlB,CAA9D,EAAoEE,IAApE,CAAyE,WAAY,IAAViB,CAAAA,CAAU,GAAVA,IAAU,CAG7EC,CAAM,CAAGnD,QAAQ,CAAC+C,aAAT,CAAuB,cAAgB1B,CAAhB,CAAgC,GAAhC,CAAsCF,CAA7D,CAHoE,CAIjFgC,CAAM,CAACC,WAAP,CAAqB5B,CAAK,CAAG,GAAR,CAAcD,CAAnC,CAEA,GAAI4B,CAAJ,CAAY,CACRA,CAAM,CAACE,kBAAP,CAA0B,WAA1B,CAAuCH,CAAvC,CACH,CAED,iBAAW/B,CAAX,CAAmBE,CAAnB,EACA,QACH,CAZD,EAYGsB,KAZH,CAYS,SAACC,CAAD,CAAO,CAEZhC,OAAO,CAACC,GAAR,CAAY+B,CAAZ,CACH,CAfD,CAgBH,CAtBD,IAsBO,CAEFhC,OAAO,CAACC,GAAR,CAAYiC,CAAZ,EACAA,CAAe,CAACQ,SAAhB,CAA0BZ,MAA1B,CAAiC,UAAjC,EACAI,CAAe,CAAC1C,OAAhB,CAAwBC,WAAxB,IACA,iBAAWc,CAAX,CAAmBE,CAAnB,CACJ,CAEJ,CA7DD,IA6DO,CACH,iBAAU,iBAAV,CAA6B,qBAA7B,EAAoDY,IAApD,CAAyD,SAAAC,CAAO,CAAI,CAEhEC,UAAaC,eAAb,CAA6B,CACzBF,OAAO,CAAPA,CADyB,CAEzBG,IAAI,CAAE,QAFmB,CAA7B,EAKAC,UAAU,CAAC,UAAM,IACTC,CAAAA,CAAiB,CAAGvC,QAAQ,CAACC,gBAAT,CAA0B,+BAA1B,CADX,CAEPuC,CAAkB,CAAGD,CAAiB,CAACA,CAAiB,CAACE,MAAlB,CAA2B,CAA5B,CAF/B,CAGbD,CAAkB,CAACE,MAAnB,EACH,CAJS,CAIP,GAJO,CAOb,CAdD,EAcGC,KAdH,CAcS,SAAAC,CAAC,CAAI,CAEVhC,OAAO,CAACC,GAAR,CAAY+B,CAAZ,CACH,CAjBD,CAkBH,CAEJ,CAhGM,CAiGPW,IAAI,CAAE,cAASC,CAAT,CAAa,CAEf5C,OAAO,CAACC,GAAR,CAAY,MAAQ2C,CAApB,CACH,CApGM,CAAD,CAAV,CAuGH,CAMD,QAASjD,CAAAA,CAAT,CAA6BJ,CAA7B,CAAqC,CAEjCA,CAAM,CAACmD,SAAP,CAAiBG,GAAjB,CAAqB,UAArB,EACAtD,CAAM,CAACmD,SAAP,CAAiBZ,MAAjB,CAAwB,aAAxB,EACAvC,CAAM,CAACmD,SAAP,CAAiBG,GAAjB,CAAqB,YAArB,EACAtD,CAAM,CAACC,OAAP,CAAeE,QAAf,IAEA,iBAAU,UAAV,CAAsB,qBAAtB,EAA6C2B,IAA7C,CAAkD,SAAAyB,CAAM,CAAI,CAExD9C,OAAO,CAACC,GAAR,CAAY6C,CAAZ,EAEAvD,CAAM,CAACwD,SAAP,CAAmBD,CAEtB,CAND,EAMGf,KANH,CAMS,SAAAC,CAAC,CAAI,CAEVhC,OAAO,CAACC,GAAR,CAAY+B,CAAZ,CACH,CATD,CAUH,CAQD,QAASC,CAAAA,CAAT,CAAoBpB,CAApB,CAA4BF,CAA5B,CAAsCH,CAAtC,CAA8C,CAE1C,GAAIwC,CAAAA,CAAa,CAAG5D,QAAQ,CAAC+C,aAAT,CAAuB,mCAAvB,CAApB,CAEA,GAAIa,CAAJ,CAAmB,CACfA,CAAa,CAACN,SAAd,CAAwBZ,MAAxB,CAA+B,QAA/B,EAEA,GAAImB,CAAAA,CAAkB,CAAGD,CAAa,CAACb,aAAd,CAA4B,mBAA5B,CAAzB,CAEAc,CAAkB,CAACT,WAAnB,CAAiC3B,CAEpC,CAPD,IAOO,CAQHuB,UAAUC,gBAAV,CAA2B,iCAA3B,CANW,CACP,SAAY1B,CADL,CAEP,OAAUE,CAFH,CAGP,OAAUL,CAHH,CAMX,EAAoEa,IAApE,CAAyE,WAAY,IAAViB,CAAAA,CAAU,GAAVA,IAAU,CAG7EC,CAAM,CAAGnD,QAAQ,CAAC+C,aAAT,CAAuB,0BAAvB,CAHoE,CAKjFI,CAAM,CAACE,kBAAP,CAA0B,YAA1B,CAAwCH,CAAxC,EAGApD,CAAI,GACJ,QACH,CAVD,EAUG6C,KAVH,CAUS,SAACC,CAAD,CAAO,CAEZhC,OAAO,CAACC,GAAR,CAAY+B,CAAZ,CACH,CAbD,CAcH,CAED,wBACH,CAMD,QAASkB,CAAAA,CAAT,CAAyB9C,CAAzB,CAAkC,CAC9B,GAAMI,CAAAA,CAAM,CAAGJ,CAAO,CAACZ,OAAR,CAAgBgB,MAA/B,CACAM,UAAKC,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,sCADL,CAEPC,IAAI,CAAE,CACFT,MAAM,CAANA,CADE,CAFC,CAKPU,IAAI,CAAE,cAASC,CAAT,CAAe,CAGjBnB,OAAO,CAACC,GAAR,CAAYkB,CAAZ,CAAkBX,CAAlB,EAEA,GAAIwC,CAAAA,CAAa,CAAG5D,QAAQ,CAAC+C,aAAT,CAAuB,eAAvB,CAApB,CAEAa,CAAa,CAACR,WAAd,CAA4B,CAA5B,CAGA,GAAIW,CAAAA,CAAe,CAAG/D,QAAQ,CAAC+C,aAAT,CAAuB,iCAAvB,CAAtB,CACAgB,CAAe,CAACT,SAAhB,CAA0BG,GAA1B,CAA8B,QAA9B,EAEAtB,UAAaC,eAAb,CAA6B,CACzBF,OAAO,CAAE,kBADgB,CAEzBG,IAAI,CAAE,SAFmB,CAA7B,EAIAC,UAAU,CAAC,UAAM,IACTC,CAAAA,CAAiB,CAAGvC,QAAQ,CAACC,gBAAT,CAA0B,6CAA1B,CADX,CAEPuC,CAAkB,CAAGD,CAAiB,CAACA,CAAiB,CAACE,MAAlB,CAA2B,CAA5B,CAF/B,CAGbD,CAAkB,CAACE,MAAnB,EACH,CAJS,CAIP,GAJO,CAAV,CAOA,wBAEH,CA/BM,CAgCPa,IAAI,CAAE,cAASC,CAAT,CAAa,CAEnB5C,OAAO,CAACC,GAAR,CAAY,MAAQ2C,CAApB,CACC,CAnCM,CAAD,CAAV,CAqCH,CAoDD,QAAS1C,CAAAA,CAAT,CAAwCX,CAAxC,CAAgD,IAEtCqB,CAAAA,CAAK,CAAGrB,CAAM,CAACC,OAAP,CAAeoB,KAFe,CAItCwC,CAAS,CAAG,GAAIC,UAAJ,CAAc,CAG5BC,SAAS,CAAE,mDAHiB,CAK5BrC,IAAI,CAAE,CAAC,OAAUL,CAAX,CALsB,CAO5B2C,WAAW,CAAE,CAACC,KAAK,CAAE,iBAAU,oBAAV,CAAgC,qBAAhC,CAAR,CAPe,CAS5BC,WAAW,CAAElE,CATe,CAAd,CAJ0B,CAiB5C6D,CAAS,CAACxD,gBAAV,CAA2BwD,CAAS,CAACM,MAAV,CAAiBC,cAA5C,CAA4D,SAAC3B,CAAD,CAAO,OAC/D4B,MAAM,CAAC5D,OAAP,CAAeC,GAAf,CAAmB+B,CAAC,CAAC6B,MAArB,EAD+D,GAGzDnD,CAAAA,CAAS,CAAGnB,CAAM,CAACC,OAAP,CAAekB,SAH8B,CAIzDH,CAAM,CAAGhB,CAAM,CAACC,OAAP,CAAee,MAJiC,CAKzDC,CAAM,CAAGjB,CAAM,CAACC,OAAP,CAAegB,MALiC,CAMzDG,CAAQ,CAAGpB,CAAM,CAACC,OAAP,CAAemB,QAN+B,CAOzDF,CAAa,CAAGlB,CAAM,CAACC,OAAP,CAAeiB,aAP0B,CASzDI,CAAM,WAAGmB,CAAC,CAAC6B,MAAF,CAAShD,MAAZ,gBAAsB,EAT6B,CAW/DP,CAAc,CAACC,CAAD,CAASC,CAAT,CAAiBC,CAAjB,CAAgCC,CAAhC,CAA2CC,CAA3C,CAAqDC,CAArD,CAA4DC,CAA5D,CAAoEtB,CAApE,CACjB,CAZD,EAeA6D,CAAS,CAACU,IAAV,EACH,CAMD,QAASzD,CAAAA,CAAT,CAA8BD,CAA9B,CAAuC,CAEnC,kBAAW,CACP,CAAC2D,GAAG,CAAE,sBAAN,CAA8BC,SAAS,CAAE,qBAAzC,CADO,CAEP,CAACD,GAAG,CAAE,qBAAN,CAA6BC,SAAS,CAAE,qBAAxC,CAFO,CAGP,CAACD,GAAG,CAAE,iBAAN,CAAyBC,SAAS,CAAE,qBAApC,CAHO,CAAX,EAKE3C,IALF,CAKO,SAAA4C,CAAO,CAAI,CAEdC,UAAaC,MAAb,CAAoB,CAAC1C,IAAI,CAAEyC,UAAaE,KAAb,CAAmBC,WAA1B,CAApB,EAA4DhD,IAA5D,CAAiE,SAAAiD,CAAK,CAAI,CAEtEA,CAAK,CAACC,QAAN,CAAeN,CAAO,CAAC,CAAD,CAAtB,EACIK,CAAK,CAACE,OAAN,CAAcP,CAAO,CAAC,CAAD,CAArB,EACAK,CAAK,CAACG,iBAAN,CAAwBR,CAAO,CAAC,CAAD,CAA/B,EACAK,CAAK,CAACI,OAAN,GAAgBC,EAAhB,CAAmBC,UAAYC,IAA/B,CAAqC,UAAW,CAG5C7E,OAAO,CAACC,GAAR,CAAY,UAAZ,EAEAiD,CAAe,CAAC9C,CAAD,CAClB,CAND,EAQAkE,CAAK,CAACR,IAAN,GACA,MAAOQ,CAAAA,CACd,CAfD,EAeGvC,KAfH,CAeS,SAAAC,CAAC,CAAI,CAEVhC,OAAO,CAACC,GAAR,CAAY+B,CAAZ,CACH,CAlBD,EAmBA,QACH,CA3BD,EA2BGD,KA3BH,CA2BS,SAAAC,CAAC,CAAI,CAEVhC,OAAO,CAACC,GAAR,CAAY+B,CAAZ,CACH,CA9BD,CA+BH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nimport {updateTotalPrice, buttoninit} from 'local_shopping_cart/cart';\n\nimport {\n    get_string as getString,\n    get_strings as getStrings\n        }\n        from 'core/str';\nimport Notification from 'core/notification';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport ModalForm from 'core_form/modalform';\n\nexport const init = () => {\n\n    const buttons = document.querySelectorAll(\"#shopping_cart-cashiers-section .shopping_cart_history_cancel_button\");\n\n    buttons.forEach(button => {\n\n        if (!button.dataset.initialized) {\n\n            if (button.dataset.canceled == true) {\n                setButtonToCanceled(button);\n            } else {\n                button.addEventListener('click', event => {\n\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    if (button.dataset.canceled == false) {\n                        // eslint-disable-next-line no-console\n                        console.log('button clicked');\n\n                        // confirmCancelModal(button);\n\n                        confirmCancelAndSetCreditModal(button);\n\n                    }\n\n                });\n            }\n            button.dataset.initialized = true;\n        }\n    });\n\n    const elements = document.querySelectorAll('button.shopping_cart_history_paidback_button');\n\n    elements.forEach(element => {\n\n        // eslint-disable-next-line no-console\n        console.log('initialize paid back', element);\n\n        if (!element.dataset.initialized) {\n            element.addEventListener('click', event => {\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                 // eslint-disable-next-line no-console\n                 console.log('button clicked');\n                 confirmPaidBackModal(element);\n            });\n            element.dataset.initialized = true;\n        }\n    });\n};\n\n/**\n * This triggers the ajax call to acutally cancel the purchase.\n * @param {int} itemid\n * @param {int} userid\n * @param {string} componentname\n * @param {int} historyid\n * @param {string} currency\n * @param {string} price\n * @param {string} credit\n * @param {type} button\n */\nfunction cancelPurchase(itemid, userid, componentname, historyid, currency, price, credit, button) {\n\n    // eslint-disable-next-line no-console\n    console.log('button clicked', historyid);\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_cancel_purchase\",\n        args: {\n            'itemid': itemid,\n            'componentname': componentname,\n            'userid': userid,\n            'historyid': historyid,\n            'credit': credit\n        },\n        done: function(data) {\n\n            // eslint-disable-next-line no-console\n            console.log(data);\n\n            if (data.success == 1) {\n\n                getString('cancelsuccess', 'local_shopping_cart').then(message => {\n\n                    Notification.addNotification({\n                        message,\n                        type: \"success\"\n                    });\n\n                    setTimeout(() => {\n                        let notificationslist = document.querySelectorAll('#user-notifications div.alert');\n                        const notificatonelement = notificationslist[notificationslist.length - 1];\n                        notificatonelement.remove();\n                    }, 5000);\n\n                    return;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n\n                // eslint-disable-next-line no-console\n                console.log('data returned', data.success);\n                setButtonToCanceled(button);\n\n                showCredit(data.credit, currency, userid);\n\n                // Make sure addtocartbutton active againe once the item is removed from the shopping cart.\n                const addtocartbutton = document.querySelector('#btn-' + componentname + '-' + itemid);\n\n                // If there is not addtocartbutton, we have to add it anew.\n                if (!addtocartbutton) {\n\n                    data.itemid = itemid;\n                    data.componentname = componentname;\n                    data.price = price;\n\n                    Templates.renderForPromise('local_shopping_cart/addtocartdb', data).then(({html}) => {\n\n                        // Get parentelement.\n                        let parent = document.querySelector('span.price_' + componentname + \"_\" + itemid);\n                        parent.textContent = price + \" \" + currency;\n\n                        if (parent) {\n                            parent.insertAdjacentHTML('beforeend', html);\n                        }\n\n                        buttoninit(itemid, componentname);\n                        return true;\n                    }).catch((e) => {\n                        // eslint-disable-next-line no-console\n                        console.log(e);\n                    });\n                } else {\n                     // eslint-disable-next-line no-console\n                     console.log(addtocartbutton);\n                     addtocartbutton.classList.remove('disabled');\n                     addtocartbutton.dataset.initialized = false;\n                     buttoninit(itemid, componentname);\n                }\n\n            } else {\n                getString('canceldidntwork', 'local_shopping_cart').then(message => {\n\n                    Notification.addNotification({\n                        message,\n                        type: \"danger\"\n                    });\n\n                    setTimeout(() => {\n                        let notificationslist = document.querySelectorAll('#user-notifications div.alert');\n                        const notificatonelement = notificationslist[notificationslist.length - 1];\n                        notificatonelement.remove();\n                    }, 5000);\n\n                    return;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n            }\n\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n\n}\n\n/**\n * Function to change classes and text of button.\n * @param {*} button\n */\nfunction setButtonToCanceled(button) {\n\n    button.classList.add('disabled');\n    button.classList.remove('btn-primary');\n    button.classList.add('btn-danger');\n    button.dataset.canceled = true;\n\n    getString('canceled', 'local_shopping_cart').then(result => {\n        // eslint-disable-next-line no-console\n        console.log(result);\n\n        button.innerText = result;\n        return;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n *\n * @param {string} credit\n * @param {string} currency\n * @param {int} userid\n */\nfunction showCredit(credit, currency, userid) {\n\n    let creditelement = document.querySelector('li.shopping_cart_history_paidback');\n\n    if (creditelement) {\n        creditelement.classList.remove('hidden');\n\n        let credittotalelement = creditelement.querySelector('span.credit_total');\n\n        credittotalelement.textContent = credit;\n\n    } else {\n\n        let data = {\n            'currency': currency,\n            'credit': credit,\n            'userid': userid\n        };\n\n        Templates.renderForPromise('local_shopping_cart/credit_item', data).then(({html}) => {\n\n            // Get parentelement.\n            let parent = document.querySelector('ul.cashier-history-items');\n\n            parent.insertAdjacentHTML('afterbegin', html);\n\n            // We rerun init after insert, to make sure we have the right value.\n            init();\n            return true;\n        }).catch((e) => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n    }\n    // We also need to call the udpateTotalPrice function from this place to make sure everything is uptodate.\n    updateTotalPrice();\n}\n\n/**\n *\n * @param {*} element\n */\nfunction confirmPaidBack(element) {\n    const userid = element.dataset.userid;\n    Ajax.call([{\n        methodname: \"local_shopping_cart_credit_paid_back\",\n        args: {\n            userid\n        },\n        done: function(data) {\n\n            // eslint-disable-next-line no-console\n            console.log(data, userid);\n\n            let creditelement = document.querySelector('.credit_total');\n\n            creditelement.textContent = 0;\n\n            // We hide the creditelement once we have paid back everything.\n            let licreditelement = document.querySelector('.shopping_cart_history_paidback');\n            licreditelement.classList.add('hidden');\n\n            Notification.addNotification({\n                message: \"Credit paid back\",\n                type: \"success\"\n            });\n            setTimeout(() => {\n                let notificationslist = document.querySelectorAll('#user-notifications div.alert.alert-success');\n                const notificatonelement = notificationslist[notificationslist.length - 1];\n                notificatonelement.remove();\n            }, 5000);\n\n             // We also need to call the udpateTotalPrice function from this place to make sure everything is uptodate.\n            updateTotalPrice();\n            return;\n        },\n        fail: function(ex) {\n        // eslint-disable-next-line no-console\n        console.log(\"ex:\" + ex);\n        },\n    }]);\n}\n\n// /**\n//  *\n//  * @param {*} button\n//  */\n// function confirmCancelModal(button) {\n\n//     getStrings([\n//             {key: 'confirmcanceltitle', component: 'local_shopping_cart'},\n//             {key: 'confirmcancelbody', component: 'local_shopping_cart'},\n//             {key: 'cancelpurchase', component: 'local_shopping_cart'}\n//         ]\n//         ).then(strings => {\n\n//             ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n//                 modal.setTitle(strings[0]);\n//                     modal.setBody(strings[1]);\n//                     modal.setSaveButtonText(strings[2]);\n//                     modal.getRoot().on(ModalEvents.save, function() {\n\n//                         // eslint-disable-next-line no-console\n//                         console.log('we saved');\n\n//                         const historyid = button.dataset.historyid;\n//                         const itemid = button.dataset.itemid;\n//                         const userid = button.dataset.userid;\n//                         const currency = button.dataset.currency;\n//                         const componentname = button.dataset.componentname;\n//                         const price = button.dataset.price;\n\n//                         cancelPurchase(itemid, userid, componentname, historyid, currency, price, button);\n//                     });\n\n//                     modal.show();\n//                     return modal;\n//             }).catch(e => {\n//                 // eslint-disable-next-line no-console\n//                 console.log(e);\n//             });\n//             return true;\n//         }).catch(e => {\n//             // eslint-disable-next-line no-console\n//             console.log(e);\n//         });\n// }\n\n/**\n *\n * @param {*} button\n */\nfunction confirmCancelAndSetCreditModal(button) {\n\n    const price = button.dataset.price;\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_cancel_addcredit\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {'credit': price},\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('confirmcanceltitle', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: button,\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        window.console.log(e.detail);\n\n        const historyid = button.dataset.historyid;\n        const itemid = button.dataset.itemid;\n        const userid = button.dataset.userid;\n        const currency = button.dataset.currency;\n        const componentname = button.dataset.componentname;\n\n        const credit = e.detail.credit ?? \"\";\n\n        cancelPurchase(itemid, userid, componentname, historyid, currency, price, credit, button);\n    });\n\n    // Show the form.\n    modalForm.show();\n}\n\n/**\n *\n * @param {*} element\n */\nfunction confirmPaidBackModal(element) {\n\n    getStrings([\n        {key: 'confirmpaidbacktitle', component: 'local_shopping_cart'},\n        {key: 'confirmpaidbackbody', component: 'local_shopping_cart'},\n        {key: 'confirmpaidback', component: 'local_shopping_cart'}\n    ]\n    ).then(strings => {\n\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n                modal.setBody(strings[1]);\n                modal.setSaveButtonText(strings[2]);\n                modal.getRoot().on(ModalEvents.save, function() {\n\n                    // eslint-disable-next-line no-console\n                    console.log('we saved');\n\n                    confirmPaidBack(element);\n                });\n\n                modal.show();\n                return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}"],"file":"shistory.min.js"}
