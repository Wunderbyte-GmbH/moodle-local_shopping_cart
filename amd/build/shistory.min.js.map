{"version":3,"file":"shistory.min.js","sources":["../src/shistory.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\n\nimport {updateTotalPrice, buttoninit} from 'local_shopping_cart/cart';\n\nimport {\n    get_string as getString,\n    get_strings as getStrings\n        }\n        from 'core/str';\nimport {showNotification} from 'local_shopping_cart/notifications';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport ModalForm from 'core_form/modalform';\n// As there is a dependency, we can load it like this.\nimport {queries} from 'local_wunderbyte_table/init';\n\nconst SELECTORS = {\n    CANCELBUTTON: '.cashier-history-items .shopping_cart_history_cancel_button',\n    PAIDBACKBUTTON: 'button.shopping_cart_history_paidback_button',\n    CREDITSMANAGER: 'button.shopping_cart_history_creditsmanager',\n    REBOOKBUTTON: '.shopping_cart_history_rebook_button',\n};\n\n// Little hack to get strings at top-level although getString is asynchronous.\nlet creditsmanagersuccess = 'success';\nlet notenoughcredits = 'notenoughcredits';\n(async() => {\n    creditsmanagersuccess = await getString('creditsmanagersuccess', 'local_shopping_cart');\n    notenoughcredits = await getString('notenoughcredits', 'local_shopping_cart');\n})();\n\nexport const init = (cancelationFee = null) => {\n\n    const buttons = document.querySelectorAll(SELECTORS.CANCELBUTTON);\n\n    buttons.forEach(button => {\n\n        if (!button.dataset.initialized) {\n\n            if (button.dataset.canceled == true) {\n                setButtonToCanceled(button);\n            } else {\n                button.addEventListener('click', event => {\n\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    if (button.dataset.canceled == false) {\n\n                        // We find out if we are on the cashiers page. Only there, we set the cashiers modal.\n\n                        if (window.location.href.includes('cashier.php')) {\n                            confirmCancelAndSetCreditModal(button);\n                        } else {\n                            // We only add the functionality if we got a cancelation fee.\n                            confirmCancelModal(button, cancelationFee);\n                        }\n                    }\n\n                });\n            }\n            button.dataset.initialized = true;\n        }\n    });\n\n    const elements = document.querySelectorAll(SELECTORS.PAIDBACKBUTTON);\n\n    elements.forEach(element => {\n\n        if (!element.dataset.initialized) {\n            element.addEventListener('click', event => {\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                confirmPaidBackModal(element);\n            });\n            element.dataset.initialized = true;\n        }\n    });\n\n    // Credits manager button.\n    const creditsmanagerbtn = document.querySelectorAll(SELECTORS.CREDITSMANAGER);\n    creditsmanagerbtn.forEach(btn => {\n        if (!btn.dataset.initialized) {\n            btn.addEventListener('click', event => {\n                event.preventDefault();\n                event.stopPropagation();\n                openCreditsManagerModal(btn);\n            });\n            btn.dataset.initialized = true;\n        }\n    });\n\n    // Mark for rebooking button.\n    const rebookbuttons = document.querySelectorAll(SELECTORS.REBOOKBUTTON);\n    rebookbuttons.forEach(btn => {\n        if (!btn.dataset.initialized) {\n            btn.addEventListener('click', event => {\n                event.preventDefault();\n                event.stopPropagation();\n                markforrebooking(btn);\n            });\n            btn.dataset.initialized = true;\n        }\n    });\n};\n\n/**\n * This triggers the ajax call to acutally cancel the purchase.\n * @param {int} itemid\n * @param {string} area\n * @param {int} userid\n * @param {string} componentname\n * @param {int} historyid\n * @param {string} currency\n * @param {string} price\n * @param {string} credit\n * @param {type} button\n */\nexport function cancelPurchase(itemid, area, userid, componentname, historyid, currency, price, credit, button) {\n\n    Ajax.call([{\n        methodname: \"local_shopping_cart_cancel_purchase\",\n        args: {\n            'itemid': itemid,\n            'componentname': componentname,\n            'area': area,\n            'userid': userid,\n            'historyid': historyid,\n            'credit': credit\n        },\n        done: function(data) {\n\n            if (data.success == 1) {\n\n                getString('cancelsuccess', 'local_shopping_cart').then(message => {\n\n                    showNotification(message, \"success\");\n\n                    return;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n\n                // When we have no button, this means that we\n                if (!button) {\n                    import('local_wunderbyte_table/reload')\n                    .then(wbt => {\n                        // Look if there are tables on this page.\n                        if (queries && queries.length > 0) {\n                            wbt.reloadAllTables();\n                        } else {\n                            window.location.reload();\n                        }\n                        return;\n                    })\n                    .catch(err => {\n                            // Handle any errors, including if the module doesn't exist\n                            // eslint-disable-next-line no-console\n                            console.log(err);\n                            window.location.reload();\n                    });\n                    return;\n                }\n                setButtonToCanceled(button);\n\n                showCredit(data.credit, currency, userid);\n\n                // Make sure addtocartbutton active againe once the item is removed from the shopping cart.\n                const addtocartbutton = document.querySelector('#btn-' + componentname + '-' + itemid);\n\n                // If there is not addtocartbutton, we have to add it anew.\n                if (!addtocartbutton) {\n\n                    data.itemid = itemid;\n                    data.componentname = componentname;\n                    data.price = Number(price).toFixed(2); // Creates a string with two decimals.\n\n                    Templates.renderForPromise('local_shopping_cart/addtocartdb', data).then(({html}) => {\n\n                        // Get parentelement.\n                        let parent = document.querySelector('span.price_' + componentname + \"_\" + itemid);\n                        parent.textContent = price + \" \" + currency;\n\n                        if (parent) {\n                            parent.insertAdjacentHTML('beforeend', html);\n                        }\n\n                        buttoninit(itemid, componentname);\n                        return true;\n                    }).catch((e) => {\n                        // eslint-disable-next-line no-console\n                        console.log(e);\n                    });\n                } else {\n\n                     addtocartbutton.classList.remove('disabled');\n                     addtocartbutton.dataset.initialized = false;\n                     buttoninit(itemid, componentname);\n                }\n\n            } else {\n                getString('canceldidntwork', 'local_shopping_cart').then(message => {\n\n                    showNotification(message, \"danger\");\n\n                    return;\n                }).catch(e => {\n                    // eslint-disable-next-line no-console\n                    console.log(e);\n                });\n            }\n\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n\n}\n\n/**\n * Function to change classes and text of button.\n * @param {*} button\n */\nfunction setButtonToCanceled(button) {\n\n    button.classList.add('disabled');\n    button.classList.remove('btn-primary');\n    button.classList.add('btn-danger');\n    button.dataset.canceled = true;\n\n    getString('canceled', 'local_shopping_cart').then(result => {\n\n        button.innerText = result;\n        return;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n *\n * @param {string} credit\n * @param {string} currency\n * @param {int} userid\n */\nfunction showCredit(credit, currency, userid) {\n\n    let creditelement = document.querySelector('li.shopping_cart_history_paidback');\n\n    if (creditelement) {\n        creditelement.classList.remove('hidden');\n\n        let credittotalelement = creditelement.querySelector('span.credit_total');\n\n        credittotalelement.textContent = credit;\n\n    } else {\n\n        let data = {\n            'currency': currency,\n            'credit': Number(credit).toFixed(2), // Creates a string with two decimals.\n            'userid': userid\n        };\n\n        Templates.renderForPromise('local_shopping_cart/credit_item', data).then(({html}) => {\n\n            // Get parentelement.\n            let parent = document.querySelector('ul.cashier-history-items');\n\n            parent.insertAdjacentHTML('afterbegin', html);\n\n            // We rerun init after insert, to make sure we have the right value.\n            init();\n            return true;\n        }).catch((e) => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n    }\n    // We also need to call the udpateTotalPrice function from this place to make sure everything is uptodate.\n    updateTotalPrice();\n}\n\n/**\n *\n * @param {*} element\n */\nfunction confirmPaidBack(element) {\n    const userid = element.dataset.userid;\n    const method = element.dataset.method;\n    const costcenter = element.dataset.costcenter;\n    Ajax.call([{\n        methodname: \"local_shopping_cart_credit_paid_back\",\n        args: {\n            userid,\n            method,\n            costcenter\n        },\n        done: function(data) {\n\n            // eslint-disable-next-line no-console\n            console.log(data);\n\n            let creditelement = document.querySelector('.credit_total');\n\n            creditelement.textContent = 0;\n\n            // We hide the creditelement once we have paid back everything.\n            let licreditelements = document.querySelectorAll('.shopping_cart_history_paidback');\n\n            licreditelements.forEach(licreditelement => licreditelement.classList.add('hidden'));\n\n            getString('creditpaidback', 'local_shopping_cart').then(message => {\n\n                showNotification(message, 'success');\n\n                return;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n\n             // We also need to call the udpateTotalPrice function from this place to make sure everything is uptodate.\n            updateTotalPrice();\n            reloadHistory(userid);\n            return;\n        },\n        fail: function(ex) {\n        // eslint-disable-next-line no-console\n        console.log(\"ex:\" + ex);\n        },\n    }]);\n}\n\n/**\n *\n * @param {*} button\n * @param {*} cancelationFee\n */\nexport async function confirmCancelModal(button, cancelationFee) {\n\n    // eslint-disable-next-line no-console\n    console.log(button);\n\n    // If we have no price, but there are all the other values on the button...\n    // ... we first fetch the necessary data.\n    if (!button.dataset.hasOwnProperty('price')) {\n        await new Promise(function(resolve, reject) {\n            Ajax.call([{\n                methodname: 'local_shopping_cart_get_history_item',\n                args: {\n                    'itemid': button.dataset.itemid,\n                    'componentname': button.dataset.componentname,\n                    'area': button.dataset.area,\n                    'userid': button.dataset.userid,\n                },\n                done: function(data) {\n\n                    // eslint-disable-next-line no-console\n                    console.log(data);\n\n                    if (!data.success == 1) {\n                        resolve(data);\n                        return;\n                    }\n\n                    button.dataset.historyid = data.id;\n                    button.dataset.price = data.price;\n                    button.dataset.credit = 0;\n                    button.dataset.currency = data.currency;\n                    button.dataset.quotaconsumed = data.quotaconsumed;\n                    button.dataset.round = data.round;\n                    cancelationFee = data.cancelationfee;\n                    button.dataset.buttontonull = true;\n\n                    resolve(data);\n                },\n                fail: ex => {\n                    // eslint-disable-next-line no-console\n                    console.log(\"failed to load information for modal: \" + JSON.stringify(ex));\n                    reject(ex);\n                }\n            }]);\n        });\n    }\n    if (!button.dataset.hasOwnProperty('price')) {\n        getString('canceldidntwork', 'local_shopping_cart').then(message => {\n\n            showNotification(message, \"danger\");\n\n            return;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return;\n    }\n\n    // Before showing the cancel modal, we need to gather some information and pass it to the string.\n    if (cancelationFee === null) {\n        cancelationFee = 0;\n    }\n\n    const price = parseFloat(button.dataset.price);\n    // Quota consumed is always on two deciamals.\n    const quotaconsumed = parseFloat(button.dataset.quotaconsumed);\n\n    const deducedvalue = price * quotaconsumed;\n    const credit = price - deducedvalue - cancelationFee;\n    const currency = button.dataset.currency;\n    // We always round percentages.\n    const percentage = Math.round(quotaconsumed * 100);\n\n    const params = {\n        quotaconsumed: quotaconsumed.toFixed(2),\n        percentage: percentage + '%',\n        currency: currency,\n        deducedvalue: deducedvalue,\n    };\n\n    const roundvalues = button.dataset.round;\n    if (roundvalues) {\n        params.price = Math.round(price);\n        params.credit = Math.round(credit);\n        params.cancelationfee = Math.round(cancelationFee);\n        params.deducedvalue = Math.round(deducedvalue);\n    } else {\n        params.price = price.toFixed(2);\n        params.credit = credit.toFixed(2);\n        params.cancelationfee = cancelationFee.toFixed(2);\n        params.deducedvalue = deducedvalue.toFixed(2);\n    }\n\n    let bodystring = 'confirmcancelbodyuser';\n    if (quotaconsumed > 0 && quotaconsumed < 1) {\n        bodystring = 'confirmcancelbodyuserconsumption';\n    } else if (quotaconsumed == 1) {\n        bodystring = 'confirmcancelbodyusernocredit';\n    }\n\n    // Finally, make sure that we don't have negative values.\n    if (params.credit < 0) {\n        params.cancelationFee = 0 - params.credit; // Will be between 0 and cancelationfee.\n        params.credit = 0;\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(params);\n\n    getStrings([\n            {key: 'confirmcanceltitle', component: 'local_shopping_cart'},\n            {key: bodystring, component: 'local_shopping_cart', param: params},\n            {key: 'cancelpurchase', component: 'local_shopping_cart'}\n        ]\n    ).then(strings => {\n        // eslint-disable-next-line promise/no-nesting\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n            modal.setBody(strings[1]);\n            modal.setSaveButtonText(strings[2]);\n            modal.getRoot().on(ModalEvents.save, function() {\n\n                const historyid = button.dataset.historyid;\n                const itemid = button.dataset.itemid;\n                const userid = button.dataset.userid;\n                const currency = button.dataset.currency;\n                const componentname = button.dataset.componentname;\n                const area = button.dataset.area;\n                const price = button.dataset.price;\n\n                if (button.dataset.buttontonull) {\n                    button = null;\n                }\n\n                cancelPurchase(itemid, area, userid, componentname, historyid, currency, price, 0, button);\n            });\n\n            modal.show();\n            return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n *\n * @param {*} button\n */\nfunction confirmCancelAndSetCreditModal(button) {\n\n    const price = button.dataset.price;\n    const historyid = button.dataset.historyid;\n    const itemid = button.dataset.itemid;\n    const userid = button.dataset.userid;\n    const currency = button.dataset.currency;\n    const componentname = button.dataset.componentname;\n    const area = button.dataset.area;\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_cancel_addcredit\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {'price': price,\n               'historyid': historyid,\n               'itemid': itemid,\n               'userid': userid,\n               'currency': currency,\n               'componentname': componentname,\n               'area': area},\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('confirmcanceltitle', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: button\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        const response = e.detail;\n        // eslint-disable-next-line no-console\n        console.log(response);\n\n        const url = new URL(window.location.href);\n        url.searchParams.append('userid', userid);\n        window.location.replace(url.toString());\n    });\n\n    // Show the form.\n    modalForm.show();\n}\n\n/**\n *\n * @param {*} element\n */\nfunction confirmPaidBackModal(element) {\n\n    getStrings([\n        {key: 'confirmpaidbacktitle', component: 'local_shopping_cart'},\n        {key: 'confirmpaidbackbody', component: 'local_shopping_cart'},\n        {key: 'confirmpaidback', component: 'local_shopping_cart'}\n    ]\n    ).then(strings => {\n        // eslint-disable-next-line promise/no-nesting\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\n\n            modal.setTitle(strings[0]);\n                modal.setBody(strings[1]);\n                modal.setSaveButtonText(strings[2]);\n                modal.getRoot().on(ModalEvents.save, function() {\n\n                    confirmPaidBack(element);\n                });\n\n                modal.show();\n                return modal;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n        return true;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n}\n\n/**\n * Open the credits manager modal.\n * @param {htmlElement} button\n */\nfunction openCreditsManagerModal(button) {\n    // eslint-disable-next-line no-console\n    console.log('credits-managermodal');\n\n    const modalForm = new ModalForm({\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_creditsmanager\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {\n            userid: button.dataset.userid\n        },\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('creditsmanager', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: button\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        const response = e.detail;\n\n        if (response.error && response.error == 'notenoughcredits') {\n            showNotification(notenoughcredits, 'danger');\n        } else {\n            // eslint-disable-next-line no-console\n            console.log('credits-manager-modal response: ', response);\n            showNotification(creditsmanagersuccess, 'info');\n            setTimeout(function() {\n                reload(e.detail.userid);\n            }, 1500);\n        }\n    });\n\n    // Show the form.\n    modalForm.show();\n}\n\n/**\n * Mark booking options for rebooking.\n * @param {htmlElement} button\n */\nfunction markforrebooking(button) {\n\n    // eslint-disable-next-line no-console\n    console.log(button);\n\n    const historyid = button.dataset.historyid;\n    const userid = button.dataset.userid;\n\n    Ajax.call([{\n        methodname: 'local_shopping_cart_mark_item_for_rebooking',\n        args: {\n            historyid,\n            userid\n        },\n        done: function(data) {\n\n            // eslint-disable-next-line no-console\n            console.log(data);\n            window.location.reload();\n\n        },\n        fail: ex => {\n            // eslint-disable-next-line no-console\n            console.log(\"local_shopping_cart_mark_item_for_rebooking failed: \" + JSON.stringify(ex));\n        },\n    }]);\n}\n\n/**\n * Function to reload current page with get param userid.\n * @param {*} userid\n */\nfunction reload(userid) {\n\n    reloadHistory(userid);\n    return;\n}\n\n/**\n * Function to reload Shopping cart history with get param userid.\n * @param {*} userid\n */\nexport function reloadHistory(userid) {\n\n    const histories\n        = document.querySelectorAll('[data-id=\"shopping-cart-history\"][data-userid=\"' + userid + '\"]');\n\n     // eslint-disable-next-line no-console\n     console.log(histories);\n\n    histories.forEach((history) => {\n\n        // eslint-disable-next-line no-console\n        console.log(history);\n\n        Ajax.call([{\n            methodname: \"local_shopping_cart_reload_history\",\n            args: {\n                'userid': userid,\n            },\n            done: function(data) {\n\n                // eslint-disable-next-line no-console\n                console.log(data);\n\n                Templates.renderForPromise('local_shopping_cart/history_card', data).then(({html, js}) => {\n\n                    Templates.replaceNode(history, html, js);\n\n                    return true;\n\n                    }).catch((e) => {\n                        // eslint-disable-next-line no-console\n                        console.log(e);\n                    });\n\n            },\n            fail: function(ex) {\n                // eslint-disable-next-line no-console\n                console.log(\"ex:\" + ex);\n            },\n        }]);\n    });\n}"],"names":["_ajax","_interopRequireDefault","_templates","_modal_factory","_modal_events","_modalform","_systemImportTransformerGlobalIdentifier","window","self","global","e","__esModule","default","SELECTORS","creditsmanagersuccess","notenoughcredits","getString","init","cancelationFee","arguments","length","undefined","document","querySelectorAll","forEach","button","dataset","initialized","canceled","setButtonToCanceled","addEventListener","event","preventDefault","stopPropagation","location","href","includes","price","historyid","itemid","userid","currency","componentname","area","modalForm","ModalForm","formClass","args","modalConfig","title","returnFocus","events","FORM_SUBMITTED","response","detail","console","log","url","URL","searchParams","append","replace","toString","show","confirmCancelAndSetCreditModal","confirmCancelModal","element","getStrings","key","component","then","strings","ModalFactory","create","type","types","SAVE_CANCEL","modal","setTitle","setBody","setSaveButtonText","getRoot","on","ModalEvents","save","method","costcenter","Ajax","call","methodname","done","data","querySelector","textContent","licreditelement","classList","add","message","showNotification","catch","updateTotalPrice","reloadHistory","fail","ex","confirmPaidBack","confirmPaidBackModal","btn","error","setTimeout","openCreditsManagerModal","reload","JSON","stringify","markforrebooking","cancelPurchase","credit","success","define","amd","Promise","resolve","reject","require","module","exports","loader","wbt","queries","reloadAllTables","err","creditelement","remove","Number","toFixed","Templates","renderForPromise","_ref2","html","insertAdjacentHTML","showCredit","addtocartbutton","buttoninit","_ref","parent","result","innerText","async","hasOwnProperty","id","quotaconsumed","round","cancelationfee","buttontonull","parseFloat","deducedvalue","percentage","Math","params","bodystring","param","histories","history","_ref3","js","replaceNode","_exports"],"mappings":"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"}