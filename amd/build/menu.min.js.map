{"version":3,"file":"menu.min.js","sources":["../src/menu.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/*\r\n * @package    local_shopping_cart\r\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport ModalForm from 'core_form/modalform';\r\n\r\nimport {\r\n    get_string as getString\r\n        }\r\n        from 'core/str';\r\n\r\nexport var countdownelement = null;\r\nexport var interval = null;\r\nexport var visbilityevent = false;\r\n\r\nexport const confirmCancelAllUsersAndSetCreditModal = (itemid, componentname, area) => {\r\n\r\n    const modalForm = new ModalForm({\r\n\r\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\r\n        formClass: \"local_shopping_cart\\\\form\\\\modal_cancel_all_addcredit\",\r\n        // Add as many arguments as you need, they will be passed to the form:\r\n        args: {\r\n            'itemid': itemid,\r\n            'componentname': componentname,\r\n            'area': area,\r\n        },\r\n        // Pass any configuration settings to the modal dialogue, for example, the title:\r\n        modalConfig: {title: getString('confirmcanceltitle', 'local_shopping_cart')},\r\n        // DOM element that should get the focus after the modal dialogue is closed:\r\n        // returnFocus: button,\r\n    });\r\n    // Listen to events if you want to execute something on form submit.\r\n    // Event detail will contain everything the process() function returned:\r\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\r\n        window.console.log(e.detail);\r\n\r\n        // Reload window after cancelling.\r\n        window.location.reload();\r\n\r\n        // eslint-disable-next-line no-console\r\n        console.log('confirmCancelAllUsersAndSetCreditModal: form submitted');\r\n    });\r\n\r\n    // Show the form.\r\n    modalForm.show();\r\n};\r\n"],"names":["itemid","componentname","area","modalForm","ModalForm","formClass","args","modalConfig","title","addEventListener","events","FORM_SUBMITTED","e","window","console","log","detail","location","reload","show"],"mappings":";;;;;gRA4B8B,uBACR,8BACM,kDAE0B,CAACA,OAAQC,cAAeC,cAEpEC,UAAY,IAAIC,mBAAU,CAG5BC,UAAW,wDAEXC,KAAM,QACQN,qBACOC,mBACTC,MAGZK,YAAa,CAACC,OAAO,mBAAU,qBAAsB,0BAMzDL,UAAUM,iBAAiBN,UAAUO,OAAOC,gBAAiBC,IACzDC,OAAOC,QAAQC,IAAIH,EAAEI,QAGrBH,OAAOI,SAASC,SAGhBJ,QAAQC,IAAI,6DAIhBZ,UAAUgB"}