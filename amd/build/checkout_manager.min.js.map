{"version":3,"file":"checkout_manager.min.js","sources":["../src/checkout_manager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst SELECTORS = {\n    CHECKOUTMANAGERFORMID: '#shopping-cart-checkout-manager-form',\n    CHECKOUTMANAGERFORMTEMPLATE: 'local_shopping_cart/checkout_manager_form',\n    CHECKOUTMANAGERBUTTONSTEMPLATE: 'local_shopping_cart/checkout_manager_form_buttons',\n    CHECKOUTMANAGERBUTTONSID: 'shopping-cart-checkout-manager-buttons',\n    CHECKOUTMANAGERPROGRESSBARTEMPLATE: 'local_shopping_cart/checkout_manager_form_progress_bar',\n    CHECKOUTMANAGERPROGRESSBARID: 'shopping-cart-checkout-manager-status-bar',\n    BUTTONS: '.shopping-cart-checkout-manager-buttons button',\n    PROGRESSBUTTONS: '.shopping-cart-checkout-manager-status-bar button',\n    CHECKBOXITEMBODY: '#shopping-cart-checkout-manager-form-body',\n    NEWADDRESSBUTTON: '.shopping-cart-new-address',\n    FEEDBACKMESSAGE: '.shopping-cart-checkout-manager-alert-container'\n};\n\nconst WEBSERVICE = {\n    CHECKOUTPROCESS: 'local_shopping_cart_control_checkout_process',\n};\n\nconst EVENTSLISTENING = {\n    ADDRESSREDRAWN: 'local_shopping_cart/addressesRedrawn',\n};\n\nconst IDS = {\n    VATNUMBER: 'shopping-cart-checkout-manager-vat-number',\n    VERIFYVAT: 'shopping-cart-checkout-manager-verify-vat',\n    COUNTRYSELECT: 'shopping-cart-checkout-manager-country-select',\n};\n\n/**\n * Initializes the checkout manager functionality.\n */\nfunction init() {\n    const formBody = document.querySelector(SELECTORS.CHECKBOXITEMBODY);\n    initListeners(formBody);\n    document.addEventListener(EVENTSLISTENING.ADDRESSREDRAWN, getNewAddress);\n}\n\n/**\n * Initializes the checkout manager functionality.\n * @param {HTMLElement} formBody - The name of the web service.\n */\nfunction initListeners(formBody) {\n    initControlListener();\n    if (formBody != undefined) {\n        initChangeListener();\n        initVatNumberVerifyListener(formBody);\n    }\n\n}\n\n/**\n * Initializes the change listener for the form body.\n */\nfunction getNewAddress() {\n    const formBody = document.querySelector(SELECTORS.CHECKBOXITEMBODY);\n    const currentstep = getDatasetValue(formBody, 'currentstep');\n    if (currentstep !== null) {\n        triggerButtonControlWebService(WEBSERVICE.CHECKOUTPROCESS, {\n            action: '',\n            currentstep: currentstep,\n        });\n    }\n}\n\n/**\n * Initializes the change listener for the form body.\n */\nfunction initVatNumberVerifyListener() {\n    const vatNumber = document.getElementById(IDS.VERIFYVAT);\n    if (vatNumber) {\n        vatNumber.addEventListener('click', vatNumberVerifyCallback);\n    }\n}\n\n/**\n * Initializes the change listener for the form body.\n */\nfunction vatNumberVerifyCallback() {\n    const formBody = document.querySelector(SELECTORS.CHECKBOXITEMBODY);\n    const countryCode = document.getElementById(IDS.COUNTRYSELECT)?.value;\n    const vatNumber = document.getElementById(IDS.VATNUMBER)?.value;\n\n    if (!countryCode || !vatNumber) {\n        alert('alert');\n        return;\n    }\n    triggerButtonControlWebService(WEBSERVICE.CHECKOUTPROCESS, {\n        action: getDatasetValue(formBody, 'action'),\n        currentstep: getDatasetValue(formBody, 'currentstep'),\n        identifier: getDatasetValue(formBody, 'identifier'),\n        changedinput: JSON.stringify({\n            'vatCodeCountry': `${countryCode},${vatNumber}`,\n        }),\n    });\n}\n\n/**\n * Initializes the change listener for the form body.\n */\nfunction initControlListener() {\n    const selectors = `${SELECTORS.BUTTONS}, ${SELECTORS.PROGRESSBUTTONS}`;\n    document.querySelectorAll(selectors).forEach(button => {\n        button.addEventListener('click', controlCallback);\n    });\n}\n\n/**\n * Initializes the change listener for the form body.\n */\nfunction controlCallback() {\n    const action = this.getAttribute('data-action');\n    const currentstep = this.getAttribute('data-currentstep');\n    if (action && currentstep) {\n        triggerButtonControlWebService(WEBSERVICE.CHECKOUTPROCESS, {\n            action: action,\n            currentstep: currentstep,\n        });\n    }\n}\n\n/**\n * Initializes the change listener for the form body.\n */\nfunction initChangeListener() {\n    const formBody = document.querySelector(SELECTORS.CHECKBOXITEMBODY);\n    formBody.addEventListener('change', event => changeCallback(event, formBody));\n}\n\n/**\n * Initializes the change listener for the form body.\n * @param {Object} event - The name of the web service.\n * @param {HTMLElement} formBody - The parameters for the web service call.\n */\nfunction changeCallback(event, formBody) {\n    const target = event.target;\n    if (['INPUT', 'SELECT', 'TEXTAREA'].includes(target.tagName)) {\n        const changedInputs = getChangedInputs();\n        if (\n            target.hasAttribute('data-skip-webservice')\n        ) {\n            return;\n        }\n        if (target.type == 'checkbox') {\n            target.value = target.checked;\n        }\n\n        triggerButtonControlWebService(WEBSERVICE.CHECKOUTPROCESS, {\n            action: getDatasetValue(formBody, 'action'),\n            currentstep: getDatasetValue(formBody, 'currentstep'),\n            identifier: getDatasetValue(formBody, 'identifier'),\n            changedinput: JSON.stringify(changedInputs)\n        });\n    }\n}\n\n/**\n * Handles button control for the checkout process.\n */\nfunction getChangedInputs() {\n    const processElements = document.querySelectorAll('[data-shopping-cart-process-data=\"true\"]');\n    return Array.from(processElements).map(element => {\n        const value = element.type === 'checkbox' ? element.checked : element.value;\n        if (element.type === 'radio') {\n            return element.checked\n                ? {name: element.name || 'unnamed', value: value}\n                : [];\n        }\n\n        return {\n            name: element.name || 'unnamed',\n            value: value,\n        };\n    })\n    .filter(item => item !== null);\n}\n\n\n/**\n * Handles button control for the checkout process.\n * @param {string} serviceName - The name of the web service.\n * @param {Object} params - The parameters for the web service call.\n */\nfunction triggerButtonControlWebService(serviceName, params) {\n    require(['core/ajax'], function (Ajax) {\n        const requests = Ajax.call([{\n            methodname: serviceName,\n            args: params,\n        }]);\n        requests[0].done(function(response) {\n            updateCheckoutManagerPartials(response);\n        }).fail(function(err) {\n            // eslint-disable-next-line no-console\n            console.error('fail button trigger', err);\n            return;\n        });\n    });\n}\n\n/**\n * Updates specific Mustache partials dynamically based on the web service response.\n * @param {Object} data - The data returned from the web service.\n */\nfunction updateCheckoutManagerPartials(data) {\n    data.data = JSON.parse(data.data);\n    require(['core/templates'], function(templates) {\n        if (data.reloadbody) {\n            staticReloadBody(templates, data);\n        } else {\n            newReloadBody(templates, data);\n        }\n    });\n}\n\n/**\n * Utility to get dataset values safely.\n * @param {Object} templates - The element with the dataset.\n * @param {Array} data - The element with the dataset.\n */\nfunction newReloadBody(templates, data) {\n    const controlButtons = document.getElementById(SELECTORS.CHECKOUTMANAGERBUTTONSID);\n    const progressBar = document.getElementById(SELECTORS.CHECKOUTMANAGERPROGRESSBARID);\n    const feedbackMessageContainer = document.querySelector(SELECTORS.FEEDBACKMESSAGE);\n\n    if (!controlButtons) {\n        // eslint-disable-next-line no-console\n        console.error('controlButtons');\n        return;\n    }\n    // Render new content for the div\n    const renderButtonTemplate = templates.render(SELECTORS.CHECKOUTMANAGERBUTTONSTEMPLATE, data.data)\n        .then(function(html) {\n            controlButtons.innerHTML = html;\n            return;\n        })\n        .catch(function(err) {\n            // eslint-disable-next-line no-console\n            console.error('fail render button', err);\n        });\n    const progressBarTemplate = templates.render(SELECTORS.CHECKOUTMANAGERPROGRESSBARTEMPLATE, data.data)\n        .then(function(html) {\n            progressBar.innerHTML = html;\n            return;\n        })\n        .catch(function(err) {\n            // eslint-disable-next-line no-console\n            console.error('fail render button', err);\n        });\n    if (feedbackMessageContainer) {\n        const datafeedback = JSON.parse(data.managerdata);\n        if (\n            feedbackMessageContainer &&\n            datafeedback.feedback != undefined\n        ) {\n            templates.render('local_shopping_cart/checkout_manager_feedback', datafeedback.feedback)\n                .then(function(html) {\n                    feedbackMessageContainer.innerHTML = html;\n                    return;\n                })\n                .catch(function(err) {\n                    // eslint-disable-next-line no-console\n                    console.error('fail render feedback', err);\n                });\n        }\n    }\n    Promise.all([renderButtonTemplate, progressBarTemplate]).then(function() {\n        initControlListener();\n        return;\n    }).catch(function(err) {\n        // eslint-disable-next-line no-console\n        console.error('fail init listener', err);\n    });\n}\n\n/**\n * Utility to get dataset values safely.\n * @param {Object} templates - The element with the dataset.\n * @param {Array} data - The element with the dataset.\n */\nfunction staticReloadBody(templates, data) {\n    templates.render(SELECTORS.CHECKOUTMANAGERFORMTEMPLATE, data.data)\n        .then(function(html, js) {\n            return templates.replaceNodeContents(document.querySelector(SELECTORS.CHECKOUTMANAGERFORMID), html, js);\n        })\n        .then(function() {\n            if (data.jsscript) {\n                const scriptContent = data.jsscript.replace(/<script[^>]*>|<\\/script>/gi, '');\n                try {\n                    templates.appendNodeContents(\n                        document.querySelector(SELECTORS.CHECKOUTMANAGERFORMID),\n                        '',\n                        scriptContent\n                );\n\n                } catch (err) {\n                    // eslint-disable-next-line no-console\n                    console.error('fail script', err);\n                }\n            }\n            return;\n        })\n        .catch(function(err) {\n            // eslint-disable-next-line no-console\n            console.error('fail script', err);\n            return;\n        });\n}\n\n/**\n * Utility to get dataset values safely.\n * @param {HTMLElement} element - The element with the dataset.\n * @param {string} key - The dataset key.\n * @returns {string|null} - The value or null if not found.\n */\nfunction getDatasetValue(element, key) {\n    return element?.dataset[key] || '';\n}\n\nexport {\n    init,\n    getDatasetValue,\n    getChangedInputs\n};"],"names":["formBody","initControlListener","undefined","document","querySelector","SELECTORS","CHECKBOXITEMBODY","addEventListener","event","target","includes","tagName","changedInputs","getChangedInputs","hasAttribute","type","value","checked","triggerButtonControlWebService","WEBSERVICE","CHECKOUTPROCESS","action","getDatasetValue","currentstep","identifier","changedinput","JSON","stringify","changeCallback","initChangeListener","vatNumber","getElementById","IDS","VERIFYVAT","vatNumberVerifyCallback","initVatNumberVerifyListener","initListeners","EVENTSLISTENING","ADDRESSREDRAWN","getNewAddress","CHECKOUTMANAGERFORMID","CHECKOUTMANAGERFORMTEMPLATE","CHECKOUTMANAGERBUTTONSTEMPLATE","CHECKOUTMANAGERBUTTONSID","CHECKOUTMANAGERPROGRESSBARTEMPLATE","CHECKOUTMANAGERPROGRESSBARID","BUTTONS","PROGRESSBUTTONS","NEWADDRESSBUTTON","FEEDBACKMESSAGE","VATNUMBER","COUNTRYSELECT","countryCode","vatCodeCountry","alert","selectors","querySelectorAll","forEach","button","controlCallback","this","getAttribute","processElements","Array","from","map","element","name","filter","item","serviceName","params","require","Ajax","call","methodname","args","done","response","data","parse","templates","reloadbody","render","then","html","js","replaceNodeContents","jsscript","scriptContent","replace","appendNodeContents","err","console","error","catch","staticReloadBody","controlButtons","progressBar","feedbackMessageContainer","renderButtonTemplate","innerHTML","progressBarTemplate","datafeedback","managerdata","feedback","Promise","all","newReloadBody","fail","key","dataset"],"mappings":"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"}