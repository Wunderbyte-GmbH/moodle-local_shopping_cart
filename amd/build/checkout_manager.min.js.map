{"version":3,"file":"checkout_manager.min.js","sources":["../src/checkout_manager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst SELECTORS = {\n    CHECKOUTMANAGERFORMID: '#shopping-cart-checkout-manager-form',\n    CHECKOUTMANAGERFORMTEMPLATE: 'local_shopping_cart/checkout_manager_form',\n    CHECKOUTMANAGERBUTTONSTEMPLATE: 'local_shopping_cart/checkout_manager_form_buttons',\n    CHECKOUTMANAGERBUTTONSID: 'shopping-cart-checkout-manager-buttons',\n    CHECKOUTMANAGERPROGRESSBARTEMPLATE: 'local_shopping_cart/checkout_manager_form_progress_bar',\n    CHECKOUTMANAGERPROGRESSBARID: 'shopping-cart-checkout-manager-status-bar',\n    BUTTONS: '.shopping-cart-checkout-manager-buttons button',\n    PROGRESSBUTTONS: '.shopping-cart-checkout-manager-status-bar button',\n    CHECKBOXITEMBODY: '#shopping-cart-checkout-manager-form-body',\n    NEWADDRESSBUTTON: '.shopping-cart-new-address',\n};\n\nconst WEBSERVICE = {\n    CHECKOUTPROCESS: 'local_shopping_cart_control_checkout_process',\n};\n\nconst EVENTSLISTENING = {\n    ADDRESSREDRAWN: 'local_shopping_cart/addressesRedrawn',\n};\n/**\n * Initializes the checkout manager functionality.\n */\nfunction init() {\n    initControlListener();\n    initChangeListener();\n    initVatNumberVerifyListener();\n    document.addEventListener(EVENTSLISTENING.ADDRESSREDRAWN, function() {\n        getNewAddress();\n    });\n}\n\n/**\n * Initializes the change listener for the form body.\n */\nfunction getNewAddress() {\n    const formBody = document.querySelector(SELECTORS.CHECKBOXITEMBODY);\n    const currentstep = formBody ? formBody.dataset.currentstep : null;\n    if (currentstep !== null) {\n        triggerButtonControlWebService(WEBSERVICE.CHECKOUTPROCESS, {\n            action: '',\n            currentstep: currentstep,\n        });\n    }\n}\n\n/**\n * Initializes the change listener for the form body.\n */\nfunction initVatNumberVerifyListener() {\n    const vatNumber = document.getElementById('shopping-cart-checkout-manager-verify-vat');\n    if (vatNumber) {\n        const formBody = document.querySelector(SELECTORS.CHECKBOXITEMBODY);\n        vatNumber.addEventListener('click', function() {\n            const countrySelect = document.getElementById('shopping-cart-checkout-manager-country-select');\n            const countryCode = countrySelect.value;\n\n            const vatNumberInput = document.getElementById('shopping-cart-checkout-manager-vat-number');\n            const vatNumber = vatNumberInput.value;\n\n            if (!countryCode || !vatNumber) {\n                alert('Please select a country and enter a valid VAT number.');\n                return;\n            }\n            const vatCountryCodeNumber = `${countryCode},${vatNumber}`;\n            const changedInput = {\n                'vatCodeCountry': vatCountryCodeNumber,\n            };\n            triggerButtonControlWebService(WEBSERVICE.CHECKOUTPROCESS, {\n                action: formBody.dataset.action,\n                currentstep: formBody.dataset.currentstep,\n                identifier: formBody.dataset.identifier,\n                changedinput: JSON.stringify(changedInput)\n            });\n        });\n    }\n}\n\n/**\n * Initializes the change listener for the form body.\n */\nfunction initControlListener() {\n    const buttonSelectors = [SELECTORS.BUTTONS, SELECTORS.PROGRESSBUTTONS];\n    buttonSelectors.forEach(selector => {\n        const buttons = document.querySelectorAll(selector);\n        buttons.forEach(button => {\n            button.addEventListener('click', function() {\n                const action = this.getAttribute('data-action');\n                const currentstep = this.getAttribute('data-currentstep');\n                triggerButtonControlWebService(WEBSERVICE.CHECKOUTPROCESS, {\n                    action: action,\n                    currentstep: currentstep,\n                });\n            });\n        });\n    });\n}\n\n/**\n * Initializes the change listener for the form body.\n */\nfunction initChangeListener() {\n    const formBody = document.querySelector(SELECTORS.CHECKBOXITEMBODY);\n    if (formBody) {\n        formBody.addEventListener('change', function(event) {\n            const target = event.target;\n            if (['INPUT', 'SELECT', 'TEXTAREA'].includes(target.tagName)) {\n                if (target.type == 'checkbox') {\n                    target.value = target.checked;\n                }\n                const changedInput = {\n                    name: target.name || 'unnamed',\n                    value: target.value,\n                };\n                triggerButtonControlWebService(WEBSERVICE.CHECKOUTPROCESS, {\n                    action: formBody.dataset.action,\n                    currentstep: formBody.dataset.currentstep,\n                    identifier: formBody.dataset.identifier,\n                    changedinput: JSON.stringify(changedInput)\n                });\n            }\n        });\n    }\n}\n\n/**\n * Handles button control for the checkout process.\n * @param {string} serviceName - The name of the web service.\n * @param {Object} params - The parameters for the web service call.\n */\nfunction triggerButtonControlWebService(serviceName, params) {\n    require(['core/ajax'], function (Ajax) {\n        const requests = Ajax.call([{\n            methodname: serviceName,\n            args: params,\n        }]);\n        requests[0].done(function(response) {\n            updateCheckoutManagerPartials(response);\n        }).fail(function(err) {\n            // eslint-disable-next-line no-console\n            console.error('Failed to complete action. Error: ', err);\n            return;\n        });\n    });\n}\n\n/**\n * Updates specific Mustache partials dynamically based on the web service response.\n * @param {Object} data - The data returned from the web service.\n */\nfunction updateCheckoutManagerPartials(data) {\n    data.data = JSON.parse(data.data);\n    if (data.reloadbody) {\n        require(['core/templates'], function(templates) {\n            templates.render(SELECTORS.CHECKOUTMANAGERFORMTEMPLATE, data.data)\n                .then(function(html, js) {\n                    return templates.replaceNodeContents(document.querySelector(SELECTORS.CHECKOUTMANAGERFORMID), html, js);\n                })\n                .then(function() {\n                    if (data.jsscript) {\n                        // Extract the raw JavaScript from the script tag\n                        const scriptContent = data.jsscript.replace(/<script[^>]*>|<\\/script>/gi, '');\n                        // Execute the script safely\n                        try {\n                            templates.appendNodeContents(\n                                document.querySelector(SELECTORS.CHECKOUTMANAGERFORMID),\n                                '',\n                                scriptContent\n                        );\n\n                        } catch (err) {\n                            // eslint-disable-next-line no-console\n                            console.error('Error executing script:', err);\n                        }\n                    }\n                    return;\n                })\n                .catch(function(err) {\n                    // eslint-disable-next-line no-console\n                    console.error('Error rendering body: ', err);\n                    return;\n                });\n        });\n    } else {\n        require(['core/templates'], function(templates) {\n            // Target a specific div in the DOM\n            const controlButtons = document.getElementById(SELECTORS.CHECKOUTMANAGERBUTTONSID);\n            const progressBar = document.getElementById(SELECTORS.CHECKOUTMANAGERPROGRESSBARID);\n\n            if (!controlButtons) {\n                // eslint-disable-next-line no-console\n                console.error('Target div not found in the DOM.');\n                return;\n            }\n            // Render new content for the div\n            const renderButtonTemplate = templates.render(SELECTORS.CHECKOUTMANAGERBUTTONSTEMPLATE, data.data)\n                .then(function(html) {\n                    controlButtons.innerHTML = html;\n                    return;\n                })\n                .catch(function(err) {\n                    // eslint-disable-next-line no-console\n                    console.error('Error updating the specific div:', err);\n                });\n            const progressBarTemplate = templates.render(SELECTORS.CHECKOUTMANAGERPROGRESSBARTEMPLATE, data.data)\n                .then(function(html) {\n                    progressBar.innerHTML = html;\n                    return;\n                })\n                .catch(function(err) {\n                    // eslint-disable-next-line no-console\n                    console.error('Error updating the specific div:', err);\n                });\n            Promise.all([renderButtonTemplate, progressBarTemplate]).then(function() {\n                // eslint-disable-next-line no-console\n                console.log('Both templates have been updated.');\n                initControlListener();\n                return;\n            }).catch(function(err) {\n                // eslint-disable-next-line no-console\n                console.error('Render problem:', err);\n            });\n        });\n\n    }\n}\n\nexport {init};"],"names":["initControlListener","formBody","document","querySelector","SELECTORS","CHECKBOXITEMBODY","addEventListener","event","target","includes","tagName","type","value","checked","changedInput","name","triggerButtonControlWebService","WEBSERVICE","CHECKOUTPROCESS","action","dataset","currentstep","identifier","changedinput","JSON","stringify","initChangeListener","vatNumber","getElementById","countryCode","alert","vatCodeCountry","initVatNumberVerifyListener","EVENTSLISTENING","ADDRESSREDRAWN","getNewAddress","CHECKOUTMANAGERFORMID","CHECKOUTMANAGERFORMTEMPLATE","CHECKOUTMANAGERBUTTONSTEMPLATE","CHECKOUTMANAGERBUTTONSID","CHECKOUTMANAGERPROGRESSBARTEMPLATE","CHECKOUTMANAGERPROGRESSBARID","BUTTONS","PROGRESSBUTTONS","NEWADDRESSBUTTON","forEach","selector","querySelectorAll","button","this","getAttribute","serviceName","params","require","Ajax","call","methodname","args","done","response","data","parse","reloadbody","templates","render","then","html","js","replaceNodeContents","jsscript","scriptContent","replace","appendNodeContents","err","console","error","catch","controlButtons","progressBar","renderButtonTemplate","innerHTML","progressBarTemplate","Promise","all","log","fail"],"mappings":"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"}