{"version":3,"file":"checkout_manager.min.js","sources":["../src/checkout_manager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst SELECTORS = {\n    CHECKOUTMANAGERFORMID: '#shopping-cart-checkout-manager-form',\n    CHECKOUTMANAGERFORMTEMPLATE: 'local_shopping_cart/checkout_manager_form',\n    CHECKOUTMANAGERBUTTONSTEMPLATE: 'local_shopping_cart/checkout_manager_form_buttons',\n    CHECKOUTMANAGERBUTTONSID: 'shopping-cart-checkout-manager-buttons',\n    CHECKOUTMANAGERPROGRESSBARTEMPLATE: 'local_shopping_cart/checkout_manager_form_progress_bar',\n    CHECKOUTMANAGERPROGRESSBARID: 'shopping-cart-checkout-manager-status-bar',\n    BUTTONS: '.shopping-cart-checkout-manager-buttons button',\n    PROGRESSBUTTONS: '.shopping-cart-checkout-manager-status-bar button',\n    CHECKBOXITEMBODY: '#shopping-cart-checkout-manager-form-body',\n    NEWADDRESSBUTTON: '.shopping-cart-new-address',\n    FEEDBACKMESSAGE: '.shopping-cart-checkout-manager-alert-container'\n};\n\nconst WEBSERVICE = {\n    CHECKOUTPROCESS: 'local_shopping_cart_control_checkout_process',\n};\n\nconst EVENTSLISTENING = {\n    ADDRESSREDRAWN: 'local_shopping_cart/addressesRedrawn',\n};\n/**\n * Initializes the checkout manager functionality.\n */\nfunction init() {\n    initControlListener();\n    initChangeListener();\n    initVatNumberVerifyListener();\n    document.addEventListener(EVENTSLISTENING.ADDRESSREDRAWN, function() {\n        getNewAddress();\n    });\n}\n\n/**\n * Initializes the change listener for the form body.\n */\nfunction getNewAddress() {\n    const formBody = document.querySelector(SELECTORS.CHECKBOXITEMBODY);\n    const currentstep = formBody ? formBody.dataset.currentstep : null;\n    if (currentstep !== null) {\n        triggerButtonControlWebService(WEBSERVICE.CHECKOUTPROCESS, {\n            action: '',\n            currentstep: currentstep,\n        });\n    }\n}\n\n/**\n * Initializes the change listener for the form body.\n */\nfunction initVatNumberVerifyListener() {\n    const vatNumber = document.getElementById('shopping-cart-checkout-manager-verify-vat');\n    if (vatNumber) {\n        const formBody = document.querySelector(SELECTORS.CHECKBOXITEMBODY);\n        vatNumber.addEventListener('click', function() {\n            const countrySelect = document.getElementById('shopping-cart-checkout-manager-country-select');\n            const countryCode = countrySelect.value;\n\n            const vatNumberInput = document.getElementById('shopping-cart-checkout-manager-vat-number');\n            const vatNumber = vatNumberInput.value;\n\n            if (!countryCode || !vatNumber) {\n                alert('Please select a country and enter a valid VAT number.');\n                return;\n            }\n            const vatCountryCodeNumber = `${countryCode},${vatNumber}`;\n            const changedInput = {\n                'vatCodeCountry': vatCountryCodeNumber,\n            };\n            triggerButtonControlWebService(WEBSERVICE.CHECKOUTPROCESS, {\n                action: formBody.dataset.action,\n                currentstep: formBody.dataset.currentstep,\n                identifier: formBody.dataset.identifier,\n                changedinput: JSON.stringify(changedInput)\n            });\n        });\n    }\n}\n\n/**\n * Initializes the change listener for the form body.\n */\nfunction initControlListener() {\n    const buttonSelectors = [SELECTORS.BUTTONS, SELECTORS.PROGRESSBUTTONS];\n    buttonSelectors.forEach(selector => {\n        const buttons = document.querySelectorAll(selector);\n        buttons.forEach(button => {\n            button.addEventListener('click', function() {\n                const action = this.getAttribute('data-action');\n                const currentstep = this.getAttribute('data-currentstep');\n                if (\n                    action != undefined &&\n                    currentstep != undefined\n                ) {\n                    triggerButtonControlWebService(WEBSERVICE.CHECKOUTPROCESS, {\n                        action: action,\n                        currentstep: currentstep,\n                    });\n                }\n            });\n        });\n    });\n}\n\n/**\n * Initializes the change listener for the form body.\n */\nfunction initChangeListener() {\n    const formBody = document.querySelector(SELECTORS.CHECKBOXITEMBODY);\n    if (formBody) {\n        formBody.addEventListener('change', function(event) {\n            const target = event.target;\n            if (['INPUT', 'SELECT', 'TEXTAREA'].includes(target.tagName)) {\n                const processElements = document.querySelectorAll('[data-shopping-cart-process-data=\"true\"]');\n                const changedInputs = Array.from(processElements).map(element => {\n                    const value = element.type === 'checkbox' ? element.checked : element.value;\n                    if (\n                        element.type == 'radio'\n                    ) {\n                        if (element.checked) {\n                            return {\n                                name: element.name || 'unnamed',\n                                value: value,\n                            };\n                        }\n                        return null;\n                    } else {\n                        return {\n                            name: element.name || 'unnamed',\n                            value: value,\n                        };\n                    }\n                })\n                .filter(item => item !== null);\n                if (\n                    target.hasAttribute('data-skip-webservice')\n                ) {\n                    return;\n                }\n                if (target.type == 'checkbox') {\n                    target.value = target.checked;\n                }\n                triggerButtonControlWebService(WEBSERVICE.CHECKOUTPROCESS, {\n                    action: formBody.dataset.action,\n                    currentstep: formBody.dataset.currentstep,\n                    identifier: formBody.dataset.identifier,\n                    changedinput: JSON.stringify(changedInputs)\n                });\n            }\n        });\n    }\n}\n\n/**\n * Handles button control for the checkout process.\n * @param {string} serviceName - The name of the web service.\n * @param {Object} params - The parameters for the web service call.\n */\nfunction triggerButtonControlWebService(serviceName, params) {\n    require(['core/ajax'], function (Ajax) {\n        const requests = Ajax.call([{\n            methodname: serviceName,\n            args: params,\n        }]);\n        requests[0].done(function(response) {\n            updateCheckoutManagerPartials(response);\n        }).fail(function(err) {\n            // eslint-disable-next-line no-console\n            console.error('Failed to complete action. Error: ', err);\n            return;\n        });\n    });\n}\n\n/**\n * Updates specific Mustache partials dynamically based on the web service response.\n * @param {Object} data - The data returned from the web service.\n */\nfunction updateCheckoutManagerPartials(data) {\n    data.data = JSON.parse(data.data);\n    if (data.reloadbody) {\n        require(['core/templates'], function(templates) {\n            templates.render(SELECTORS.CHECKOUTMANAGERFORMTEMPLATE, data.data)\n                .then(function(html, js) {\n                    return templates.replaceNodeContents(document.querySelector(SELECTORS.CHECKOUTMANAGERFORMID), html, js);\n                })\n                .then(function() {\n                    if (data.jsscript) {\n                        const scriptContent = data.jsscript.replace(/<script[^>]*>|<\\/script>/gi, '');\n                        try {\n                            templates.appendNodeContents(\n                                document.querySelector(SELECTORS.CHECKOUTMANAGERFORMID),\n                                '',\n                                scriptContent\n                        );\n\n                        } catch (err) {\n                            // eslint-disable-next-line no-console\n                            console.error('Error executing script:', err);\n                        }\n                    }\n                    return;\n                })\n                .catch(function(err) {\n                    // eslint-disable-next-line no-console\n                    console.error('Error rendering body: ', err);\n                    return;\n                });\n        });\n    } else {\n        require(['core/templates'], function(templates) {\n            const controlButtons = document.getElementById(SELECTORS.CHECKOUTMANAGERBUTTONSID);\n            const progressBar = document.getElementById(SELECTORS.CHECKOUTMANAGERPROGRESSBARID);\n            const feedbackMessageContainer = document.querySelector(SELECTORS.FEEDBACKMESSAGE);\n\n            if (!controlButtons) {\n                // eslint-disable-next-line no-console\n                console.error('Target div not found in the DOM.');\n                return;\n            }\n            // Render new content for the div\n            const renderButtonTemplate = templates.render(SELECTORS.CHECKOUTMANAGERBUTTONSTEMPLATE, data.data)\n                .then(function(html) {\n                    controlButtons.innerHTML = html;\n                    return;\n                })\n                .catch(function(err) {\n                    // eslint-disable-next-line no-console\n                    console.error('Error updating the specific div:', err);\n                });\n            // eslint-disable-next-line no-console\n            console.log('updating the specific div:', data);\n            const progressBarTemplate = templates.render(SELECTORS.CHECKOUTMANAGERPROGRESSBARTEMPLATE, data.data)\n                .then(function(html) {\n                    progressBar.innerHTML = html;\n                    return;\n                })\n                .catch(function(err) {\n                    // eslint-disable-next-line no-console\n                    console.error('Error updating the specific div:', err);\n                });\n            if (feedbackMessageContainer) {\n                const datafeedback = JSON.parse(data.managerdata);\n                if (\n                    feedbackMessageContainer &&\n                    datafeedback.feedback != undefined\n                ) {\n                    templates.render('local_shopping_cart/checkout_manager_feedback', datafeedback.feedback)\n                        .then(function(html) {\n                            feedbackMessageContainer.innerHTML = html;\n                            return;\n                        })\n                        .catch(function(err) {\n                            // eslint-disable-next-line no-console\n                            console.error('Error updating feedback message:', err);\n                        });\n                }\n            }\n            Promise.all([renderButtonTemplate, progressBarTemplate]).then(function() {\n                // eslint-disable-next-line no-console\n                console.log('Both templates have been updated.');\n\n                initControlListener();\n                return;\n            }).catch(function(err) {\n                // eslint-disable-next-line no-console\n                console.error('Render problem:', err);\n            });\n        });\n\n    }\n}\n\nexport {init};"],"names":["initControlListener","formBody","document","querySelector","SELECTORS","CHECKBOXITEMBODY","addEventListener","event","target","includes","tagName","processElements","querySelectorAll","changedInputs","Array","from","map","element","value","type","checked","name","filter","item","hasAttribute","triggerButtonControlWebService","WEBSERVICE","CHECKOUTPROCESS","action","dataset","currentstep","identifier","changedinput","JSON","stringify","initChangeListener","vatNumber","getElementById","countryCode","alert","changedInput","vatCodeCountry","initVatNumberVerifyListener","EVENTSLISTENING","ADDRESSREDRAWN","getNewAddress","CHECKOUTMANAGERFORMID","CHECKOUTMANAGERFORMTEMPLATE","CHECKOUTMANAGERBUTTONSTEMPLATE","CHECKOUTMANAGERBUTTONSID","CHECKOUTMANAGERPROGRESSBARTEMPLATE","CHECKOUTMANAGERPROGRESSBARID","BUTTONS","PROGRESSBUTTONS","NEWADDRESSBUTTON","FEEDBACKMESSAGE","forEach","selector","button","this","getAttribute","undefined","serviceName","params","require","Ajax","call","methodname","args","done","response","data","parse","reloadbody","templates","render","then","html","js","replaceNodeContents","jsscript","scriptContent","replace","appendNodeContents","err","console","error","catch","controlButtons","progressBar","feedbackMessageContainer","renderButtonTemplate","innerHTML","log","progressBarTemplate","datafeedback","managerdata","feedback","Promise","all","fail"],"mappings":"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"}