define("local_shopping_cart/checkout_manager",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=function(){initControlListener(),function(){const formBody=document.querySelector(SELECTORS.CHECKBOXITEMBODY);formBody&&formBody.addEventListener("change",(function(event){const target=event.target;if(["INPUT","SELECT","TEXTAREA"].includes(target.tagName)){const processElements=document.querySelectorAll('[data-shopping-cart-process-data="true"]'),changedInputs=Array.from(processElements).map((element=>{const value="checkbox"===element.type?element.checked:element.value;return"radio"==element.type?element.checked?{name:element.name||"unnamed",value:value}:null:{name:element.name||"unnamed",value:value}})).filter((item=>null!==item));if(target.hasAttribute("data-skip-webservice"))return;"checkbox"==target.type&&(target.value=target.checked),triggerButtonControlWebService(WEBSERVICE.CHECKOUTPROCESS,{action:formBody.dataset.action,currentstep:formBody.dataset.currentstep,identifier:formBody.dataset.identifier,changedinput:JSON.stringify(changedInputs)})}}))}(),function(){const vatNumber=document.getElementById("shopping-cart-checkout-manager-verify-vat");if(vatNumber){const formBody=document.querySelector(SELECTORS.CHECKBOXITEMBODY);vatNumber.addEventListener("click",(function(){const countryCode=document.getElementById("shopping-cart-checkout-manager-country-select").value,vatNumber=document.getElementById("shopping-cart-checkout-manager-vat-number").value;if(!countryCode||!vatNumber)return void alert("Please select a country and enter a valid VAT number.");const changedInput={vatCodeCountry:`${countryCode},${vatNumber}`};triggerButtonControlWebService(WEBSERVICE.CHECKOUTPROCESS,{action:formBody.dataset.action,currentstep:formBody.dataset.currentstep,identifier:formBody.dataset.identifier,changedinput:JSON.stringify(changedInput)})}))}}(),document.addEventListener(EVENTSLISTENING.ADDRESSREDRAWN,(function(){!function(){const formBody=document.querySelector(SELECTORS.CHECKBOXITEMBODY),currentstep=formBody?formBody.dataset.currentstep:null;null!==currentstep&&triggerButtonControlWebService(WEBSERVICE.CHECKOUTPROCESS,{action:"",currentstep:currentstep})}()}))};
/*
   * @package    local_shopping_cart
   * @copyright  Wunderbyte GmbH <info@wunderbyte.at>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const SELECTORS={CHECKOUTMANAGERFORMID:"#shopping-cart-checkout-manager-form",CHECKOUTMANAGERFORMTEMPLATE:"local_shopping_cart/checkout_manager_form",CHECKOUTMANAGERBUTTONSTEMPLATE:"local_shopping_cart/checkout_manager_form_buttons",CHECKOUTMANAGERBUTTONSID:"shopping-cart-checkout-manager-buttons",CHECKOUTMANAGERPROGRESSBARTEMPLATE:"local_shopping_cart/checkout_manager_form_progress_bar",CHECKOUTMANAGERPROGRESSBARID:"shopping-cart-checkout-manager-status-bar",BUTTONS:".shopping-cart-checkout-manager-buttons button",PROGRESSBUTTONS:".shopping-cart-checkout-manager-status-bar button",CHECKBOXITEMBODY:"#shopping-cart-checkout-manager-form-body",NEWADDRESSBUTTON:".shopping-cart-new-address",FEEDBACKMESSAGE:".shopping-cart-checkout-manager-alert-container"},WEBSERVICE={CHECKOUTPROCESS:"local_shopping_cart_control_checkout_process"},EVENTSLISTENING={ADDRESSREDRAWN:"local_shopping_cart/addressesRedrawn"};function initControlListener(){[SELECTORS.BUTTONS,SELECTORS.PROGRESSBUTTONS].forEach((selector=>{document.querySelectorAll(selector).forEach((button=>{button.addEventListener("click",(function(){const action=this.getAttribute("data-action"),currentstep=this.getAttribute("data-currentstep");null!=action&&null!=currentstep&&triggerButtonControlWebService(WEBSERVICE.CHECKOUTPROCESS,{action:action,currentstep:currentstep})}))}))}))}function triggerButtonControlWebService(serviceName,params){require(["core/ajax"],(function(Ajax){Ajax.call([{methodname:serviceName,args:params}])[0].done((function(response){var data;(data=response).data=JSON.parse(data.data),data.reloadbody?require(["core/templates"],(function(templates){templates.render(SELECTORS.CHECKOUTMANAGERFORMTEMPLATE,data.data).then((function(html,js){return templates.replaceNodeContents(document.querySelector(SELECTORS.CHECKOUTMANAGERFORMID),html,js)})).then((function(){if(data.jsscript){const scriptContent=data.jsscript.replace(/<script[^>]*>|<\/script>/gi,"");try{templates.appendNodeContents(document.querySelector(SELECTORS.CHECKOUTMANAGERFORMID),"",scriptContent)}catch(err){console.error("Error executing script:",err)}}})).catch((function(err){console.error("Error rendering body: ",err)}))})):require(["core/templates"],(function(templates){const controlButtons=document.getElementById(SELECTORS.CHECKOUTMANAGERBUTTONSID),progressBar=document.getElementById(SELECTORS.CHECKOUTMANAGERPROGRESSBARID),feedbackMessageContainer=document.querySelector(SELECTORS.FEEDBACKMESSAGE);if(!controlButtons)return void console.error("Target div not found in the DOM.");const renderButtonTemplate=templates.render(SELECTORS.CHECKOUTMANAGERBUTTONSTEMPLATE,data.data).then((function(html){controlButtons.innerHTML=html})).catch((function(err){console.error("Error updating the specific div:",err)}));console.log("updating the specific div:",data);const progressBarTemplate=templates.render(SELECTORS.CHECKOUTMANAGERPROGRESSBARTEMPLATE,data.data).then((function(html){progressBar.innerHTML=html})).catch((function(err){console.error("Error updating the specific div:",err)}));if(feedbackMessageContainer){const datafeedback=JSON.parse(data.managerdata);feedbackMessageContainer&&null!=datafeedback.feedback&&templates.render("local_shopping_cart/checkout_manager_feedback",datafeedback.feedback).then((function(html){feedbackMessageContainer.innerHTML=html})).catch((function(err){console.error("Error updating feedback message:",err)}))}Promise.all([renderButtonTemplate,progressBarTemplate]).then((function(){console.log("Both templates have been updated."),initControlListener()})).catch((function(err){console.error("Render problem:",err)}))}))})).fail((function(err){console.error("Failed to complete action. Error: ",err)}))}))}}));

//# sourceMappingURL=checkout_manager.min.js.map