name: Moodle Plugin CI

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    uses: Wunderbyte-GmbH/catalyst-moodle-workflows/.github/workflows/ci.yml@main
    # Required if you plan to publish to the Moodle plugins directory
    # secrets:
    #   moodle_org_token: ${{ secrets.MOODLE_ORG_TOKEN }}
    with:
      min_php: '7.4'
      # Custom configuration options
      # The following are example settings you might want to adjust based on your plugin's needs

      # If you need to install additional plugins as dependencies
      # extra_plugin_runners: 'moodle-plugin-ci add-plugin danmarsden/moodle-mod_attendance --branch MOODLE_404_STABLE'
      extra_plugin_runners: |
        moodle-plugin-ci add-plugin --branch main Wunderbyte-GmbH/moodle-local_wunderbyte_table
        moodle-plugin-ci add-plugin --branch master branchup/moodle-filter_shortcodes
        moodle-plugin-ci add-plugin --branch main Wunderbyte-GmbH/moodle-tool_mocktesttime
        # WORKAROUND 17/04/2025: The following code is a workaround for the "File is stale and needs to be rebuilt" error
        # Load NVM and use the version from .nvmrc
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        cd moodle
        nvm use
        npm install
        npm install -g grunt-cli
        cd ../plugin
        echo "=== Building AMD files before CI check ==="
        grunt --gruntfile ../moodle/Gruntfile.js amd
        echo "AMD files built successfully"
        cd ..

      # If you need to disable specific tests
      disable_phpcpd: true
      # disable_phpunit: false
      # disable_grunt: false
      # disable_mustache: false
      # disable_phpdoc: false
      # disable_phpcs: false
      # disable_phplint: false
      # disable_phpcpd: false
      # disable_ci_validate: false

      # For strict code quality checks
      # codechecker_max_warnings: 0

      # If you need to enable PHPMD
      # enable_phpmd: true

      # If you need to ignore specific paths (third-party libraries are ignored by default)
      # ignore_paths: 'some/path,another/path'

      # Override to exclude stale AMD file check (similar to your current workaround)
      # This might not be needed with the reusable workflow as it might handle this already
      # disable_grunt: true  # Only use this if you're having issues with grunt

      # If you need to specify a custom minimum PHP version
      # min_php: '7.4'
