name: Moodle Plugin CI

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: self-hosted

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
      mariadb:
        image: mariadb:10.8
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        include:
#          - php: 8.3
#            moodle-branch: MOODLE_405_STABLE
#            database: pgsql
          - php: 8.3
            moodle-branch: MOODLE_405_STABLE
            database: mariadb
          - php: 7.4
            moodle-branch: MOODLE_401_STABLE
            database: pgsql
            extensions: mbstring, curl, zip, gd, xmlrpc, soap, intl, exif
#          - php: 7.4
#            moodle-branch: MOODLE_401_STABLE
#            database: mariadb
#            extensions: mbstring, curl, zip, gd, xmlrpc, soap, intl, exif, mysqli

    steps:
      - name: Clean workspace for matrix job
        run: |
          MATRIX_ID="${{ matrix.php }}-${{ matrix.database }}-${{ matrix.moodle-branch }}"
          rm -rf "$GITHUB_WORKSPACE"
          mkdir -p "$GITHUB_WORKSPACE/matrix-$MATRIX_ID"
          echo "MATRIX_DIR=matrix-$MATRIX_ID" >> $GITHUB_ENV

      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          path: ${{ env.MATRIX_DIR }}/plugin

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ matrix.extensions }}
          ini-values: max_input_vars=5000
          # If you are not using code coverage, keep "none". Otherwise, use "pcov" (Moodle 3.10 and up) or "xdebug".
          # If you try to use code coverage with "none", it will fallback to phpdbg (which has known problems).
          coverage: none

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^4
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

      - name: Install moodle-plugin-ci
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        run: |
          moodle-plugin-ci add-plugin --branch main Wunderbyte-GmbH/moodle-local_wunderbyte_table
          moodle-plugin-ci add-plugin --branch master branchup/moodle-filter_shortcodes
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}
          MUSTACHE_IGNORE_NAMES: 'cashier.mustache,shopping_cart_item.mustache,history_item.mustache,form-user-selector-suggestion.mustache,shopping_cart_popover.mustache'

      - name: PHP Lint
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        if: ${{ always() }}
        run: moodle-plugin-ci phplint

      - name: PHP Copy/Paste Detector
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpcpd

      - name: PHP Mess Detector
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpmd

      - name: Moodle Code Checker
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        if: ${{ always() }}
        run: moodle-plugin-ci codechecker --max-warnings 0

      - name: Moodle PHPDoc Checker
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        if: ${{ always() }}
        run: moodle-plugin-ci phpdoc

      - name: Validating
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        if: ${{ always() }}
        run: moodle-plugin-ci validate

      - name: Check upgrade savepoints
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        if: ${{ always() }}
        run: moodle-plugin-ci savepoints

#      - name: Mustache Lint
#        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
#        if: ${{ always() }}
#        run: moodle-plugin-ci mustache
      - name: Check directory structure
        if: ${{ always() }}
        run: |
          echo "Current directory: $(pwd)"
          echo "MATRIX_DIR: $MATRIX_DIR"
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          ls -la $GITHUB_WORKSPACE/$MATRIX_DIR
          ls -la $GITHUB_WORKSPACE/$MATRIX_DIR/moodle || echo "Moodle directory not found"
          ls -la $GITHUB_WORKSPACE/$MATRIX_DIR/moodle/local || echo "Local directory not found"

#      - name: Force rebuild JS files
#        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}/moodle/local/shopping_cart
#        run: |
#          npm install
#          npx grunt amd
#          git status

#      - name: Debug JS files
#        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}/plugin
#        run: |
#          ls -la amd/build/
#          ls -la amd/src/
#          md5sum amd/build/*.js amd/build/*.map
#          md5sum amd/src/*.js

#      - name: Grunt
#        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
#        if: ${{ always() }}
#        run: moodle-plugin-ci grunt --max-lint-warnings 0

      - name: Grunt
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        if: ${{ always() }}
        run: |
          cd moodle/local/shopping_cart
          npm install
          npx grunt amd
          ls -la amd/build/
          ls -la amd/src/
          md5sum amd/build/*.js amd/build/*.map
          md5sum amd/src/*.js
          cd ../../..
          moodle-plugin-ci grunt --max-lint-warnings 0

#      - name: PHPUnit tests
#        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
#        if: ${{ always() }}
#        run: moodle-plugin-ci phpunit

#      - name: Behat features
#        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
#        if: ${{ !cancelled() }}
#        run: |
#          # Clean up any existing selenium container
#          docker rm -f selenium || true
#          # Run the Behat tests with a specific Selenium image
#          moodle-plugin-ci behat --profile chrome --selenium selenium/standalone-chrome:latest
#        ## Run --dump to get faild page HTML in the output stream
#        ## run: moodle-plugin-ci behat --profile chrome --dump


      - name: Prepare Behat Faildump for upload
        if: ${{ failure() }}
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        run: |
          # We don't need to copy anything as we'll upload directly from the source
          # Just ensuring the directory exists for the upload step
          mkdir -p ${{ github.workspace }}/${{ env.MATRIX_DIR }}/moodledata/behat_dump

      - name: Upload Behat Faildump
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: Behat-Faildump-${{ matrix.php }}-${{ matrix.database }}-${{ matrix.moodle-branch }}
          path: ${{ github.workspace }}/${{ env.MATRIX_DIR }}/moodledata/behat_dump
          retention-days: 2
          if-no-files-found: ignore

      # Inwoke remote SSH connection if necessary
      #- name: Setup tmate session
      #  if: ${{ failure() }}
      #  uses: mxschmitt/action-tmate@v3

      - name: Mark cancelled jobs as failed.
        working-directory: ${{ github.workspace }}/${{ env.MATRIX_DIR }}
        if: ${{ cancelled() }}
        run: exit 1

      - name: Clean up Docker containers
        if: ${{ always() }}
        run: |
          CONTAINER_NAME="selenium-${{ matrix.php }}-${{ matrix.database }}-${{ github.run_id }}"
          docker stop $CONTAINER_NAME || true
          docker rm $CONTAINER_NAME || true
